{"lastUpdate":1723000743493,"outputHash":"c7b466cd971f2e3eca1a4faf3a3929e2","numberOfLines":3499,"uniqueLines":["ctx.fillStyle = `rgb(0,${255 - firework.radius * (205 / firework.maxRadius)},0)`","<!DOCTYPE html>","lastWidth = window.innerWidth","recurseDir(startPath)","function getFolderHash(startPath) {","if (Math.abs(x - firework.x) + Math.abs(y - firework.y) <= firework.radius) {","<!-- Primary Meta Tags -->","fireworks.splice(index, 1)","return combinedHash.digest('hex')","let html = fs.readFileSync('./blankPost.html', 'utf8')","const fontSize = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i).test(navigator.userAgent || navigator.vendor || window.opera) ? 50 : 25","html = html.split('meta url link').join(`https://jacks-project-hub.vercel.app/posts/${name}/`)","for (let x = Math.max(firework.x - firework.radius, 0); x < Math.min(firework.x + firework.radius, grid.length); x++)","ctx.fillRect(0, 0, width, height)","ctx.fillText(distance < firework.radius ? '0' : '1', x * fontSize, y * fontSize)","html = html.split('meta title link').join(`${name} - Jack's project hub`)","let needWords = false",".then(response => response.json())","for (let i = 0; i < balls.length; i++) {","backgroundStarted = Date.now()","let outputHashChanged = false","<title><!-- title name link --></title>","height = canvas.height = window.innerHeight","const x = Math.floor(Math.random() * grid.length)","<meta name=\"title\" content=\"meta title link\" />","<script src=\"./backgroundManager.js\"></script>","balls.unshift(balls.pop())","const oldPostHashes = mem.postHashes ?? {}","ctx.textBaseline = 'top'","if (fs.existsSync(`${postPath}/preview.txt`)) html += markup.translate(fs.readFileSync(`${postPath}/preview.txt`, 'utf8'), 1, ['preview'])","if (Math.random() < .1) {","lastHeight = window.innerHeight","function countLinesOfCode(directory = './') {","mem.orderedLines = getOrderedLinesOfCode()","let total = 0","requestAnimationFrame(() => setTimeout(update, 1000 / maxUps - (Date.now() - lastUpdate)))","ctx.font = `${fontSize}px 'Fira Code'`","ctx.fillRect(x * fontSize, y * fontSize, fontSize, fontSize)","function recurseDir(currentPath) {","<meta name=\"description\" content=\"meta description link\" />","const distance = Math.abs(x - firework.x) + Math.abs(y - firework.y) + 1","const hashSum = crypto.createHash('md5')","<meta property=\"og:type\" content=\"website\" />","const postsUpdated = mem.postsUpdated ?? {}","maxRadius: Math.ceil(Math.random() * 15 + 10),","const linesPerSec = fontSize == 50 ? 5 : 10","--background-dark: rgb(from #3336 r g b / var(--transparentOpacity));",".then(data => {","<meta property=\"og:url\" content=\"meta url link\" />","<!-- Open Graph / Facebook -->","const text = markup.stripTags(fs.readFileSync(`${postPath}/preview.txt`, 'utf-8'))","function saveAndCopyStats(updateLines) {","if (offsets[index] == 0) {","ctx.fillStyle = '#000'","for (let y = Math.max(firework.y - firework.radius, 0); y < Math.min(firework.y + firework.radius, grid[0].length); y++) {","for (let y = Math.max(firework.y - firework.radius, 0); y < Math.min(firework.y + firework.radius, grid[0].length); y++)","update()","html = html.split('meta image link').join(`https://jacks-project-hub.vercel.app/posts/${name}/preview.png`)","<meta property=\"og:title\" content=\"meta title link\" />","html = html.split('meta description link').join(text.length < 100 ? text : text.slice(0, 97) + '...')","if (firework.radius == firework.maxRadius) {","cycle = (backgroundPaths.length > 1)","offsets = []","function getOutputPaths(currentPath = './output', out = []) {","fetch('./mem.json')","const postHashes = fs.readdirSync('./output/posts').reduce((acc, post) => ({ ...acc, [post]: getFolderHash(`./output/posts/${post}`) }), {})","let [width, height] = [0, 0]","<html lang=\"en\">","","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">","for (let x = 0; x < width / fontSize; x++)","fillGrid(canvas,ctx)","paddles[0] -= Math.max(-3, Math.min(3, paddles[0] - (balls[0].y - (paddleSize - 1) / 2)))","<meta charset=\"UTF-8\">","<head>","fs.readdirSync('./output/posts').forEach(post => {","function fillGrid(canvas, ctx) {","<link rel=\"stylesheet\" href=\"../../postStyles.css\">","</head>","<body>","<meta property=\"og:description\" content=\"meta description link\" />","<canvas id=\"backgroundCanvas\"></canvas>","numberOfUniqueLines = data.uniqueLines.length","<div id=\"overlay\">","<meta property=\"twitter:card\" content=\"summary_large_image\" />","<!-- Twitter -->","} else if ((firework.counter = (firework.counter + 1) % firework.speed) == 0) firework.radius++","const word = (words[Math.floor(Math.random() * words.length)] + ' ').split('')","export function start(canvas, ctx) {","<div class=\"scrollOffset\"></div>","<!-- title markup link -->","--transparentOpacity: 50%;","paddles[1] -= Math.max(-3, Math.min(3, paddles[1] - (balls[0].y - (paddleSize - 1) / 2)))","while (specialChars.some(char => words.includes(char)))","<meta property=\"og:image\" content=\"meta image link\" />","for (let y = -1; y < height / fontSize + 1; y++) {","<div id=\"info\">","const fullPath = path.join(directory, file)","<div id=\"content\">","balls[i].sy = Math.floor(Math.random() * 2) * 2 - 1","<meta property=\"twitter:title\" content=\"meta title link\" />","const files = fs.readdirSync(directory)","html = html.replace('<!-- title name link -->', name)","balls[i].sx = Math.floor(Math.random() * 2) * 2 - 1","<meta property=\"twitter:description\" content=\"meta description link\" />","if (distance <= firework.radius) {","<meta property=\"twitter:url\" content=\"meta url link\" />","<meta property=\"twitter:image\" content=\"meta image link\" />","const specialChars = '`~!@#$%^&*()_-+={[}]|\\\\:;\"\\'<,>.?/1234567890'.split('')","grid = [[]]","<div id=\"return_link\">","<div id=\"post\">","<script>","if (process.argv.includes('hidePostContent')) {","<!-- </div> -->","let grid = [[]]","<a href=\"../../\">Home</a>","let combinedHash = crypto.createHash('md5')","export function update(canvas,ctx) {","<div id=\"post_background\">","width = canvas.width = window.innerWidth","let [lastWidth, lastHeight] = [0, 0]","</script>","</div>","html = html.replace('<!-- post link -->', markup.translate(fs.readFileSync(`${postPath}/script.txt`, 'utf8')))","for (let i = 0; i < Math.random() * 25; i++) {","words = data.uniqueLines.join(' ')","<!-- will autofill on website load -->","grid = [...grid, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize) + 1).map(colum => [...colum, ...new Array(Math.ceil(height / fontSize)).fill(0)].splice(0, Math.ceil(height / fontSize) + 1))","<!-- post link -->","ctx.fillStyle = item[1]","const y = Math.floor(Math.random() * grid[0].length)","<div id=\"returnToTopButton\">","files.forEach(file => {","<span onclick=\"window.scroll({top:0,left:0,behavior:'smooth'})\">Return to top</span>","</html>","let tailY = snake[snake.length - 1].y","// stat update script link","const fileBuffer = fs.readFileSync(filePath)","grid = [...grid, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize) + 1).map(colum => [...colum, ...new Array(Math.ceil(height / fontSize)).fill(0).map(() => Math.floor(Math.random() * 255))].splice(0, Math.ceil(height / fontSize) + 1))","blurred = false","lineColors = data.uniqueLines.reduce((acc, line) => ({ ...acc, [line]: stringToNumberHash(line) * 205 + 50 }), {})","grid[x][y] = Math.floor(Math.random() * 255)","let fireworks = []","export function start(canvas,ctx) {","offsets[index] = word.length","loadedBackgrounds.push(backgroundPaths[backgroundIndex])","<title>Jack's project hub</title>","hashSum.update(fileBuffer)","</body>","html += '</div>'","let title = name","const stats = fs.statSync(fullPath)","total += countLinesOfCode(fullPath)","balls[i] = {}","const changedPosts = []","<meta name=\"description\"","} else if (stats.isFile() && !ignoredPaths.count.includes(fullPath))","return html","columns.forEach((colum, x) => {","offsets = [...offsets, ...new Array(Math.ceil(width / fontSize)).fill(0)].splice(0, Math.ceil(width / fontSize))","specialChars.forEach(char =>","words = words.split(char).join(' ')","<script src=\"./updateStats.js\"></script>","if (uniqueLines != undefined) {","font-family: 'Fira Code';","<meta name=\"title\" content=\"Jack's project hub\" />","speed: Math.ceil(Math.random() * 10)","if (Date.now() - lastFirework >= 1000) {","if (currentBackground.update != undefined) await currentBackground.update(canvas, ctx)","if (injectLivePreview) html += livePreviewInjection","if (fs.existsSync(`${postPath}/title.txt`)) title = markup.translate(fs.readFileSync(`${postPath}/title.txt`, 'utf8'))","if (lastWidth != window.innerWidth || lastHeight != innerHeight)","ctx.fillStyle = 'rgb(0,50,0)'","balls[i].x = Math.round(width / fontSize / 2) + Math.round((i - balls.length / 2 + .5) * width / fontSize / balls.length / 2)","paddleSize = Math.round(height / fontSize / 3 / 2) * 2 + 1","<link rel=\"stylesheet\" href=\"./siteStyles.css\">","<meta property=\"og:title\" content=\"Jack's project hub\" />","fs.writeFileSync(`./output/posts/${name}/index.html`, html, 'utf8')","function drip(colum, index) {","<meta property=\"og:description\"","const line = uniqueLines[lineNumber - 1]","const lineNumber = numberOfUniqueLines - (Math.floor(offset) - y + numberOfUniqueLines) % numberOfUniqueLines","const textY = (y + offset % 1) * fontSize","export function stop() {","--black-solid: rgb(from #000 r g b / var(--transparentOpacity));","ctx.fillStyle = `rgb(0,${lineColors[line]},0)`","const items = fs.readdirSync(currentPath)","content=\"THE place to read about all of my projects, with exclusive content not seen elsewhere!\" />",":root {","lastFirework = Date.now()","const mem = getMem()","<div id=\"titleText\">","<meta property=\"og:url\" content=\"https://jacks-project-hub.vercel.app/\" />","function fillColumns() {","radius: 1,","for (let y = 0; y < height / fontSize; y++) {","src: url('../../firaCode.ttf') format('truetype');","if (stats.isDirectory() && !ignoredPaths.count.includes(fullPath)) {","canvas.classList.remove('blur')","if (currentBackground.start != undefined) await currentBackground.start(canvas, ctx)","let lastFirework = 0","html = html.replace('<div id=\"overlay\">','<div id=\"overlay\" style=\"display:none\">')","const lineOffset = String(numberOfUniqueLines).length * fontWidth","--background: rgb(from #45454582 r g b / var(--transparentOpacity));","function stringToNumberHash(str) {","<meta property=\"twitter:image\" content=\"https://jacks-project-hub.vercel.app/preview.png\" />","ctx.fillText(lineNumber, (lineOffset - String(lineNumber).length * fontWidth) / 2, textY)","currentBackground = await import(backgroundPaths[backgroundIndex])","font-style: normal;","const chars = '`~!@#$%^&*()_-+={[}]|\\\\:;\"\\'<,>.?/'.split('')","return hashSum.digest('hex')","columns = []","let uniqueLines, lineColors, fontWidth, numberOfUniqueLines","<div id=\"posts\">","//has to be set after the first update so the first background will always get loaded","<meta property=\"og:image\" content=\"https://jacks-project-hub.vercel.app/preview.png\" />","fireworks.forEach((firework, index) => {","x: Math.floor(Math.random() * grid.length),","} else if (stat.isFile() && !ignoredPaths.scan.includes(fullPath) && item !== 'preview.png') {","<meta property=\"twitter:title\" content=\"Jack's project hub\" />","ctx.fillText('0', x * fontSize, y * fontSize)","const lineLength = Math.ceil((width - lineOffset) / fontWidth)","<meta property=\"twitter:url\" content=\"https://jacks-project-hub.vercel.app/\" />","html = html.replace('// stat update script link', `const postName = '${name}'\\r\\n${fs.readFileSync('./updatePostStats.js', 'utf8')}`.split('\\r\\n').join('\\r\\n '))","fillColumns()","if (stat.isDirectory() && !ignoredPaths.path.includes(fullPath)) {","fillGrid(canvas, ctx)","y: Math.floor(Math.random() * grid[0].length),","html = html.replace('<!-- title markup link -->', title)","ctx.fillStyle = `rgb(0,${grid[x][y]},0)`","Jack's project hub","let snakes = []","export function update(canvas, ctx) {","recurseDir(fullPath)","columns = [...columns, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize))","font-weight: normal;","balls[i].ly = balls[i].y","for (let i = 0; i < str.length; i++) {","counter: 0,","let snake = snakes[Math.floor(Math.random() * snakes.length)]","let tailX = snake[snake.length - 1].x","if (!fs.existsSync(`${from}/${file}`) && !['backgroundManager.js', 'index.html', 'preview.png'].includes(file))","total += fs.readFileSync(fullPath, 'utf8').split('\\r\\n').length","grid = [...grid, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize) + 1).map(colum => [...colum, ...new Array(Math.ceil(height / fontSize)).fill(50)].splice(0, Math.ceil(height / fontSize) + 1))","<meta property=\"twitter:description\"","reject(error)","Object.keys(lastFileHashes).forEach(key => {","(async () => {","fireworks.push({","switch (Math.floor(Math.random() * 4)) {",";","case 3:","fs.rmSync(`./output/posts/${name}/${file}`, { recursive: true, force: true })","grid[tailX][tailY] -= 25","function generatePostCard(postPath) {","if (stat.isDirectory() && !ignoredPaths.scan.includes(fullPath)) {","const newHash = getFolderHash('./output')","if (headY + 1 < grid[0].length && (snake[2].y != headY + 1 || trys > 50)) {","case 0:","Array.from(document.getElementsByClassName('post_row')).forEach(row => row.classList.add('post_row_old'))","const fileHashes = mem.fileHashes","lastRowElement.classList.add('post_row')","words = words.split(' ').filter(word => word != '')","const borderSize = 25","needWords = true","grid[snake[0].x][snake[0].y] += 50","if (fs.existsSync(`./output/posts/${name}/${file}`))","ctx.fillStyle = `rgb(0,${grid[tailX][tailY]},0)`","<div class=\"post\" onclick=\"window.location.href='./posts/Making a custom blog/'\">\n <div class=\"title\">\n \n <div class=\"markup\" style=\"color:#fff; font-style:normal; font-weight:normal; font-size:calc(xx-large * 0.25); text-decoration: none;margin:0; padding:0; word-wrap:break-word; width:100%; height:100%;\">\n <div style=\"text-align:center;\">Making a <span style=\"color:#0f0; font-weight:bold;\"><code>|[custom]</code></span> blog</div>\n </div>\n \n </div>\n \n <div class=\"markup preview\" style=\"color:#0f0; font-style:normal; font-weight:normal; font-size:small; text-decoration: none;margin:0; padding:0; word-wrap:break-word; width:100%; height:100%;\">\n <div style=\"text-align:center;\">I like to create posts, but have never found a good platform to do so.<br>Follow along as I create my own blog site, complete with custom markup, live backgrounds, and more!</div>\n </div>\n </div>","--white: rgb(from #fff r g b / var(--transparentOpacity));","trys++","<!-- posts link -->","ctx.fillText('0', tailX * fontSize, tailY * fontSize)","{","const maxWidth = wrapper.getBoundingClientRect().width - borderSize * 2","items.forEach(item => {","if (fs.existsSync(`${postPath}/title.txt`)) title = markup.translate(fs.readFileSync(`${postPath}/title.txt`, 'utf8'), 1 / 4)","if (words == undefined)","const updateGrid = () => {","snake[0].y++","ctx.fillRect(headX * fontSize, headY * fontSize, fontSize, fontSize)","html += `","combinedHash.update(fileHash)","const postPadding = 10","--highlight-dark: #0f06;","<div class=\"title\">","colum.forEach((item, y) => {","const offset = Date.now() / (1000 / linesPerSec)","@font-face {","snake[0].x--","let lastRowElement = document.createElement('div')","<script> //Controls the grid for the posts","mem.lastUpdate = Date.now()","outputHashChanged = true","const width = post.getBoundingClientRect().width + postPadding * 2","function scan(to, from) {","ctx.fillStyle = `rgb(0,${grid[headX][headY]},0)`","if (headX > 0 && (snake[2].x != headX - 1 || trys > 50)) {","return total","hasMoved = true","let html = `<div class=\"post\" onclick=\"window.location.href='./posts/${name}/'\">`","let trys = 0","fs.rmSync(`${to}/${file}`, { recursive: true, force: true })","function getUniqueLinesOfCode() {","if (mem.outputHash != newHash) {","let codeLines = []","const fileHash = hashFileContents(fullPath)","for (const post of posts) {","${title}","const stat = fs.statSync(fullPath)","paddles.map(() => Math.round(height / fontSize / 2))","balls[i].y = Math.round(height / fontSize / 2) + Math.round((Math.random() * 2 - 1) * (height / fontSize / 3))","ctx.fillRect(0, 0, canvas.width, canvas.height)","ctx.fillText('1', headX * fontSize, headY * fontSize)","const posts = Array.from(document.getElementsByClassName('post'))","while (!hasMoved) {","--highlight: #0f0f;","offsets[index]--","if (needWords) {","for (let i = 0; i < height * 2; i += fontSize)","if (lastRowWidth === 0 || lastRowWidth + width < maxWidth) {","--black: rgb(from #0006 r g b / var(--transparentOpacity));","if (error)","mem.postHashes = postHashes","--border: rgb(from #9996 r g b / var(--transparentOpacity));","function execAsync(command, options) {","function readFile(path) {","const wrapper = document.getElementById('posts')","const fullPath = path.join(currentPath, item)","break","let hash = 0","ctx.fillRect(tailX * fontSize, tailY * fontSize, fontSize, fontSize)","let headX = snake[0].x","let lastRowWidth = 0","let fileContent = fs.readFileSync(path, 'utf8').split('\\r\\n')","codeLines.push(item)","columns.forEach((colum, index) => drip(colum, index))","getOutputPaths(fullPath, out)","fileContent.forEach(item => {","case 1:","return codeLines","needWords = false","return new Promise((resolve, reject) => {","if (headY > 0 && (snake[2].y != headY - 1 || trys > 50)) {","snakes = new Array(3).fill(0).map(() => new Array(25).fill(0).map(() => ({ x: Math.floor(Math.random() * grid.length), y: Math.floor(Math.random() * grid[0].length) })))","else {","if (!codeLines.includes(item))","balls[i].lx = balls[i].x","codeLines = codeLines.sort(() => Math.random() * 2 - 1)","lastRowElement = document.createElement('div')","let headY = snake[0].y","exec(command, options, (error, stdout, stderr) => {",".catch(error => {","for (const file of fs.readdirSync(to))","for (const file of ['script.txt', 'title.txt', 'preview.txt'])","while (item.split(' ').length > 1)","for (let index = snake.length - 1; index > 0; index--) {","snake[0].y--","body {","else if (fs.statSync(`${to}/${file}`).isDirectory())","snake[index] = { ...snake[index - 1] }","let hasMoved = false","const color = `rgb(0,${Math.round(Math.random() * 205) + 50},0)`","wrapper.appendChild(lastRowElement)","else","function scanDirectory(directory) {","if (headX + 1 < grid.length && (snake[2].x != headX + 1 || trys > 50)) {","z-index: 1;","snake[0].x++","})","postsUpdated[post] = Date.now()","lastRowWidth = width","console.log('Generating website.')","item = item.split(' ').join(' ')","word.forEach((char, index) => colum.unshift([word[word.length - index - 1], color]))","}","changedFiles.push(key)","let columns = []","lastRowWidth += width","scan(`${to}/${file}`, `${from}/${file}`)","Array.from(document.getElementsByClassName('post_row_old')).forEach(row => row.remove())","function fillGrid(canvas,ctx) {","lastRowElement.appendChild(post)","case 2:","paddles.forEach((paddle, index) => {","console.error('Error fetching mem for stats:', error)","bun [--watch] livePreview.js [logSpawn] [watchAll] [background]","removedFiles.push(key)","} else if (offsets[index] > 0) offsets[index]--","* {","mem.fileHashes = getOutputPaths().map(path => path).reduce((acc, path) => ({ ...acc, [path.replace('output', '.')]: hashFileContents(path) }), {})","let offsets = []","if (postHashes[post] != oldPostHashes[post]) {","item = item.trim()","let mem = JSON.parse(fs.readFileSync('./mem.json', 'utf8'))","document.addEventListener('DOMContentLoaded', updateGrid)","window.addEventListener('resize', updateGrid)","resetCanvas(canvas, ctx)","scanDirectory(fullPath)","(new ((await import('ws')).WebSocket)('ws://localhost:8080')).on('error', (error)=>console.error(error))","if (words == undefined) return","const { exec } = require('child_process')","if (stats.isDirectory() && !ignoredPaths.scan.includes(fullPath)) {","resolve(stdout || stderr)","const dirs = [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: -1, y: 0 }, { x: 0, y: 1 }, { x: 0, y: -1 }]","for (let i = 0; i < paddleSize; i++) {","ctx.fillRect(index * Math.floor(width / fontSize - 1) * fontSize, paddle * fontSize, fontSize, paddleSize * fontSize)","const fs = require('fs')","ctx.fillText(item[0], x * fontSize, (y - offsets[x]) * fontSize)","process.chdir(__dirname)","function getOrderedLinesOfCode() {","const lastFileHashes = mem.lastFileHashes ?? {}","} else if (stats.isFile() && !ignoredPaths.scan.includes(fullPath))","for (let x of [0, Math.floor(width / fontSize - 1)]) {","let paddleSize","let words","cmd: ['bun', 'generateWebsite.js']","height: calc(100vh - 5px);","ctx.fillText('1', (ball.x + dir.x) * fontSize, (ball.y + dir.y) * fontSize)","ctx.fillText(chars[grid[x][y] % chars.length], x * fontSize, y * fontSize)","} else if (stat.isFile() && !ignoredPaths.path.includes(fullPath))","columns.forEach((colum, index) => {","ctx.fillText(('|' + line).slice(0, lineLength), lineOffset, textY)","const path = require('path')","readFile(fullPath)","const { spawn } = require('bun')","ctx.fillStyle = '#0f0'","}).exited","for (let y = 0; y < height / fontSize; y++)","let addedFiles = []","function resetCanvas(canvas, ctx) {","await spawn({","scan(`./output/posts/${name}`, postPath)","ctx.fillText('1', index * Math.floor(width / fontSize - 1) * fontSize, (paddle + i) * fontSize)","balls.forEach(ball => {","let changedFiles = []","updated = true","out.push(fullPath)","else colum.unshift([''])","return (hash & maxInt32) / maxInt32","scanDirectory('./')","let removedFiles = []","codeLines[path].push(item)","const maxInt32 = Math.pow(2, 31) - 1","console.log('Website generated.')","let paddles = [0, 0]","changedPosts.push(post)","if (lastWidth != window.innerWidth || lastHeight != innerHeight) {","box-sizing: border-box;","hash = str.charCodeAt(i) + ((hash << 5) - hash)","return out","fontWidth = ctx.measureText('0').width","else if (lastFileHashes[key] != fileHashes[key])","if (totalChanges == 0) {","Object.keys(fileHashes).forEach(key => {","export function start(canvas) {","let balls = new Array(fontSize == 50 ? 2 : 5).fill(0)","codeLines[path] = []","ball.lx = ball.x","padding: 1px;","function getMem() {","if (lastFileHashes[key] == undefined)","let codeLines = {}","if (ball.x == 0) ball.sx = 1","addedFiles.push(key)","ctx.fillRect(x * fontSize, 0, fontSize, height)","html,","const totalChanges = addedFiles.length + changedFiles.length + removedFiles.length","fs.writeFileSync('./mem.json', JSON.stringify(mem), 'utf8')","if (fileHashes[key] == undefined)","mem.outputHash = newHash","balls.forEach(ball =>","dirs.forEach(dir => {","console.log('No changes')","top: 0;","const line = path.slice(2)","uniqueLines = data.uniqueLines","if (Math.random() < .1) drip(colum, index)","ctx.fillRect((ball.lx + dir.x) * fontSize, (ball.ly + dir.y) * fontSize, fontSize, fontSize)","if (ball.y == Math.floor(height / fontSize) - 2) ball.sy = -1","mem.numberOfLines = countLinesOfCode()","mem.uniqueLines = getUniqueLinesOfCode()","colum = colum.splice(Math.ceil(height / fontSize) + offsets[index])","balls.sort((a, b) => (a.sx * width + a.x) - (b.sx * width + b.x))","if (prefix == '0') {","margin: 0;","ctx.fillRect((ball.x + dir.x) * fontSize, (ball.y + dir.y) * fontSize, fontSize, fontSize)","return","ctx.fillText('0', (ball.lx + dir.x) * fontSize, (ball.ly + dir.y) * fontSize)","ctx.fillStyle = 'rgb(0,255,0)'","ball.x += ball.sx","dontScan.push(line)","if (updateLines) {","} else if (prefix == '1') {","width: 100%;","function saveMem(mem) {","return JSON.parse(fs.readFileSync('./mem.json', 'utf8'))","#overlay {",")","function generatePost(postPath, injectLivePreview) {","left: 0;","if (ball.y == 0) ball.sy = 1","overflow: hidden auto;","dontCount.push(line)","ball.ly = ball.y","if (ball.x == Math.floor(width / fontSize) - 2) ball.sx = -1","position: absolute;","padding: 0;","if (changedFiles.length > 0) changes.push(`changed ${changedFiles.length} file${changedFiles.length == 1 ? '' : 's'}: ${changedFiles.join(', ')}`)","ball.y += ball.sy","background-color: var(--black-solid);","let changes = []","dontPath.push(line)","grid-auto-flow: column;","const background = await import('./background.js')","if (!['script.txt', 'title.txt', 'preview.txt'].includes(file)) {",".post {","const name = postPath.split('blogPost_')[1]","} else if (prefix == '2') {","## A platform for publishing work on my various projects","smartMakeDir(`./output/posts/${name}`)","if (removedFiles.length > 0) changes.push(`removed ${removedFiles.length} file${removedFiles.length == 1 ? '' : 's'}: ${removedFiles.join(', ')}`)","#post_background {","background-color: var(--background);","fs.readdirSync(postPath).forEach(file => {","#post {","width: 80vw;","This repo is auto-generated from post folders, read https://jacks-project-hub.vercel.app/posts/Making%20a%20custom%20blog/ for more info.","const addStat = text => {","if (fs.statSync(`${postPath}/${file}`).isDirectory())","font-family: 'Fira Code', monospace;","const div = document.createElement('div')","background-color: var(--background-dark);","padding: 25px;","const script = document.currentScript","align-items: center;","smartCopyDir(`${postPath}/${file}`, `./output/posts/${name}/${file}`, { recursive: true })","border: 2px solid var(--background-dark);","src: url('./firaCode.ttf') format('truetype');","if (changes.length == 1) {","height: 0;","script.insertAdjacentElement('afterend', div)","smartCopyFile('./postBackgroundManager.js', `./output/posts/${name}/backgroundManager.js`)","border-bottom: none;","background-color: var(--black);","# Jack's Project Hub","border: 5px solid var(--highlight-dark);","smartCopyFile(`${postPath}/${file}`, `./output/posts/${name}/${file}`)","if (background.update != undefined) {","#content {","position: fixed;","import { lookup as getMimeType } from 'mime-types'","import { WebSocketServer } from 'ws'","justify-items: center;","mem.postsCreated = postsCreated","await background.update(canvas, ctx)","#backgroundCanvas {","const postPaths = findPostPaths()","if (background.start != undefined) await background.start(canvas, ctx)","margin: 10px;","video {","border-radius: 0;","fs.writeFileSync('./output/mem.json', JSON.stringify(siteMem), 'utf8')","font-size: xx-large","let commitMessage","display: block;","} else if (prefix == '3') {","addStat(`First published: <code>${Math.floor((Date.now() - mem.postsCreated[postName]) / 86400000)}</code> days ago`)","console.log('Screenshots taken.')","function smartCopyFile(from, to) {","fs.copyFileSync(from, to)","if (addedFiles.length > 0) changes.push(`added ${addedFiles.length} file${addedFiles.length == 1 ? '' : 's'}: ${addedFiles.join(', ')}`)","if (!exists)","setupFolder()","return { scan: dontScan, count: dontCount, path: dontPath }","/* border-radius: 0 0 15px 15px; */","fs.mkdirSync(path.dirname(to), { recursive: true, force: true })","if (!exists || fs.statSync(from).mtime.getTime() !== fs.statSync(to).mtime.getTime()) {","object-fit: fill;","fetch('../../mem.json')","function smartMakeDir(path) {","const exists = fs.existsSync(to)","} else commitMessage = `${totalChanges} changes: ${changes.join(', ')}`","img,","transition: filter 1s ease-in-out;",".post_row {","addStat(`Last updated: <code>${Math.floor((Date.now() - mem.postsUpdated[postName]) / 86400000)}</code> days ago`)","fs.mkdirSync(path)","if (postsCreated[post] == undefined)","code {","if (!allowed.includes(file)) {","#backgroundCanvas.blur {","logDelay('Setup folder')","#info {","logDelay('Found post paths')","border-radius: 15px 15px 0 0;","commitMessage = changes[0]","width: min-content;","border: 5px solid var(--background-dark);","#posts {","if (!fs.existsSync(path))","logDelay('Cleaned posts folder')","transition: all .25s ease-in-out","process.chdir('.\\\\output')","filter: blur(5px) saturate(.5);","cleanPostsFolder(postPaths)","filter: blur(25px) brightness(0);","resolve()","addStat(`Current hash: <code>${mem.postHashes[postName]}</code>`)","commitMessage = commitMessage.charAt(0).toUpperCase() + commitMessage.slice(1)","color: var(--highlight);","setupLiveBackgrounds(postPaths)","#titleText {","let div = document.createElement('div')","let spawnLogs = []","let siteMem = {}","// Check if .git directory exists, if not, initialize a new repository","return Promise.resolve()","for (let key of ['lastScan', 'lastUpdate', 'outputHash', 'numberOfLines', 'uniqueLines', 'orderedLines', 'postsUpdated', 'postsCreated', 'postHashes']) siteMem[key] = mem[key]","} catch {","try {","mem.postsUpdated = postsUpdated","const postsCreated = mem.postsCreated ?? {}","postsCreated[post] = Date.now()","border: 5px solid var(--border);","function addStat(parent, text) {",".post .title {","saveMem(mem)","fs.accessSync(path.join('./', '.git'))","white-space: nowrap;","function smartCopyDir(from, to) {","text-align: center;","await execAsync(`git remote add origin https://github.com/Jacks-underscore-username/jacks_project_hub.git`, { cwd: './' })","const showSpawnLogs = argv.includes('logSpawn')","function generateMainPage(postPaths, injectLivePreview) {","await execAsync(`git init`, { cwd: './' })","// Ensure the main branch exists","border-radius: 5px;","padding: 5px;","justify-content: center;","// Force push the changes to the remote repository","let html = fs.readFileSync('./output/index.html', 'utf8')","let permaLines = []","await execAsync('git push -f origin main', { cwd: './' })","for (const file of fs.readdirSync(from))","smartCopyFile(`${from}/${file}`, `${to}/${file}`)","border: 2px solid var(--highlight-dark);","margin-bottom: 10px;","addStat(div, `Last updated: <code>${Math.floor((Date.now() - mem.lastUpdate) / 86400000)}</code> days ago`)","addStat(div, `Created out of only <code>${mem.numberOfLines}</code> lines of code`)","margin-bottom: 15px;","if (fs.statSync(`${from}/${file}`).isDirectory())","#info #return_link a {",".video_wrapper {","parent.appendChild(div)","logDelay('Setup live backgrounds')","const div = document.getElementById('info')","await execAsync(`git checkout -b main`, { cwd: './' })","display: grid;","console.log(path, allowed, file, `${path}/${file}`)","div.innerHTML = text","addStat(div, `Current hash: <code>${mem.outputHash}</code>`)","await execAsync(`git checkout main`, { cwd: './' })","border-radius: 15px;","padding: 10px;","const argv = process.argv","margin: 25px;",".then(mem => {","color: transparent;",".scrollOffset {","smartCopyDir(`${from}/${file}`, `${to}/${file}`)","// Add all changes to staging","html = html.replace('<!-- posts link -->', postPaths.map(postPath => generatePostCard(postPath)).join('\\n '))","{\n \"name\": \"blog\",\n \"version\": \"1.0.0\",\n \"lockfileVersion\": 3,\n \"requires\": true,\n \"packages\": {\n \"\": {\n \"name\": \"blog\",\n \"version\": \"1.0.0\",\n \"license\": \"ISC\",\n \"dependencies\": {\n \"chokidar\": \"^3.6.0\",\n \"express\": \"^4.19.2\",\n \"mime-types\": \"^2.1.35\",\n \"puppeteer\": \"^22.12.0\",\n \"ws\": \"^8.17.1\"\n }\n },\n \"node_modules/@babel/code-frame\": {\n \"version\": \"7.24.7\",\n \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.24.7.tgz\",\n \"integrity\": \"sha512-BcYH1CVJBO9tvyIZ2jVeXgSIMvGZ2FDRvDdOIVQyuklNKSsx+eppDEBq/g47Ayw+RqNFE+URvOShmf+f/qwAlA==\",\n \"dependencies\": {\n \"@babel/highlight\": \"^7.24.7\",\n \"picocolors\": \"^1.0.0\"\n },\n \"engines\": {\n \"node\": \">=6.9.0\"\n }\n },\n \"node_modules/@babel/helper-validator-identifier\": {\n \"version\": \"7.24.7\",\n \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.24.7.tgz\",\n \"integrity\": \"sha512-rR+PBcQ1SMQDDyF6X0wxtG8QyLCgUB0eRAGguqRLfkCA87l7yAP7ehq8SNj96OOGTO8OBV70KhuFYcIkHXOg0w==\",\n \"engines\": {\n \"node\": \">=6.9.0\"\n }\n },\n \"node_modules/@babel/highlight\": {\n \"version\": \"7.24.7\",\n \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.7.tgz\",\n \"integrity\": \"sha512-EStJpq4OuY8xYfhGVXngigBJRWxftKX9ksiGDnmlY3o7B/V7KIAc9X4oiK87uPJSc/vs5L869bem5fhZa8caZw==\",\n \"dependencies\": {\n \"@babel/helper-validator-identifier\": \"^7.24.7\",\n \"chalk\": \"^2.4.2\",\n \"js-tokens\": \"^4.0.0\",\n \"picocolors\": \"^1.0.0\"\n },\n \"engines\": {\n \"node\": \">=6.9.0\"\n }\n },\n \"node_modules/@puppeteer/browsers\": {\n \"version\": \"2.3.0\",\n \"resolved\": \"https://registry.npmjs.org/@puppeteer/browsers/-/browsers-2.3.0.tgz\",\n \"integrity\": \"sha512-ioXoq9gPxkss4MYhD+SFaU9p1IHFUX0ILAWFPyjGaBdjLsYAlZw6j1iLA0N/m12uVHLFDfSYNF7EQccjinIMDA==\",\n \"dependencies\": {\n \"debug\": \"^4.3.5\",\n \"extract-zip\": \"^2.0.1\",\n \"progress\": \"^2.0.3\",\n \"proxy-agent\": \"^6.4.0\",\n \"semver\": \"^7.6.3\",\n \"tar-fs\": \"^3.0.6\",\n \"unbzip2-stream\": \"^1.4.3\",\n \"yargs\": \"^17.7.2\"\n },\n \"bin\": {\n \"browsers\": \"lib/cjs/main-cli.js\"\n },\n \"engines\": {\n \"node\": \">=18\"\n }\n },\n \"node_modules/@puppeteer/browsers/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/@puppeteer/browsers/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/@tootallnate/quickjs-emscripten\": {\n \"version\": \"0.23.0\",\n \"resolved\": \"https://registry.npmjs.org/@tootallnate/quickjs-emscripten/-/quickjs-emscripten-0.23.0.tgz\",\n \"integrity\": \"sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==\"\n },\n \"node_modules/@types/node\": {\n \"version\": \"22.1.0\",\n \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.1.0.tgz\",\n \"integrity\": \"sha512-AOmuRF0R2/5j1knA3c6G3HOk523Ga+l+ZXltX8SF1+5oqcXijjfTd8fY3XRZqSihEu9XhtQnKYLmkFaoxgsJHw==\",\n \"optional\": true,\n \"dependencies\": {\n \"undici-types\": \"~6.13.0\"\n }\n },\n \"node_modules/@types/yauzl\": {\n \"version\": \"2.10.3\",\n \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.3.tgz\",\n \"integrity\": \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\",\n \"optional\": true,\n \"dependencies\": {\n \"@types/node\": \"*\"\n }\n },\n \"node_modules/accepts\": {\n \"version\": \"1.3.8\",\n \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n \"dependencies\": {\n \"mime-types\": \"~2.1.34\",\n \"negotiator\": \"0.6.3\"\n },\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/agent-base\": {\n \"version\": \"7.1.1\",\n \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-7.1.1.tgz\",\n \"integrity\": \"sha512-H0TSyFNDMomMNJQBn8wFV5YC/2eJ+VXECwOadZJT554xP6cODZHPX3H9QMQECxvrgiSOP1pHjy1sMWQVYJOUOA==\",\n \"dependencies\": {\n \"debug\": \"^4.3.4\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/agent-base/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/agent-base/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/ansi-regex\": {\n \"version\": \"5.0.1\",\n \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n \"engines\": {\n \"node\": \">=8\"\n }\n },\n \"node_modules/ansi-styles\": {\n \"version\": \"3.2.1\",\n \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n \"dependencies\": {\n \"color-convert\": \"^1.9.0\"\n },\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/anymatch\": {\n \"version\": \"3.1.3\",\n \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n \"dependencies\": {\n \"normalize-path\": \"^3.0.0\",\n \"picomatch\": \"^2.0.4\"\n },\n \"engines\": {\n \"node\": \">= 8\"\n }\n },\n \"node_modules/argparse\": {\n \"version\": \"2.0.1\",\n \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"\n },\n \"node_modules/array-flatten\": {\n \"version\": \"1.1.1\",\n \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\"\n },\n \"node_modules/ast-types\": {\n \"version\": \"0.13.4\",\n \"resolved\": \"https://registry.npmjs.org/ast-types/-/ast-types-0.13.4.tgz\",\n \"integrity\": \"sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==\",\n \"dependencies\": {\n \"tslib\": \"^2.0.1\"\n },\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/b4a\": {\n \"version\": \"1.6.6\",\n \"resolved\": \"https://registry.npmjs.org/b4a/-/b4a-1.6.6.tgz\",\n \"integrity\": \"sha512-5Tk1HLk6b6ctmjIkAcU/Ujv/1WqiDl0F0JdRCR80VsOcUlHcu7pWeWRlOqQLHfDEsVx9YH/aif5AG4ehoCtTmg==\"\n },\n \"node_modules/bare-events\": {\n \"version\": \"2.4.2\",\n \"resolved\": \"https://registry.npmjs.org/bare-events/-/bare-events-2.4.2.tgz\",\n \"integrity\": \"sha512-qMKFd2qG/36aA4GwvKq8MxnPgCQAmBWmSyLWsJcbn8v03wvIPQ/hG1Ms8bPzndZxMDoHpxez5VOS+gC9Yi24/Q==\",\n \"optional\": true\n },\n \"node_modules/bare-fs\": {\n \"version\": \"2.3.1\",\n \"resolved\": \"https://registry.npmjs.org/bare-fs/-/bare-fs-2.3.1.tgz\",\n \"integrity\": \"sha512-W/Hfxc/6VehXlsgFtbB5B4xFcsCl+pAh30cYhoFyXErf6oGrwjh8SwiPAdHgpmWonKuYpZgGywN0SXt7dgsADA==\",\n \"optional\": true,\n \"dependencies\": {\n \"bare-events\": \"^2.0.0\",\n \"bare-path\": \"^2.0.0\",\n \"bare-stream\": \"^2.0.0\"\n }\n },\n \"node_modules/bare-os\": {\n \"version\": \"2.4.0\",\n \"resolved\": \"https://registry.npmjs.org/bare-os/-/bare-os-2.4.0.tgz\",\n \"integrity\": \"sha512-v8DTT08AS/G0F9xrhyLtepoo9EJBJ85FRSMbu1pQUlAf6A8T0tEEQGMVObWeqpjhSPXsE0VGlluFBJu2fdoTNg==\",\n \"optional\": true\n },\n \"node_modules/bare-path\": {\n \"version\": \"2.1.3\",\n \"resolved\": \"https://registry.npmjs.org/bare-path/-/bare-path-2.1.3.tgz\",\n \"integrity\": \"sha512-lh/eITfU8hrj9Ru5quUp0Io1kJWIk1bTjzo7JH1P5dWmQ2EL4hFUlfI8FonAhSlgIfhn63p84CDY/x+PisgcXA==\",\n \"optional\": true,\n \"dependencies\": {\n \"bare-os\": \"^2.1.0\"\n }\n },\n \"node_modules/bare-stream\": {\n \"version\": \"2.1.3\",\n \"resolved\": \"https://registry.npmjs.org/bare-stream/-/bare-stream-2.1.3.tgz\",\n \"integrity\": \"sha512-tiDAH9H/kP+tvNO5sczyn9ZAA7utrSMobyDchsnyyXBuUe2FSQWbxhtuHB8jwpHYYevVo2UJpcmvvjrbHboUUQ==\",\n \"optional\": true,\n \"dependencies\": {\n \"streamx\": \"^2.18.0\"\n }\n },\n \"node_modules/base64-js\": {\n \"version\": \"1.5.1\",\n \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n \"funding\": [\n {\n \"type\": \"github\",\n \"url\": \"https://github.com/sponsors/feross\"\n },\n {\n \"type\": \"patreon\",\n \"url\": \"https://www.patreon.com/feross\"\n },\n {\n \"type\": \"consulting\",\n \"url\": \"https://feross.org/support\"\n }\n ]\n },\n \"node_modules/basic-ftp\": {\n \"version\": \"5.0.5\",\n \"resolved\": \"https://registry.npmjs.org/basic-ftp/-/basic-ftp-5.0.5.tgz\",\n \"integrity\": \"sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==\",\n \"engines\": {\n \"node\": \">=10.0.0\"\n }\n },\n \"node_modules/binary-extensions\": {\n \"version\": \"2.3.0\",\n \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n \"engines\": {\n \"node\": \">=8\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/sindresorhus\"\n }\n },\n \"node_modules/body-parser\": {\n \"version\": \"1.20.2\",\n \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.2.tgz\",\n \"integrity\": \"sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==\",\n \"dependencies\": {\n \"bytes\": \"3.1.2\",\n \"content-type\": \"~1.0.5\",\n \"debug\": \"2.6.9\",\n \"depd\": \"2.0.0\",\n \"destroy\": \"1.2.0\",\n \"http-errors\": \"2.0.0\",\n \"iconv-lite\": \"0.4.24\",\n \"on-finished\": \"2.4.1\",\n \"qs\": \"6.11.0\",\n \"raw-body\": \"2.5.2\",\n \"type-is\": \"~1.6.18\",\n \"unpipe\": \"1.0.0\"\n },\n \"engines\": {\n \"node\": \">= 0.8\",\n \"npm\": \"1.2.8000 || >= 1.4.16\"\n }\n },\n \"node_modules/braces\": {\n \"version\": \"3.0.3\",\n \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n \"dependencies\": {\n \"fill-range\": \"^7.1.1\"\n },\n \"engines\": {\n \"node\": \">=8\"\n }\n },\n \"node_modules/buffer\": {\n \"version\": \"5.7.1\",\n \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\",\n \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n \"funding\": [\n {\n \"type\": \"github\",\n \"url\": \"https://github.com/sponsors/feross\"\n },\n {\n \"type\": \"patreon\",\n \"url\": \"https://www.patreon.com/feross\"\n },\n {\n \"type\": \"consulting\",\n \"url\": \"https://feross.org/support\"\n }\n ],\n \"dependencies\": {\n \"base64-js\": \"^1.3.1\",\n \"ieee754\": \"^1.1.13\"\n }\n },\n \"node_modules/buffer-crc32\": {\n \"version\": \"0.2.13\",\n \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\",\n \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\",\n \"engines\": {\n \"node\": \"*\"\n }\n },\n \"node_modules/bytes\": {\n \"version\": \"3.1.2\",\n \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/call-bind\": {\n \"version\": \"1.0.7\",\n \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n \"dependencies\": {\n \"es-define-property\": \"^1.0.0\",\n \"es-errors\": \"^1.3.0\",\n \"function-bind\": \"^1.1.2\",\n \"get-intrinsic\": \"^1.2.4\",\n \"set-function-length\": \"^1.2.1\"\n },\n \"engines\": {\n \"node\": \">= 0.4\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/callsites\": {\n \"version\": \"3.1.0\",\n \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n \"engines\": {\n \"node\": \">=6\"\n }\n },\n \"node_modules/chalk\": {\n \"version\": \"2.4.2\",\n \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n \"dependencies\": {\n \"ansi-styles\": \"^3.2.1\",\n \"escape-string-regexp\": \"^1.0.5\",\n \"supports-color\": \"^5.3.0\"\n },\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/chokidar\": {\n \"version\": \"3.6.0\",\n \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n \"dependencies\": {\n \"anymatch\": \"~3.1.2\",\n \"braces\": \"~3.0.2\",\n \"glob-parent\": \"~5.1.2\",\n \"is-binary-path\": \"~2.1.0\",\n \"is-glob\": \"~4.0.1\",\n \"normalize-path\": \"~3.0.0\",\n \"readdirp\": \"~3.6.0\"\n },\n \"engines\": {\n \"node\": \">= 8.10.0\"\n },\n \"funding\": {\n \"url\": \"https://paulmillr.com/funding/\"\n },\n \"optionalDependencies\": {\n \"fsevents\": \"~2.3.2\"\n }\n },\n \"node_modules/chromium-bidi\": {\n \"version\": \"0.6.3\",\n \"resolved\": \"https://registry.npmjs.org/chromium-bidi/-/chromium-bidi-0.6.3.tgz\",\n \"integrity\": \"sha512-qXlsCmpCZJAnoTYI83Iu6EdYQpMYdVkCfq08KDh2pmlVqK5t5IA9mGs4/LwCwp4fqisSOMXZxP3HIh8w8aRn0A==\",\n \"dependencies\": {\n \"mitt\": \"3.0.1\",\n \"urlpattern-polyfill\": \"10.0.0\",\n \"zod\": \"3.23.8\"\n },\n \"peerDependencies\": {\n \"devtools-protocol\": \"*\"\n }\n },\n \"node_modules/cliui\": {\n \"version\": \"8.0.1\",\n \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n \"dependencies\": {\n \"string-width\": \"^4.2.0\",\n \"strip-ansi\": \"^6.0.1\",\n \"wrap-ansi\": \"^7.0.0\"\n },\n \"engines\": {\n \"node\": \">=12\"\n }\n },\n \"node_modules/color-convert\": {\n \"version\": \"1.9.3\",\n \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n \"dependencies\": {\n \"color-name\": \"1.1.3\"\n }\n },\n \"node_modules/color-name\": {\n \"version\": \"1.1.3\",\n \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\"\n },\n \"node_modules/content-disposition\": {\n \"version\": \"0.5.4\",\n \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n \"dependencies\": {\n \"safe-buffer\": \"5.2.1\"\n },\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/content-type\": {\n \"version\": \"1.0.5\",\n \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/cookie\": {\n \"version\": \"0.6.0\",\n \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz\",\n \"integrity\": \"sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/cookie-signature\": {\n \"version\": \"1.0.6\",\n \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\"\n },\n \"node_modules/cosmiconfig\": {\n \"version\": \"9.0.0\",\n \"resolved\": \"https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-9.0.0.tgz\",\n \"integrity\": \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\",\n \"dependencies\": {\n \"env-paths\": \"^2.2.1\",\n \"import-fresh\": \"^3.3.0\",\n \"js-yaml\": \"^4.1.0\",\n \"parse-json\": \"^5.2.0\"\n },\n \"engines\": {\n \"node\": \">=14\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/d-fischer\"\n },\n \"peerDependencies\": {\n \"typescript\": \">=4.9.5\"\n },\n \"peerDependenciesMeta\": {\n \"typescript\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/data-uri-to-buffer\": {\n \"version\": \"6.0.2\",\n \"resolved\": \"https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-6.0.2.tgz\",\n \"integrity\": \"sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==\",\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/debug\": {\n \"version\": \"2.6.9\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n \"dependencies\": {\n \"ms\": \"2.0.0\"\n }\n },\n \"node_modules/define-data-property\": {\n \"version\": \"1.1.4\",\n \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n \"dependencies\": {\n \"es-define-property\": \"^1.0.0\",\n \"es-errors\": \"^1.3.0\",\n \"gopd\": \"^1.0.1\"\n },\n \"engines\": {\n \"node\": \">= 0.4\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/degenerator\": {\n \"version\": \"5.0.1\",\n \"resolved\": \"https://registry.npmjs.org/degenerator/-/degenerator-5.0.1.tgz\",\n \"integrity\": \"sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==\",\n \"dependencies\": {\n \"ast-types\": \"^0.13.4\",\n \"escodegen\": \"^2.1.0\",\n \"esprima\": \"^4.0.1\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/depd\": {\n \"version\": \"2.0.0\",\n \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/destroy\": {\n \"version\": \"1.2.0\",\n \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n \"engines\": {\n \"node\": \">= 0.8\",\n \"npm\": \"1.2.8000 || >= 1.4.16\"\n }\n },\n \"node_modules/devtools-protocol\": {\n \"version\": \"0.0.1312386\",\n \"resolved\": \"https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1312386.tgz\",\n \"integrity\": \"sha512-DPnhUXvmvKT2dFA/j7B+riVLUt9Q6RKJlcppojL5CoRywJJKLDYnRlw0gTFKfgDPHP5E04UoB71SxoJlVZy8FA==\"\n },\n \"node_modules/ee-first\": {\n \"version\": \"1.1.1\",\n \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"\n },\n \"node_modules/emoji-regex\": {\n \"version\": \"8.0.0\",\n \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"\n },\n \"node_modules/encodeurl\": {\n \"version\": \"1.0.2\",\n \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/end-of-stream\": {\n \"version\": \"1.4.4\",\n \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n \"dependencies\": {\n \"once\": \"^1.4.0\"\n }\n },\n \"node_modules/env-paths\": {\n \"version\": \"2.2.1\",\n \"resolved\": \"https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz\",\n \"integrity\": \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\",\n \"engines\": {\n \"node\": \">=6\"\n }\n },\n \"node_modules/error-ex\": {\n \"version\": \"1.3.2\",\n \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n \"dependencies\": {\n \"is-arrayish\": \"^0.2.1\"\n }\n },\n \"node_modules/es-define-property\": {\n \"version\": \"1.0.0\",\n \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n \"dependencies\": {\n \"get-intrinsic\": \"^1.2.4\"\n },\n \"engines\": {\n \"node\": \">= 0.4\"\n }\n },\n \"node_modules/es-errors\": {\n \"version\": \"1.3.0\",\n \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n \"engines\": {\n \"node\": \">= 0.4\"\n }\n },\n \"node_modules/escalade\": {\n \"version\": \"3.1.2\",\n \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.2.tgz\",\n \"integrity\": \"sha512-ErCHMCae19vR8vQGe50xIsVomy19rg6gFu3+r3jkEO46suLMWBksvVyoGgQV+jOfl84ZSOSlmv6Gxa89PmTGmA==\",\n \"engines\": {\n \"node\": \">=6\"\n }\n },\n \"node_modules/escape-html\": {\n \"version\": \"1.0.3\",\n \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"\n },\n \"node_modules/escape-string-regexp\": {\n \"version\": \"1.0.5\",\n \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n \"engines\": {\n \"node\": \">=0.8.0\"\n }\n },\n \"node_modules/escodegen\": {\n \"version\": \"2.1.0\",\n \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-2.1.0.tgz\",\n \"integrity\": \"sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==\",\n \"dependencies\": {\n \"esprima\": \"^4.0.1\",\n \"estraverse\": \"^5.2.0\",\n \"esutils\": \"^2.0.2\"\n },\n \"bin\": {\n \"escodegen\": \"bin/escodegen.js\",\n \"esgenerate\": \"bin/esgenerate.js\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"optionalDependencies\": {\n \"source-map\": \"~0.6.1\"\n }\n },\n \"node_modules/esprima\": {\n \"version\": \"4.0.1\",\n \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n \"bin\": {\n \"esparse\": \"bin/esparse.js\",\n \"esvalidate\": \"bin/esvalidate.js\"\n },\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/estraverse\": {\n \"version\": \"5.3.0\",\n \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n \"engines\": {\n \"node\": \">=4.0\"\n }\n },\n \"node_modules/esutils\": {\n \"version\": \"2.0.3\",\n \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n \"engines\": {\n \"node\": \">=0.10.0\"\n }\n },\n \"node_modules/etag\": {\n \"version\": \"1.8.1\",\n \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/express\": {\n \"version\": \"4.19.2\",\n \"resolved\": \"https://registry.npmjs.org/express/-/express-4.19.2.tgz\",\n \"integrity\": \"sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==\",\n \"dependencies\": {\n \"accepts\": \"~1.3.8\",\n \"array-flatten\": \"1.1.1\",\n \"body-parser\": \"1.20.2\",\n \"content-disposition\": \"0.5.4\",\n \"content-type\": \"~1.0.4\",\n \"cookie\": \"0.6.0\",\n \"cookie-signature\": \"1.0.6\",\n \"debug\": \"2.6.9\",\n \"depd\": \"2.0.0\",\n \"encodeurl\": \"~1.0.2\",\n \"escape-html\": \"~1.0.3\",\n \"etag\": \"~1.8.1\",\n \"finalhandler\": \"1.2.0\",\n \"fresh\": \"0.5.2\",\n \"http-errors\": \"2.0.0\",\n \"merge-descriptors\": \"1.0.1\",\n \"methods\": \"~1.1.2\",\n \"on-finished\": \"2.4.1\",\n \"parseurl\": \"~1.3.3\",\n \"path-to-regexp\": \"0.1.7\",\n \"proxy-addr\": \"~2.0.7\",\n \"qs\": \"6.11.0\",\n \"range-parser\": \"~1.2.1\",\n \"safe-buffer\": \"5.2.1\",\n \"send\": \"0.18.0\",\n \"serve-static\": \"1.15.0\",\n \"setprototypeof\": \"1.2.0\",\n \"statuses\": \"2.0.1\",\n \"type-is\": \"~1.6.18\",\n \"utils-merge\": \"1.0.1\",\n \"vary\": \"~1.1.2\"\n },\n \"engines\": {\n \"node\": \">= 0.10.0\"\n }\n },\n \"node_modules/extract-zip\": {\n \"version\": \"2.0.1\",\n \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\",\n \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n \"dependencies\": {\n \"debug\": \"^4.1.1\",\n \"get-stream\": \"^5.1.0\",\n \"yauzl\": \"^2.10.0\"\n },\n \"bin\": {\n \"extract-zip\": \"cli.js\"\n },\n \"engines\": {\n \"node\": \">= 10.17.0\"\n },\n \"optionalDependencies\": {\n \"@types/yauzl\": \"^2.9.1\"\n }\n },\n \"node_modules/extract-zip/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/extract-zip/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/fast-fifo\": {\n \"version\": \"1.3.2\",\n \"resolved\": \"https://registry.npmjs.org/fast-fifo/-/fast-fifo-1.3.2.tgz\",\n \"integrity\": \"sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==\"\n },\n \"node_modules/fd-slicer\": {\n \"version\": \"1.1.0\",\n \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n \"dependencies\": {\n \"pend\": \"~1.2.0\"\n }\n },\n \"node_modules/fill-range\": {\n \"version\": \"7.1.1\",\n \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n \"dependencies\": {\n \"to-regex-range\": \"^5.0.1\"\n },\n \"engines\": {\n \"node\": \">=8\"\n }\n },\n \"node_modules/finalhandler\": {\n \"version\": \"1.2.0\",\n \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz\",\n \"integrity\": \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\",\n \"dependencies\": {\n \"debug\": \"2.6.9\",\n \"encodeurl\": \"~1.0.2\",\n \"escape-html\": \"~1.0.3\",\n \"on-finished\": \"2.4.1\",\n \"parseurl\": \"~1.3.3\",\n \"statuses\": \"2.0.1\",\n \"unpipe\": \"~1.0.0\"\n },\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/forwarded\": {\n \"version\": \"0.2.0\",\n \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/fresh\": {\n \"version\": \"0.5.2\",\n \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/fs-extra\": {\n \"version\": \"11.2.0\",\n \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-11.2.0.tgz\",\n \"integrity\": \"sha512-PmDi3uwK5nFuXh7XDTlVnS17xJS7vW36is2+w3xcv8SVxiB4NyATf4ctkVY5bkSjX0Y4nbvZCq1/EjtEyr9ktw==\",\n \"dependencies\": {\n \"graceful-fs\": \"^4.2.0\",\n \"jsonfile\": \"^6.0.1\",\n \"universalify\": \"^2.0.0\"\n },\n \"engines\": {\n \"node\": \">=14.14\"\n }\n },\n \"node_modules/function-bind\": {\n \"version\": \"1.1.2\",\n \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/get-caller-file\": {\n \"version\": \"2.0.5\",\n \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n \"engines\": {\n \"node\": \"6.* || 8.* || >= 10.*\"\n }\n },\n \"node_modules/get-intrinsic\": {\n \"version\": \"1.2.4\",\n \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n \"dependencies\": {\n \"es-errors\": \"^1.3.0\",\n \"function-bind\": \"^1.1.2\",\n \"has-proto\": \"^1.0.1\",\n \"has-symbols\": \"^1.0.3\",\n \"hasown\": \"^2.0.0\"\n },\n \"engines\": {\n \"node\": \">= 0.4\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/get-stream\": {\n \"version\": \"5.2.0\",\n \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n \"dependencies\": {\n \"pump\": \"^3.0.0\"\n },\n \"engines\": {\n \"node\": \">=8\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/sindresorhus\"\n }\n },\n \"node_modules/get-uri\": {\n \"version\": \"6.0.3\",\n \"resolved\": \"https://registry.npmjs.org/get-uri/-/get-uri-6.0.3.tgz\",\n \"integrity\": \"sha512-BzUrJBS9EcUb4cFol8r4W3v1cPsSyajLSthNkz5BxbpDcHN5tIrM10E2eNvfnvBn3DaT3DUgx0OpsBKkaOpanw==\",\n \"dependencies\": {\n \"basic-ftp\": \"^5.0.2\",\n \"data-uri-to-buffer\": \"^6.0.2\",\n \"debug\": \"^4.3.4\",\n \"fs-extra\": \"^11.2.0\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/get-uri/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/get-uri/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/glob-parent\": {\n \"version\": \"5.1.2\",\n \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n \"dependencies\": {\n \"is-glob\": \"^4.0.1\"\n },\n \"engines\": {\n \"node\": \">= 6\"\n }\n },\n \"node_modules/gopd\": {\n \"version\": \"1.0.1\",\n \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n \"dependencies\": {\n \"get-intrinsic\": \"^1.1.3\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/graceful-fs\": {\n \"version\": \"4.2.11\",\n \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\"\n },\n \"node_modules/has-flag\": {\n \"version\": \"3.0.0\",\n \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/has-property-descriptors\": {\n \"version\": \"1.0.2\",\n \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n \"dependencies\": {\n \"es-define-property\": \"^1.0.0\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/has-proto\": {\n \"version\": \"1.0.3\",\n \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n \"engines\": {\n \"node\": \">= 0.4\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/has-symbols\": {\n \"version\": \"1.0.3\",\n \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n \"engines\": {\n \"node\": \">= 0.4\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/hasown\": {\n \"version\": \"2.0.2\",\n \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n \"dependencies\": {\n \"function-bind\": \"^1.1.2\"\n },\n \"engines\": {\n \"node\": \">= 0.4\"\n }\n },\n \"node_modules/http-errors\": {\n \"version\": \"2.0.0\",\n \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n \"dependencies\": {\n \"depd\": \"2.0.0\",\n \"inherits\": \"2.0.4\",\n \"setprototypeof\": \"1.2.0\",\n \"statuses\": \"2.0.1\",\n \"toidentifier\": \"1.0.1\"\n },\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/http-proxy-agent\": {\n \"version\": \"7.0.2\",\n \"resolved\": \"https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz\",\n \"integrity\": \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\",\n \"dependencies\": {\n \"agent-base\": \"^7.1.0\",\n \"debug\": \"^4.3.4\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/http-proxy-agent/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/http-proxy-agent/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/https-proxy-agent\": {\n \"version\": \"7.0.5\",\n \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.5.tgz\",\n \"integrity\": \"sha512-1e4Wqeblerz+tMKPIq2EMGiiWW1dIjZOksyHWSUm1rmuvw/how9hBHZ38lAGj5ID4Ik6EdkOw7NmWPy6LAwalw==\",\n \"dependencies\": {\n \"agent-base\": \"^7.0.2\",\n \"debug\": \"4\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/https-proxy-agent/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/https-proxy-agent/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/iconv-lite\": {\n \"version\": \"0.4.24\",\n \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n \"dependencies\": {\n \"safer-buffer\": \">= 2.1.2 < 3\"\n },\n \"engines\": {\n \"node\": \">=0.10.0\"\n }\n },\n \"node_modules/ieee754\": {\n \"version\": \"1.2.1\",\n \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n \"funding\": [\n {\n \"type\": \"github\",\n \"url\": \"https://github.com/sponsors/feross\"\n },\n {\n \"type\": \"patreon\",\n \"url\": \"https://www.patreon.com/feross\"\n },\n {\n \"type\": \"consulting\",\n \"url\": \"https://feross.org/support\"\n }\n ]\n },\n \"node_modules/import-fresh\": {\n \"version\": \"3.3.0\",\n \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n \"dependencies\": {\n \"parent-module\": \"^1.0.0\",\n \"resolve-from\": \"^4.0.0\"\n },\n \"engines\": {\n \"node\": \">=6\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/sindresorhus\"\n }\n },\n \"node_modules/inherits\": {\n \"version\": \"2.0.4\",\n \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n },\n \"node_modules/ip-address\": {\n \"version\": \"9.0.5\",\n \"resolved\": \"https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz\",\n \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n \"dependencies\": {\n \"jsbn\": \"1.1.0\",\n \"sprintf-js\": \"^1.1.3\"\n },\n \"engines\": {\n \"node\": \">= 12\"\n }\n },\n \"node_modules/ipaddr.js\": {\n \"version\": \"1.9.1\",\n \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n \"engines\": {\n \"node\": \">= 0.10\"\n }\n },\n \"node_modules/is-arrayish\": {\n \"version\": \"0.2.1\",\n \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\"\n },\n \"node_modules/is-binary-path\": {\n \"version\": \"2.1.0\",\n \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n \"dependencies\": {\n \"binary-extensions\": \"^2.0.0\"\n },\n \"engines\": {\n \"node\": \">=8\"\n }\n },\n \"node_modules/is-extglob\": {\n \"version\": \"2.1.1\",\n \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n \"engines\": {\n \"node\": \">=0.10.0\"\n }\n },\n \"node_modules/is-fullwidth-code-point\": {\n \"version\": \"3.0.0\",\n \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n \"engines\": {\n \"node\": \">=8\"\n }\n },\n \"node_modules/is-glob\": {\n \"version\": \"4.0.3\",\n \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n \"dependencies\": {\n \"is-extglob\": \"^2.1.1\"\n },\n \"engines\": {\n \"node\": \">=0.10.0\"\n }\n },\n \"node_modules/is-number\": {\n \"version\": \"7.0.0\",\n \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n \"engines\": {\n \"node\": \">=0.12.0\"\n }\n },\n \"node_modules/js-tokens\": {\n \"version\": \"4.0.0\",\n \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n },\n \"node_modules/js-yaml\": {\n \"version\": \"4.1.0\",\n \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n \"dependencies\": {\n \"argparse\": \"^2.0.1\"\n },\n \"bin\": {\n \"js-yaml\": \"bin/js-yaml.js\"\n }\n },\n \"node_modules/jsbn\": {\n \"version\": \"1.1.0\",\n \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz\",\n \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\"\n },\n \"node_modules/json-parse-even-better-errors\": {\n \"version\": \"2.3.1\",\n \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\"\n },\n \"node_modules/jsonfile\": {\n \"version\": \"6.1.0\",\n \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\",\n \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n \"dependencies\": {\n \"universalify\": \"^2.0.0\"\n },\n \"optionalDependencies\": {\n \"graceful-fs\": \"^4.1.6\"\n }\n },\n \"node_modules/lines-and-columns\": {\n \"version\": \"1.2.4\",\n \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"\n },\n \"node_modules/lru-cache\": {\n \"version\": \"7.18.3\",\n \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-7.18.3.tgz\",\n \"integrity\": \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\",\n \"engines\": {\n \"node\": \">=12\"\n }\n },\n \"node_modules/media-typer\": {\n \"version\": \"0.3.0\",\n \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/merge-descriptors\": {\n \"version\": \"1.0.1\",\n \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\n \"integrity\": \"sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w==\"\n },\n \"node_modules/methods\": {\n \"version\": \"1.1.2\",\n \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/mime\": {\n \"version\": \"1.6.0\",\n \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n \"bin\": {\n \"mime\": \"cli.js\"\n },\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/mime-db\": {\n \"version\": \"1.52.0\",\n \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/mime-types\": {\n \"version\": \"2.1.35\",\n \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n \"dependencies\": {\n \"mime-db\": \"1.52.0\"\n },\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/mitt\": {\n \"version\": \"3.0.1\",\n \"resolved\": \"https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz\",\n \"integrity\": \"sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==\"\n },\n \"node_modules/ms\": {\n \"version\": \"2.0.0\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"\n },\n \"node_modules/negotiator\": {\n \"version\": \"0.6.3\",\n \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/netmask\": {\n \"version\": \"2.0.2\",\n \"resolved\": \"https://registry.npmjs.org/netmask/-/netmask-2.0.2.tgz\",\n \"integrity\": \"sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==\",\n \"engines\": {\n \"node\": \">= 0.4.0\"\n }\n },\n \"node_modules/normalize-path\": {\n \"version\": \"3.0.0\",\n \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n \"engines\": {\n \"node\": \">=0.10.0\"\n }\n },\n \"node_modules/object-inspect\": {\n \"version\": \"1.13.2\",\n \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.2.tgz\",\n \"integrity\": \"sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==\",\n \"engines\": {\n \"node\": \">= 0.4\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/on-finished\": {\n \"version\": \"2.4.1\",\n \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n \"dependencies\": {\n \"ee-first\": \"1.1.1\"\n },\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/once\": {\n \"version\": \"1.4.0\",\n \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n \"dependencies\": {\n \"wrappy\": \"1\"\n }\n },\n \"node_modules/pac-proxy-agent\": {\n \"version\": \"7.0.2\",\n \"resolved\": \"https://registry.npmjs.org/pac-proxy-agent/-/pac-proxy-agent-7.0.2.tgz\",\n \"integrity\": \"sha512-BFi3vZnO9X5Qt6NRz7ZOaPja3ic0PhlsmCRYLOpN11+mWBCR6XJDqW5RF3j8jm4WGGQZtBA+bTfxYzeKW73eHg==\",\n \"dependencies\": {\n \"@tootallnate/quickjs-emscripten\": \"^0.23.0\",\n \"agent-base\": \"^7.0.2\",\n \"debug\": \"^4.3.4\",\n \"get-uri\": \"^6.0.1\",\n \"http-proxy-agent\": \"^7.0.0\",\n \"https-proxy-agent\": \"^7.0.5\",\n \"pac-resolver\": \"^7.0.1\",\n \"socks-proxy-agent\": \"^8.0.4\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/pac-proxy-agent/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/pac-proxy-agent/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/pac-resolver\": {\n \"version\": \"7.0.1\",\n \"resolved\": \"https://registry.npmjs.org/pac-resolver/-/pac-resolver-7.0.1.tgz\",\n \"integrity\": \"sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==\",\n \"dependencies\": {\n \"degenerator\": \"^5.0.0\",\n \"netmask\": \"^2.0.2\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/parent-module\": {\n \"version\": \"1.0.1\",\n \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n \"dependencies\": {\n \"callsites\": \"^3.0.0\"\n },\n \"engines\": {\n \"node\": \">=6\"\n }\n },\n \"node_modules/parse-json\": {\n \"version\": \"5.2.0\",\n \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n \"integrity\": \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\",\n \"dependencies\": {\n \"@babel/code-frame\": \"^7.0.0\",\n \"error-ex\": \"^1.3.1\",\n \"json-parse-even-better-errors\": \"^2.3.0\",\n \"lines-and-columns\": \"^1.1.6\"\n },\n \"engines\": {\n \"node\": \">=8\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/sindresorhus\"\n }\n },\n \"node_modules/parseurl\": {\n \"version\": \"1.3.3\",\n \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/path-to-regexp\": {\n \"version\": \"0.1.7\",\n \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\n \"integrity\": \"sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==\"\n },\n \"node_modules/pend\": {\n \"version\": \"1.2.0\",\n \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",\n \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\"\n },\n \"node_modules/picocolors\": {\n \"version\": \"1.0.1\",\n \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.1.tgz\",\n \"integrity\": \"sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==\"\n },\n \"node_modules/picomatch\": {\n \"version\": \"2.3.1\",\n \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n \"engines\": {\n \"node\": \">=8.6\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/jonschlinkert\"\n }\n },\n \"node_modules/progress\": {\n \"version\": \"2.0.3\",\n \"resolved\": \"https://registry.npmjs.org/progress/-/progress-2.0.3.tgz\",\n \"integrity\": \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\",\n \"engines\": {\n \"node\": \">=0.4.0\"\n }\n },\n \"node_modules/proxy-addr\": {\n \"version\": \"2.0.7\",\n \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n \"dependencies\": {\n \"forwarded\": \"0.2.0\",\n \"ipaddr.js\": \"1.9.1\"\n },\n \"engines\": {\n \"node\": \">= 0.10\"\n }\n },\n \"node_modules/proxy-agent\": {\n \"version\": \"6.4.0\",\n \"resolved\": \"https://registry.npmjs.org/proxy-agent/-/proxy-agent-6.4.0.tgz\",\n \"integrity\": \"sha512-u0piLU+nCOHMgGjRbimiXmA9kM/L9EHh3zL81xCdp7m+Y2pHIsnmbdDoEDoAz5geaonNR6q6+yOPQs6n4T6sBQ==\",\n \"dependencies\": {\n \"agent-base\": \"^7.0.2\",\n \"debug\": \"^4.3.4\",\n \"http-proxy-agent\": \"^7.0.1\",\n \"https-proxy-agent\": \"^7.0.3\",\n \"lru-cache\": \"^7.14.1\",\n \"pac-proxy-agent\": \"^7.0.1\",\n \"proxy-from-env\": \"^1.1.0\",\n \"socks-proxy-agent\": \"^8.0.2\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/proxy-agent/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/proxy-agent/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/proxy-from-env\": {\n \"version\": \"1.1.0\",\n \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"\n },\n \"node_modules/pump\": {\n \"version\": \"3.0.0\",\n \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n \"dependencies\": {\n \"end-of-stream\": \"^1.1.0\",\n \"once\": \"^1.3.1\"\n }\n },\n \"node_modules/puppeteer\": {\n \"version\": \"22.15.0\",\n \"resolved\": \"https://registry.npmjs.org/puppeteer/-/puppeteer-22.15.0.tgz\",\n \"integrity\": \"sha512-XjCY1SiSEi1T7iSYuxS82ft85kwDJUS7wj1Z0eGVXKdtr5g4xnVcbjwxhq5xBnpK/E7x1VZZoJDxpjAOasHT4Q==\",\n \"hasInstallScript\": true,\n \"dependencies\": {\n \"@puppeteer/browsers\": \"2.3.0\",\n \"cosmiconfig\": \"^9.0.0\",\n \"devtools-protocol\": \"0.0.1312386\",\n \"puppeteer-core\": \"22.15.0\"\n },\n \"bin\": {\n \"puppeteer\": \"lib/esm/puppeteer/node/cli.js\"\n },\n \"engines\": {\n \"node\": \">=18\"\n }\n },\n \"node_modules/puppeteer-core\": {\n \"version\": \"22.15.0\",\n \"resolved\": \"https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-22.15.0.tgz\",\n \"integrity\": \"sha512-cHArnywCiAAVXa3t4GGL2vttNxh7GqXtIYGym99egkNJ3oG//wL9LkvO4WE8W1TJe95t1F1ocu9X4xWaGsOKOA==\",\n \"dependencies\": {\n \"@puppeteer/browsers\": \"2.3.0\",\n \"chromium-bidi\": \"0.6.3\",\n \"debug\": \"^4.3.6\",\n \"devtools-protocol\": \"0.0.1312386\",\n \"ws\": \"^8.18.0\"\n },\n \"engines\": {\n \"node\": \">=18\"\n }\n },\n \"node_modules/puppeteer-core/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/puppeteer-core/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/qs\": {\n \"version\": \"6.11.0\",\n \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.0.tgz\",\n \"integrity\": \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\",\n \"dependencies\": {\n \"side-channel\": \"^1.0.4\"\n },\n \"engines\": {\n \"node\": \">=0.6\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/queue-tick\": {\n \"version\": \"1.0.1\",\n \"resolved\": \"https://registry.npmjs.org/queue-tick/-/queue-tick-1.0.1.tgz\",\n \"integrity\": \"sha512-kJt5qhMxoszgU/62PLP1CJytzd2NKetjSRnyuj31fDd3Rlcz3fzlFdFLD1SItunPwyqEOkca6GbV612BWfaBag==\"\n },\n \"node_modules/range-parser\": {\n \"version\": \"1.2.1\",\n \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/raw-body\": {\n \"version\": \"2.5.2\",\n \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\n \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\n \"dependencies\": {\n \"bytes\": \"3.1.2\",\n \"http-errors\": \"2.0.0\",\n \"iconv-lite\": \"0.4.24\",\n \"unpipe\": \"1.0.0\"\n },\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/readdirp\": {\n \"version\": \"3.6.0\",\n \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n \"dependencies\": {\n \"picomatch\": \"^2.2.1\"\n },\n \"engines\": {\n \"node\": \">=8.10.0\"\n }\n },\n \"node_modules/require-directory\": {\n \"version\": \"2.1.1\",\n \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n \"engines\": {\n \"node\": \">=0.10.0\"\n }\n },\n \"node_modules/resolve-from\": {\n \"version\": \"4.0.0\",\n \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/safe-buffer\": {\n \"version\": \"5.2.1\",\n \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n \"funding\": [\n {\n \"type\": \"github\",\n \"url\": \"https://github.com/sponsors/feross\"\n },\n {\n \"type\": \"patreon\",\n \"url\": \"https://www.patreon.com/feross\"\n },\n {\n \"type\": \"consulting\",\n \"url\": \"https://feross.org/support\"\n }\n ]\n },\n \"node_modules/safer-buffer\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\n },\n \"node_modules/semver\": {\n \"version\": \"7.6.3\",\n \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n \"bin\": {\n \"semver\": \"bin/semver.js\"\n },\n \"engines\": {\n \"node\": \">=10\"\n }\n },\n \"node_modules/send\": {\n \"version\": \"0.18.0\",\n \"resolved\": \"https://registry.npmjs.org/send/-/send-0.18.0.tgz\",\n \"integrity\": \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\",\n \"dependencies\": {\n \"debug\": \"2.6.9\",\n \"depd\": \"2.0.0\",\n \"destroy\": \"1.2.0\",\n \"encodeurl\": \"~1.0.2\",\n \"escape-html\": \"~1.0.3\",\n \"etag\": \"~1.8.1\",\n \"fresh\": \"0.5.2\",\n \"http-errors\": \"2.0.0\",\n \"mime\": \"1.6.0\",\n \"ms\": \"2.1.3\",\n \"on-finished\": \"2.4.1\",\n \"range-parser\": \"~1.2.1\",\n \"statuses\": \"2.0.1\"\n },\n \"engines\": {\n \"node\": \">= 0.8.0\"\n }\n },\n \"node_modules/send/node_modules/ms\": {\n \"version\": \"2.1.3\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n },\n \"node_modules/serve-static\": {\n \"version\": \"1.15.0\",\n \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz\",\n \"integrity\": \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\",\n \"dependencies\": {\n \"encodeurl\": \"~1.0.2\",\n \"escape-html\": \"~1.0.3\",\n \"parseurl\": \"~1.3.3\",\n \"send\": \"0.18.0\"\n },\n \"engines\": {\n \"node\": \">= 0.8.0\"\n }\n },\n \"node_modules/set-function-length\": {\n \"version\": \"1.2.2\",\n \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n \"dependencies\": {\n \"define-data-property\": \"^1.1.4\",\n \"es-errors\": \"^1.3.0\",\n \"function-bind\": \"^1.1.2\",\n \"get-intrinsic\": \"^1.2.4\",\n \"gopd\": \"^1.0.1\",\n \"has-property-descriptors\": \"^1.0.2\"\n },\n \"engines\": {\n \"node\": \">= 0.4\"\n }\n },\n \"node_modules/setprototypeof\": {\n \"version\": \"1.2.0\",\n \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\n },\n \"node_modules/side-channel\": {\n \"version\": \"1.0.6\",\n \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n \"dependencies\": {\n \"call-bind\": \"^1.0.7\",\n \"es-errors\": \"^1.3.0\",\n \"get-intrinsic\": \"^1.2.4\",\n \"object-inspect\": \"^1.13.1\"\n },\n \"engines\": {\n \"node\": \">= 0.4\"\n },\n \"funding\": {\n \"url\": \"https://github.com/sponsors/ljharb\"\n }\n },\n \"node_modules/smart-buffer\": {\n \"version\": \"4.2.0\",\n \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n \"engines\": {\n \"node\": \">= 6.0.0\",\n \"npm\": \">= 3.0.0\"\n }\n },\n \"node_modules/socks\": {\n \"version\": \"2.8.3\",\n \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.8.3.tgz\",\n \"integrity\": \"sha512-l5x7VUUWbjVFbafGLxPWkYsHIhEvmF85tbIeFZWc8ZPtoMyybuEhL7Jye/ooC4/d48FgOjSJXgsF/AJPYCW8Zw==\",\n \"dependencies\": {\n \"ip-address\": \"^9.0.5\",\n \"smart-buffer\": \"^4.2.0\"\n },\n \"engines\": {\n \"node\": \">= 10.0.0\",\n \"npm\": \">= 3.0.0\"\n }\n },\n \"node_modules/socks-proxy-agent\": {\n \"version\": \"8.0.4\",\n \"resolved\": \"https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-8.0.4.tgz\",\n \"integrity\": \"sha512-GNAq/eg8Udq2x0eNiFkr9gRg5bA7PXEWagQdeRX4cPSG+X/8V38v637gim9bjFptMk1QWsCTr0ttrJEiXbNnRw==\",\n \"dependencies\": {\n \"agent-base\": \"^7.1.1\",\n \"debug\": \"^4.3.4\",\n \"socks\": \"^2.8.3\"\n },\n \"engines\": {\n \"node\": \">= 14\"\n }\n },\n \"node_modules/socks-proxy-agent/node_modules/debug\": {\n \"version\": \"4.3.6\",\n \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n \"dependencies\": {\n \"ms\": \"2.1.2\"\n },\n \"engines\": {\n \"node\": \">=6.0\"\n },\n \"peerDependenciesMeta\": {\n \"supports-color\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/socks-proxy-agent/node_modules/ms\": {\n \"version\": \"2.1.2\",\n \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n },\n \"node_modules/source-map\": {\n \"version\": \"0.6.1\",\n \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n \"optional\": true,\n \"engines\": {\n \"node\": \">=0.10.0\"\n }\n },\n \"node_modules/sprintf-js\": {\n \"version\": \"1.1.3\",\n \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\"\n },\n \"node_modules/statuses\": {\n \"version\": \"2.0.1\",\n \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/streamx\": {\n \"version\": \"2.18.0\",\n \"resolved\": \"https://registry.npmjs.org/streamx/-/streamx-2.18.0.tgz\",\n \"integrity\": \"sha512-LLUC1TWdjVdn1weXGcSxyTR3T4+acB6tVGXT95y0nGbca4t4o/ng1wKAGTljm9VicuCVLvRlqFYXYy5GwgM7sQ==\",\n \"dependencies\": {\n \"fast-fifo\": \"^1.3.2\",\n \"queue-tick\": \"^1.0.1\",\n \"text-decoder\": \"^1.1.0\"\n },\n \"optionalDependencies\": {\n \"bare-events\": \"^2.2.0\"\n }\n },\n \"node_modules/string-width\": {\n \"version\": \"4.2.3\",\n \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n \"dependencies\": {\n \"emoji-regex\": \"^8.0.0\",\n \"is-fullwidth-code-point\": \"^3.0.0\",\n \"strip-ansi\": \"^6.0.1\"\n },\n \"engines\": {\n \"node\": \">=8\"\n }\n },\n \"node_modules/strip-ansi\": {\n \"version\": \"6.0.1\",\n \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n \"dependencies\": {\n \"ansi-regex\": \"^5.0.1\"\n },\n \"engines\": {\n \"node\": \">=8\"\n }\n },\n \"node_modules/supports-color\": {\n \"version\": \"5.5.0\",\n \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n \"dependencies\": {\n \"has-flag\": \"^3.0.0\"\n },\n \"engines\": {\n \"node\": \">=4\"\n }\n },\n \"node_modules/tar-fs\": {\n \"version\": \"3.0.6\",\n \"resolved\": \"https://registry.npmjs.org/tar-fs/-/tar-fs-3.0.6.tgz\",\n \"integrity\": \"sha512-iokBDQQkUyeXhgPYaZxmczGPhnhXZ0CmrqI+MOb/WFGS9DW5wnfrLgtjUJBvz50vQ3qfRwJ62QVoCFu8mPVu5w==\",\n \"dependencies\": {\n \"pump\": \"^3.0.0\",\n \"tar-stream\": \"^3.1.5\"\n },\n \"optionalDependencies\": {\n \"bare-fs\": \"^2.1.1\",\n \"bare-path\": \"^2.1.0\"\n }\n },\n \"node_modules/tar-stream\": {\n \"version\": \"3.1.7\",\n \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-3.1.7.tgz\",\n \"integrity\": \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\",\n \"dependencies\": {\n \"b4a\": \"^1.6.4\",\n \"fast-fifo\": \"^1.2.0\",\n \"streamx\": \"^2.15.0\"\n }\n },\n \"node_modules/text-decoder\": {\n \"version\": \"1.1.1\",\n \"resolved\": \"https://registry.npmjs.org/text-decoder/-/text-decoder-1.1.1.tgz\",\n \"integrity\": \"sha512-8zll7REEv4GDD3x4/0pW+ppIxSNs7H1J10IKFZsuOMscumCdM2a+toDGLPA3T+1+fLBql4zbt5z83GEQGGV5VA==\",\n \"dependencies\": {\n \"b4a\": \"^1.6.4\"\n }\n },\n \"node_modules/through\": {\n \"version\": \"2.3.8\",\n \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n \"integrity\": \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\"\n },\n \"node_modules/to-regex-range\": {\n \"version\": \"5.0.1\",\n \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n \"dependencies\": {\n \"is-number\": \"^7.0.0\"\n },\n \"engines\": {\n \"node\": \">=8.0\"\n }\n },\n \"node_modules/toidentifier\": {\n \"version\": \"1.0.1\",\n \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n \"engines\": {\n \"node\": \">=0.6\"\n }\n },\n \"node_modules/tslib\": {\n \"version\": \"2.6.3\",\n \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.6.3.tgz\",\n \"integrity\": \"sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==\"\n },\n \"node_modules/type-is\": {\n \"version\": \"1.6.18\",\n \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n \"dependencies\": {\n \"media-typer\": \"0.3.0\",\n \"mime-types\": \"~2.1.24\"\n },\n \"engines\": {\n \"node\": \">= 0.6\"\n }\n },\n \"node_modules/unbzip2-stream\": {\n \"version\": \"1.4.3\",\n \"resolved\": \"https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz\",\n \"integrity\": \"sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==\",\n \"dependencies\": {\n \"buffer\": \"^5.2.1\",\n \"through\": \"^2.3.8\"\n }\n },\n \"node_modules/undici-types\": {\n \"version\": \"6.13.0\",\n \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-6.13.0.tgz\",\n \"integrity\": \"sha512-xtFJHudx8S2DSoujjMd1WeWvn7KKWFRESZTMeL1RptAYERu29D6jphMjjY+vn96jvN3kVPDNxU/E13VTaXj6jg==\",\n \"optional\": true\n },\n \"node_modules/universalify\": {\n \"version\": \"2.0.1\",\n \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz\",\n \"integrity\": \"sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==\",\n \"engines\": {\n \"node\": \">= 10.0.0\"\n }\n },\n \"node_modules/unpipe\": {\n \"version\": \"1.0.0\",\n \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/urlpattern-polyfill\": {\n \"version\": \"10.0.0\",\n \"resolved\": \"https://registry.npmjs.org/urlpattern-polyfill/-/urlpattern-polyfill-10.0.0.tgz\",\n \"integrity\": \"sha512-H/A06tKD7sS1O1X2SshBVeA5FLycRpjqiBeqGKmBwBDBy28EnRjORxTNe269KSSr5un5qyWi1iL61wLxpd+ZOg==\"\n },\n \"node_modules/utils-merge\": {\n \"version\": \"1.0.1\",\n \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n \"engines\": {\n \"node\": \">= 0.4.0\"\n }\n },\n \"node_modules/vary\": {\n \"version\": \"1.1.2\",\n \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n \"engines\": {\n \"node\": \">= 0.8\"\n }\n },\n \"node_modules/wrap-ansi\": {\n \"version\": \"7.0.0\",\n \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n \"dependencies\": {\n \"ansi-styles\": \"^4.0.0\",\n \"string-width\": \"^4.1.0\",\n \"strip-ansi\": \"^6.0.0\"\n },\n \"engines\": {\n \"node\": \">=10\"\n },\n \"funding\": {\n \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n }\n },\n \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n \"version\": \"4.3.0\",\n \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n \"dependencies\": {\n \"color-convert\": \"^2.0.1\"\n },\n \"engines\": {\n \"node\": \">=8\"\n },\n \"funding\": {\n \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n }\n },\n \"node_modules/wrap-ansi/node_modules/color-convert\": {\n \"version\": \"2.0.1\",\n \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n \"dependencies\": {\n \"color-name\": \"~1.1.4\"\n },\n \"engines\": {\n \"node\": \">=7.0.0\"\n }\n },\n \"node_modules/wrap-ansi/node_modules/color-name\": {\n \"version\": \"1.1.4\",\n \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"\n },\n \"node_modules/wrappy\": {\n \"version\": \"1.0.2\",\n \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\"\n },\n \"node_modules/ws\": {\n \"version\": \"8.18.0\",\n \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.18.0.tgz\",\n \"integrity\": \"sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==\",\n \"engines\": {\n \"node\": \">=10.0.0\"\n },\n \"peerDependencies\": {\n \"bufferutil\": \"^4.0.1\",\n \"utf-8-validate\": \">=5.0.2\"\n },\n \"peerDependenciesMeta\": {\n \"bufferutil\": {\n \"optional\": true\n },\n \"utf-8-validate\": {\n \"optional\": true\n }\n }\n },\n \"node_modules/y18n\": {\n \"version\": \"5.0.8\",\n \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n \"engines\": {\n \"node\": \">=10\"\n }\n },\n \"node_modules/yargs\": {\n \"version\": \"17.7.2\",\n \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n \"dependencies\": {\n \"cliui\": \"^8.0.1\",\n \"escalade\": \"^3.1.1\",\n \"get-caller-file\": \"^2.0.5\",\n \"require-directory\": \"^2.1.1\",\n \"string-width\": \"^4.2.3\",\n \"y18n\": \"^5.0.5\",\n \"yargs-parser\": \"^21.1.1\"\n },\n \"engines\": {\n \"node\": \">=12\"\n }\n },\n \"node_modules/yargs-parser\": {\n \"version\": \"21.1.1\",\n \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n \"engines\": {\n \"node\": \">=12\"\n }\n },\n \"node_modules/yauzl\": {\n \"version\": \"2.10.0\",\n \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz\",\n \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\",\n \"dependencies\": {\n \"buffer-crc32\": \"~0.2.3\",\n \"fd-slicer\": \"~1.1.0\"\n }\n },\n \"node_modules/zod\": {\n \"version\": \"3.23.8\",\n \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.23.8.tgz\",\n \"integrity\": \"sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==\",\n \"funding\": {\n \"url\": \"https://github.com/sponsors/colinhacks\"\n }\n }\n }\n}","height: 25px;","await execAsync(`git add .`, { cwd: './' })","#returnToTopButton {","margin: 2.5px;","@media (max-aspect-ratio: 1/1) {","fs.writeFileSync('./output/index.html', html, 'utf8')","width: 100vw;","function smartRemoveExtra(path, allowed) {","top: 50%;","width: 1px;",".video_wrapper span {","console.log(commitMessage)","filter: blur(0) saturate(1);","transform: translate(-50%, -50%);","left: 50%;","#info div {","display: flex;","logDelay('Main start')","if (previewMode)","// Commit the changes","const missingMainPreview = !fs.existsSync('./output/preview.png')","color: var(--highlight)","await execAsync(`git commit -m \"${commitMessage}\"`, { cwd: './' })","let generatingWebsite = false","color: var(--white);","for (const file of fs.readdirSync(path))","border-top: none;","async function generateLinkPreviews() {","height: 100%;","const previewMode = process.argv.includes('previewMode')","mem.lastFileHashes = fileHashes","font-size: 2em;","text-decoration: underline;",".video_wrapper:hover {","fs.rmSync(`${path}/${file}`, { recursive: true, force: true })","border-radius: 0 0 15px 15px;","cursor: pointer;","} catch (error) {","#returnToTopButton span {","fs.writeFileSync('../mem.json', JSON.stringify(mem), 'utf8')","if (!fs.existsSync('./output')) fs.mkdirSync('./output')","const postsMissingPreview = fs.readdirSync('./output/posts').filter(post => !fs.existsSync(`./output/posts/${post}/preview.png`))","if (outputHashChanged || missingMainPreview || changedPosts.length || postsMissingPreview.length)","console.error('Error pushing changes to GitHub:', error)","console.log('Generating website')","// fs.copyFileSync = wrapFunction(fs.copyFileSync, (...args) => console.log('copy', ...args))","smartRemoveExtra('./output', ['.git', 'backgrounds', 'posts', 'backgroundManager.js', 'firaCode.ttf', 'index.html', 'mem.json', 'postStyles.css', 'siteStyles.css', 'updateStats.js', 'preview.png'])","logDelay.start = Date.now()","console.log('posts:', JSON.parse(process.argv[process.argv.indexOf('previewMode') + 1]))","// fs.writeFileSync = wrapFunction(fs.writeFileSync, (to) => console.log('write', to))","const puppeteer = require('puppeteer')","function setupFolder() {","await generateLinkPreviews()","// function wrapFunction(func, prefunc) {","// }","smartCopyFile('./blankSite.html', './output/index.html')","smartCopyFile('./updateHomeStats.js', './output/updateStats.js')","smartCopyFile('./README.md', './output/README.md')","postPaths.forEach(postPath => generatePost(postPath))","logDelay.logs.forEach(log => console.log(...log))","smartCopyFile('./postStyles.css', './output/postStyles.css')","return new Promise(async resolve => {","smartCopyFile('./siteStyles.css', './output/siteStyles.css')","smartMakeDir('./output/backgrounds')","// func(...args)","const http = require('http')","let waitingToGenerateWebsite = false","// prefunc(...args)","})()","const crypto = require('crypto')","console.log('Taking preview screenshots.')","logDelay('Program start')","const markup = require('./markup.js')","async function generateWebsite(postsWaitingToGenerateString) {","const livePreviewInjection = `","process.exit(0)","smartCopyFile('./firaCode.ttf', './output/firaCode.ttf')","smartMakeDir('./output/posts')","function findPostPaths() {","// return (...args) => {","if (fs.lstatSync(`../${projectDiv}/${projectItem}`).isDirectory() && projectItem.split('blogPost_')[0] == '')","const app = express()","const express = require('express')","return postPaths.sort((a, b) => getMem().postsCreated[b.split('blogPost_')[1]] - getMem().postsCreated[a.split('blogPost_')[1]])","const process = spawn({","`","${fs.readFileSync('./livePreviewInjection.js', 'utf-8')}","const startTime = Date.now()","cmd: ['bun', 'generateWebsite.js', 'previewMode', postsWaitingToGenerateString, ...(argv.includes('background') ? ['hidePostContent'] : [])],","if (showSpawnLogs) {","app.use(express.static('./output'))","logDelay('Generated posts')","for await (const chunk of process.stdout)","const server = app.listen(8080, (error) => {","function cleanPostsFolder(postPaths) {","stdout: 'pipe',","postPaths.push(`../${projectDiv}/${projectItem}`)","stderr: 'pipe'","generateMainPage(postPaths, previewMode)","let paths = fs.readFileSync('./ignoredPaths.txt', 'utf8').split('\\r\\n')","let dontScan = []","paths.forEach(path => {","JSON.parse(process.argv[process.argv.indexOf('previewMode') + 1]).forEach(postPath => generatePost(postPath, true))","const interval = setInterval(() => {","spawnLogs.push(...new TextDecoder().decode(chunk).split('\\n').filter(message => message !== '').map(message => ({ message, time: Date.now(), type: 'log' })))","const ignoredPaths = (() => {","logDelay('Saved stats')","resolve(server)","fs.readdirSync('../').forEach(projectDiv => {","http.get('http://localhost:8080', (res) => {","const prefix = path.slice(0, 1)","if (fs.lstatSync(`../${projectDiv}`).isDirectory())","logDelay('Generated link previews')","if (res.statusCode === 200) {","const postPaths = []","clearInterval(interval)","fs.readdirSync(`../${projectDiv}`).forEach(projectItem => {","const chokidar = require('chokidar')","if (error) {","logDelay('Imported modules')","const server = await new Promise((resolve, reject) => {","server.on('error', (err) => {","const page = await browser.newPage()","spawnLogs.push(...new TextDecoder().decode(chunk).split('\\n').filter(message => message !== '').map(message => ({ message, time: Date.now(), type: 'error' })))","const logDelay = (...args) => {","if (path.slice(0, 2) == '//') return","if (logDelay.logs === undefined) logDelay.logs = []","postPaths = postPaths.map(post => post.split('blogPost_')[1])","logDelay.log = () => {","const browser = await puppeteer.launch()","fs.readFileSync(`${postPath}/background.js`, 'utf8').split('\\r\\n').forEach(line => {","if (logDelay.lastLog === undefined) logDelay.lastLog = logDelay.start","let dontCount = []","let dontPath = []","await process.exited","await page.setViewport(await page.evaluate(() => ({","logDelay.log()","logDelay.logs.push([Date.now() - logDelay.start, Date.now() - logDelay.lastLog, ...args])","logDelay.lastLog = Date.now()","const colors = {","if (line.slice(0, 26) == '//includeInHomeBackgrounds')","}).on('error', () => { })","}, 100)","for await (const chunk of process.stderr)","backgroundPaths.push(`./posts/${postPath.split('blogPost_')[1]}/background.js`)","backgroundPaths.push(...fs.readdirSync('./mainPageBackgrounds').map(path => `./backgrounds/${path}`))","smartCopyDir('./mainPageBackgrounds', './output/backgrounds')","smartRemoveExtra('./output/backgrounds', backgroundPaths.map(path => path.slice(14)))","reset: '\\x1b[0m',","bright: '\\x1b[1m',","reject(err)","for (const file of fs.readdirSync('./output/posts'))","if (!postPaths.includes(file))","logDelay('Generated main page')","saveAndCopyStats(true || !previewMode)","width: 2000,","function hashFileContents(filePath) {","dim: '\\x1b[2m',","fs.rmSync(`./output/posts/${file}`, { recursive: true, force: true })","if (outputHashChanged || missingMainPreview) {","fs.writeFileSync('./output/backgroundManager.js', `const backgroundPaths = ${JSON.stringify(backgroundPaths)};\\r\\n${fs.readFileSync('./siteBackgroundManager.js', 'utf8')}`, 'utf8')","const { resolve, join, extname } = require('path')","underscore: '\\x1b[4m',","if (fs.existsSync(`${postPath}/background.js`)) {","const backgroundPaths = []","postPaths.forEach(async postPath => {","})))","import { serve, file as BunFile } from 'bun'","console.log('Website generated in', Date.now() - startTime, 'ms')","function setupLiveBackgrounds(postPaths) {","height: 1000","(await page.target().createCDPSession()).send('Network.clearBrowserCache')","if (!previewMode) {","blink: '\\x1b[5m',","reverse: '\\x1b[7m',","await page.goto(`http://localhost:8080/index.html`);","hidden: '\\x1b[8m',","await page.reload({ waitUntil: ['networkidle0'], bypassCache: true })","fg: {","await page.waitForSelector('#backgroundCanvas')","green: '\\x1b[32m',","yellow: '\\x1b[33m',","red: '\\x1b[31m',","black: '\\x1b[30m',","console.log('Screenshotting main page.')","const canvas = document.getElementById('backgroundCanvas')","await page.evaluate(() => {","canvas.style.transition = 'all 0s'","for (const post of [...changedPosts, ...postsMissingPreview].sort().reduce((acc, item) => {","canvas.style.filter = 'blur(0px)'","await page.screenshot({ path: './output/preview.png' })","return acc","if (acc[acc.length - 1] !== item) acc.push(item)","server.on('close', resolve)","}, [])) {","server.close()","await new Promise(resolve => {","await page.screenshot({ path: `./output/posts/${post}/preview.png` })","console.log(`Screenshotting post: ${post}`)","await page.goto(`http://localhost:8080//posts/${post}/index.html`);","await browser.close()","setInterval(updateConsole, 100)","cyan: '\\x1b[46m',","* charAt + toLowerCase","function updateConsole() {","// Normalize root path to serve index.html","const readline = require('readline')","white: '\\x1b[47m',","if (watchAll)","out.push(`font-style:${value ? 'italic' : 'normal'}`)","if (path === '/') {","//used so I can check nextProp without it existing","crimson: '\\x1b[48m'","magenta: '\\x1b[45m',","const consoleUpdateChars = '⸺⟋|⟍'","red: '\\x1b[41m',","*/","let consoleUpdateIndex = 0","process.stdout.write('\\x1b[?25l')","const ls = (str, start, stop) => str.slice(start, stop).toLowerCase()","// Serve the file","const lines = []","updateConsole()","const wrapper = document.currentScript.parentNode","readline.emitKeypressEvents(process.stdin)","cyan: '\\x1b[36m',","magenta: '\\x1b[35m',","const file = BunFile(filePath)","out.push(`color:${value}`)","else if (key == 'size')","* slice + toLowerCase","blue: '\\x1b[34m',","const emptyString = new Array(2 ** 16).fill(' ').join('')","if (process.stdin.isTTY)","lines.push(`${numberOfConnections === 0 ? colors.fg.red : colors.fg.green}There ${numberOfConnections === 1 ? 'is' : 'are'} ${numberOfConnections} connected websocket${numberOfConnections === 1 ? '' : 's'} for live previewing${colors.reset}`)","lines.push(`${colors.fg.cyan}Hosting site at ${colors.fg.yellow}${colors.underscore}${server.url}${colors.reset}`)","process.stdin.setRawMode(true)","lines.push(`${colors.bright}[${colors.fg.magenta}${consoleUpdateChars[consoleUpdateIndex]}${colors.fg.white}] LIVE PREVIEW [${colors.fg.magenta}${(consoleUpdateChars[(4 - consoleUpdateIndex) % 4])}${colors.fg.white}]${colors.reset}`)","process.stdin.on('keypress', (str, key) => {","out.push(`font-weight:${value ? 'bold' : 'normal'}`)","const numberOfConnections = Array.from(wss.clients).filter(ws => Date.now() - ws.lastPong < 1000).length","out.push(`font-size:${value}`)","//the script injected into the output html","yellow: '\\x1b[43m',","if (key.ctrl && key.name === 'c') {","lines.push(`${colors.fg.cyan}Watching ${colors.fg.yellow}${blogPostDirs.length}${colors.fg.cyan} post${blogPostDirs.length === 1 ? '' : 's'}: ${blogPostDirs.map(path => `${colors.fg.yellow}${path.split('blogPost_')[1]}`).join(`${colors.fg.cyan}, `)}${colors.reset}`)","const mimeType = getMimeType(filePath) || 'application/octet-stream'","path = '/index.html'","if (watchAll) lines.push(`${colors.fg.cyan}Watching ${colors.fg.yellow}${process.cwd()}${colors.reset}`)","process.stdout.write(`\\x1b[0;0H \\x1b[2K`)","const lca = (str, i) => str.charAt(i).toLowerCase()","(() => {","process.exit()","process.stdout.write('\\x1b[?25h')","function heartbeat() {","lines.push(`${colors.fg.yellow}GENERATING FOLDER${colors.reset}`)","green: '\\x1b[42m',","white: '\\x1b[37m',","function setValue(key, value) {","let lastPing = 0","lines.push(`${colors.fg.red}WAITING TO REGENERATE FOLDER${colors.reset}`)","let ws","lastKeyPressTime = Date.now()","function script() {","blue: '\\x1b[44m',","if (scale == 1)","if (Date.now() - lastChangeTime < 1000)","let saveData = sessionStorage.getItem('markup') != undefined ? JSON.parse(sessionStorage.getItem('markup')) : {}","else if (key == 'italic')","black: '\\x1b[40m',","function getValue(key) {","saveData[key] = value","bg: {","if (generatingWebsite)","ws.onmessage = (event) => {","if (waitingToGenerateWebsite)","else if (key == 'bold')","const value = style[key]","crimson: '\\x1b[38m' // Scarlet","return new Response(file, {","ws = new WebSocket('ws://localhost:3001')","let out = []","},","if (message.toString() === 'pong')","sessionStorage.setItem('markup', JSON.stringify(saveData))","lines.push(`${colors.fg.green}CHANGE DETECTED${colors.reset}`)","if (Date.now() - lastPing >= 1000) {","function cssRuleFromStyles(defaultStyle, style, scale = 1) {","if (event.data === 'reload') location.reload()","function err(message) {","if (defaultStyle[key] != style[key]) {","[...spawnLogs].forEach(log => {","let filePath = join(baseDirectory, path)","let path = decodeURIComponent(url.pathname)","lines.forEach((line, index) => {","ws.lastPong = Date.now()","/**","setTimeout(heartbeat, 100)","function getBlogPostDirs(dir) {","lastPing = Date.now()","Object.keys(style).forEach(key => {","ws.send('pong')","const wss = new WebSocketServer({ port: 3001 })","// Handle favicon requests without throwing an error","//some helper functions to make more readable code","//This line causes a crash with bun, but will make the websites auto reconnect when bun stops crashing.","if (Date.now() - lastKeyPressTime < 1000)","throw new Error(`Error parsing markup: ${message}`)","out.push(`font-size:calc(${value} * ${scale})`)","ws.on('message', function (message) {","if (path.startsWith('/favicon')) {","else if (key == 'strike')","// WebSocket server setup","if (lines.length <= index)","else if (event.data === 'ping' && ws.readyState == 1) {","process.stdout.write(`\\x1b[${index + 1};0H \\x1b[2K`)","out.push(`text-decoration: ${value ? 'line-through' : 'none'}`)","heartbeat()","wss.on('connection', (ws) => {","const watchAll = argv.includes('watchAll')","if (line !== lastLines[index]) {","ws.lastPong = 0","if (key == 'color')","let blogPostDirs = []","return out.join('; ') + ';'","if (dirent.name === 'node_modules')","// Check if the path has an extension to determine if it's a directory","fs.readdirSync(dir, { withFileTypes: true }).forEach(dirent => {","if (window.markup == undefined) {","lines.push(`${colors.bright}Press CTRL+c to exit${colors.reset}`)","delete saveData[key]","}, [])","const fullPath = join(dir, dirent.name)","setValue(`id_${folder.dataset.id}`, open)","children[0].innerHTML = children[0].innerHTML.replace(open ? 'open' : 'close', open ? 'close' : 'open')","function removeKey(key) {","lines.push(...permaLines)","ignored: /node_modules|mem.json|output|\\.git/,","lastLines.forEach((line, index) => {","function splitMarkup(rawMarkup) {","inPar = part.indexOf(')') == -1 && inPar","if (part.length == 0)","if (Date.now() - log.time > 1000)","else acc = [...acc, part]","process.stdout.write(`\\x1b[${index + 1};0H \\x1b[2K${line}`)","if (part.indexOf('(') > -1)","part = part.filter(item => item != '')","if (part.slice(0, 1) == '|') return '|[' + part.slice(1)","return rawMarkup.split('<').join('&lt').split('\\r\\n').filter(line => line.slice(0, 10) != '|[COMMENT]').join('').split('|[').filter(part => part != '').map(part => {","acc[acc.length - 1] += ' ' + part","return (sessionStorage.getItem('markup') != undefined ? JSON.parse(sessionStorage.getItem('markup')) : {})[key]","inPar = part.indexOf('(') > part.indexOf(')')","if (dirent.isDirectory()) {","spawnLogs.splice(spawnLogs.indexOf(log), 1)","window.markup = {","children[1].style.display = open ? '' : 'none'","return part","if (!extname(filePath)) {","const open = children[1].style.display == 'none'","if (dirent.name.startsWith('blogPost_'))","lines.push(`[SPAWN ${log.type.toUpperCase()}] ${log.message}`)","color: '#0f0',","module.exports = {","process.stdout.write('\\x1B[2J\\x1B[0f')","chokidar.watch(process.cwd(), {","}, []).filter(part => part != '')","blogPostDirs.push(fullPath)","const server = serve({","let nextGlobalId = 0 //used for anything that needs a unique identifier","blogPostDirs = blogPostDirs.concat(getBlogPostDirs(fullPath))","italic: false,","filePath = join(filePath, 'index.html')","lastLines = lines","console.error(`File not found: ${filePath}`, error)","document.addEventListener('DOMContentLoaded', () => {","event.stopPropagation()","bold: false,","if (part.includes(']')) return [[part.slice(0, part.indexOf(']'))], part.slice(part.indexOf(']') + 1)]","async fetch(req) {","postsWaitingToGenerate.push(post)","if (!generatingWebsite) {","const blogPostDirs = getBlogPostDirs(resolve(__dirname, '..'))","consoleUpdateIndex = (consoleUpdateIndex + 1) % 4","defaultStyle: {","// Full file path","}).flat(1).reduce((acc, part) => {","[...wrapper.getElementsByClassName('folder')].forEach(folder => {","if (typeof part == 'string')","folder(event) {","size: 'medium',","return blogPostDirs","return new Response(null, { status: 204 }); // No Content response","const folder = event.target.closest('.folder')","const baseDirectory = './output'","return new Response('File not found', { status: 404 })","stripTags(rawMarkup) {","setInterval(() => {","showMarkup: false,","const open = getValue(`id_${folder.dataset.id}`)","align: 'left',","code: false,","const url = new URL(req.url)","acc[acc.length - 1] += part","permaLines.push(postsWaitingToGenerate)","if (getValue(`id_${folder.dataset.id}`) != undefined) {","tabSize: 3,","const children = folder.children","const postsWaitingToGenerate = []","headers: { 'Content-Type': mimeType }","strike: false","return splitMarkup(rawMarkup).map(item => typeof item === 'string' ? item : item.filter(subItem => subItem === 'break').map(() => '<br>').join('')).join('')","return [...acc, part]","let lastKeyPressTime = 0","let inPar = false","if (fullRegen)","generatingWebsite = true","if (acc.length > 0 && typeof acc[acc.length - 1] == 'string') {","function updateSite(post, fullRegen) {","* Translates markup into html.","if (client.readyState === 1) // 1 means open","postsWaitingToGenerate.splice(0, postsWaitingToGenerate.length, ...blogPostDirs)","if (post && !postsWaitingToGenerate.includes(post))","translate(rawMarkup, scale = 1, classes = []) {","const postsWaitingToGenerateString = JSON.stringify(postsWaitingToGenerate)","while (part.some(part => part.includes(' ')))","part = part.map(part => part.split(' ')).flat()","part = part.reduce((acc, part) => {","* @param {String} rawMarkup","if (inPar)","const markup = splitMarkup(rawMarkup)","client.send('ping')","wss.clients.forEach(client => {","let lastLines = []","* @param {Number} scale","* @returns HTML","let defaultStyle = { ...this.defaultStyle }","* @param {String[]} classes any classes to add to the wrapper","generateWebsite(postsWaitingToGenerateString).then(() => {","let style = { ...defaultStyle }","if (client.readyState === 1)","postsWaitingToGenerate.splice(0)","updateSite(undefined, true)","waitingToGenerateWebsite = false","updateSite()","} else","if (waitingToGenerateWebsite) {","generatingWebsite = false","client.send('reload')","waitingToGenerateWebsite = true","chokidar.watch(blogPostDirs, {","persistent: true,","let lastChangeTime = 0","ignoreInitial: true","}).on('all', (event, path) => {","lastChangeTime = Date.now()","if (event === 'change' || event === 'add' || event === 'unlink') {","updateSite(`${path.split('blogPost_')[0]}blogPost_${path.split('blogPost_')[1].split('\\\\')[0]}`)","html += `<div style=\"text-align:${style.align};\">`","nextLine += `|[${props.join(' ')}]`","style.color = ('#' + lca(nextProp, 1) + lca(nextProp, 3) + lca(nextProp, 5)).toLowerCase()","if (lca(nextProp, 1) == lca(nextProp, 2) && lca(nextProp, 3) == lca(nextProp, 4) && lca(nextProp, 5) == lca(nextProp, 6)) //check if the color can be shortened","else if (nextProp.length == 9) //is in format #rrggbbaa","else if (nextProp.length == 7) //is in format #rrggbb","let folds = []","if (lastAlign != undefined)","if (lca(nextProp, 1) == lca(nextProp, 2) && lca(nextProp, 3) == lca(nextProp, 4) && lca(nextProp, 5) == lca(nextProp, 6) && lca(nextProp, 7) == lca(nextProp, 8)) //check if the color can be shortened","style.color = nextProp.slice(0, 7).toLowerCase()","let needScript = false","if (nextProp.slice(7, 9).toLowerCase() == 'ff') //check if alpha is needed","let html = ''","style.color = ('#' + lca(nextProp, 1) + lca(nextProp, 3) + lca(nextProp, 5) + lca(nextProp, 7)).toLowerCase()","} else {","html += `<span style=\"${cssRules}\">${text}</span>`","} else if (ls(nextProp, 0, 3) == 'rgb') {","const digits = nextProp.toLowerCase().slice(lca(nextProp, 3) == 'a' ? 5 : 4).split(')')[0].split(',').map(digit => Math.max(0, Math.min(255, Math.round(Number(digit.trim())))).toString(16).padStart(2, '0')).filter((digit, index) => digit != 'ff' || index != 3)","let lastAlign","if (digits.every(digit => digit.charAt(0) == digit.charAt(1)))","else err(`invalid hex code`)","let nextLine = ''","style.color = '#' + digits.reduce((acc, digit) => acc + digit.charAt(0), '')","nextLine = ''","lastAlign = style.align","style.color = '#' + digits.reduce((acc, digit) => acc + digit, '')","style.color = defaultStyle.color","for (let index = 0; index < props.length; index++) {","err('invalid rgb')","else if (lowerProp == 'italic') {","markup.forEach(props => {","if (style.showMarkup)","const prop = props[index]","if (['on', 'true'].includes(nextProp.toLowerCase()))","const nextProp = props[index + 1] ?? emptyString","if (ls(nextProp, 0, 1) == '#') { //must be hex","if (typeof props == 'string') {","style.italic = true","style.italic = false","if (lowerProp == 'color') {","else if (lowerProp == 'bold') {","const cssRules = cssRuleFromStyles(defaultStyle, style, scale)","style.italic = !style.italic","if (style.align != lastAlign) {","let text = nextLine + props","style.color = nextProp.toLowerCase()","if (style.code) text = `<code>${text}</code>`","if (ls(nextProp, 4, 5) == 'f') //check if alpha is needed","if (cssRules.length == 1) //take the ; into account","else if (['off', 'false'].includes(nextProp.toLowerCase()))","style.bold = true","const count = Math.round(Number(nextProp))","style.bold = false","style.bold = !style.bold","html += text","if (nextProp.length == 4) //is in format #rgb","const lowerProp = prop.toLowerCase()","else if (lowerProp == 'space') {","style.color = ls(str, 0, 4)","nextLine += new Array(count).fill('&nbsp;').join('')","else if (nextProp.length == 5) //is in format #rgba","if (count > 0 && !isNaN(count))","nextLine += '&nbsp;'","else if (lowerProp == 'tab') {","Object.keys(style).forEach(key => this.defaultStyle[key] = style[key])","const count = Math.round(Number(nextProp) * this.tabSize)","else if (lowerProp == 'break') {","if (['left', 'center', 'right'].includes(nextProp.toLowerCase()))","else if (lowerProp == 'align') {","else if (lowerProp == 'default') {","style.size = nextProp.toLowerCase()","if (nextProp.toLowerCase() == 'global')","else if (Number(nextProp) > 0)","style.align = nextProp.toLowerCase()","Object.keys(style).forEach(key => defaultStyle[key] = style[key])","if (Number(nextProp) > 0)","nextLine += new Array(this.tabSize).fill('&nbsp;').join('')","nextLine += `<div style=\"display:block; height:${Number(nextProp)}em; line-height:${Number(nextProp)}em;\"></div>`","needScript = true","else if (lowerProp == 'fold') {","style.align = defaultStyle.align","if (['open', 'close'].includes(nextProp.toLowerCase())) {","let foldId = folds.length + 1","if (Object.keys(defaultStyle).includes(nextProp.toLowerCase()))","nextLine += '<br>'","style[nextProp.toLowerCase()] = defaultStyle[nextProp.toLowerCase()]","else if (lowerProp == 'reset') {","if (['xx-small', 'x-small', 'smaller', 'small', 'medium', 'large', 'larger', 'x-large', 'xx-large'].includes(nextProp.toLowerCase()))","Object.keys(defaultStyle).forEach(key => style[key] = defaultStyle[key])","style.size = `${Number(nextProp)}px`","else if (lowerProp == 'size') {","style.size = defaultStyle.size","else if (lowerProp == 'code') {","style.code = false","style.code = !style.code","style.code = true","style: { ...style },","lastAlign = undefined //to make the next line trigger a new block","foldId++","html += `fold_${foldId}`","open: nextProp.toLowerCase() == 'open'","id: foldId,","while (rawMarkup.includes(`fold_${foldId}`))","folds.push({","html = html.slice(0, html.indexOf(`fold_${fold.id}`))","const content = html.split(`fold_${fold.id}`)[1]","if (cssRules.length != 1)","let text = `|[click to ${fold.open ? 'close' : 'open'}]`","text = `<span style=\"${cssRules}\">${text}</span>`","const cssRules = cssRuleFromStyles(defaultStyle, fold.style, scale)","const fold = folds.pop()","<div class=\"folder\" data-id=${nextGlobalId++}>","${text}","<div style=\"cursor: pointer; text-align:${fold.style.align};\" onclick=\"window.markup.folder(event)\">","<div ${fold.open ? '' : 'style=\"display:none;\"'}>","${content}","html += `<br><img src=\"./${nextProp}\" alt=\"${nextProp}\">`","html += `<br><img src=\"./${nextProp}\" alt=\"${nextProp}\" style=\"width:${Number(props[index + 2] * 100)}%\">`","if (props.length > index + 1 && Number(props[index + 2]) > 0 && Number(props[index + 2] != 1))","else if (lowerProp == 'image') {","else if (lowerProp == 'video') {","style.showMarkup = !style.showMarkup","else if (lowerProp == 'showmarkup') {","style.showMarkup = true","html += `<br><video src=\"./${nextProp}\" controls alt=\"${nextProp}\" style=\"width:${Number(props[index + 2] * 100)}%\"></video>`","style.showMarkup = false","html += `<br><video src=\"./${nextProp}\" controls alt=\"${nextProp}\"></video>`","else if (lowerProp == 'strike') {","'margin:0',","if (currentBackground.stop != undefined) await currentBackground.stop(canvas, ctx)","style.strike = !style.strike","style.strike = false","let lastUpdate = 0","if (index >= arr.length - 3) return acc","return acc + part","let wrapperStyle = cssRuleFromStyles({}, defaultStyle, scale)","* * [number] -> (viewport width + viewport height) / 2 * [number], [number] is in the range [number] >= 0.02","const maxUps = 60","const scriptString = script.toString().slice(12).split('\\r\\n').reduce((acc, part) => acc + '; ' + part.split('//')[0], '').split('').reduce((acc, part, index, arr) => {","function mixPaths() {","wrapperStyle += [","style.strike = true","lastUpdate = Date.now()","the text is evaluated from beginning to end, any text being rendered using the current style.","if (part == ' ' && acc.charAt(acc.length - 1) == ' ')","].join('; ') + ';'","}, '').split('{; ').join('{').split('; }').join('}').split('; ').reduce((acc, part) => {","else if (lowerProp == 'script' && nextProp != undefined) {","if (style.code) nextLine = `<code>${nextLine}</code>`","html += `<span style=\"${cssRules}\">${nextLine}</span>`","* * !-> sets size to the default size","let loadedBackgrounds = []","<div class=\"${['markup', ...classes].join(' ')}\" style=\"${wrapperStyle}\">${needScript ? `\\r\\n<script>${scriptString}</script>` : ''}","'padding:0',","* * !-> toggles strikethrough","if (nextLine != '') {","This markup uses tags in |[] clumps mixed with text to style.","canvas.classList.add('blur')","* * !-> resets the full style to the default style","let backgroundStarted = 0","do backgroundPaths.sort(() => Math.random() * 2 - 1)","tags are evaluated by order they appear, in a |[].","nextLine += `<script src=\"${nextProp}\"></script>`","blurred = true","'width:100%',","mixPaths()","let backgroundIndex = -1","* strike: -> sets whether text will have strikethrough","'word-wrap:break-word',","let currentBackground = {}","const backgroundPaths = [\"./posts/Making a custom blog/background.js\",\"./backgrounds/fireworks.js\",\"./backgrounds/hiddenSnakes.js\",\"./backgrounds/pong.js\",\"./backgrounds/rain.js\",\"./backgrounds/randomSymbols.js\",\"./backgrounds/uniqueCode.js\"];","return `","* script: -> embeds a piece of live code","to change the style, add |[] with tags and values inside, this sets the style for everything after, until changes.","html += nextLine","document.addEventListener('DOMContentLoaded', async () => {","'height:100%'","}, '')","const blurTime = 1000 * 1","return acc + part + '; '","const ctx = canvas.getContext('2d')","${html}","if (acc.slice(acc.length - 2) == '; ' && part == '') return acc","* * [path] -> where to find the script","the tags are below, items in the first column are the keywords, items in the second column are values to be used.","async function update() {","* * !-> sets color to the default color","* * on | true","* * [property] -> sets [property] to the default [property]","for example: to create 'before green it was boring' with 'green' being green you could use the following markup:","a !-> in the second column indicates the action that happens if non of the other options are there","while (backgroundPaths.length > 1 && backgroundPaths[0] == lastPath)","values in the second column with a ?[] signify that the value is optional","* color: -> sets the text color to the most efficient hex value that represents prop 1","* italic: -> sets whether text will be italic","if (cycle && minTimePerBackground - (Date.now() - backgroundStarted) <= blurTime && !blurred) {","values in the second column with a [] signify that you put a value there (but don't include the [])","* * off | false","* image: -> embeds an image in the next line","const lastPath = backgroundPaths[backgroundPaths.length - 1]","* * !-> toggles bold text","tags are found by scanning for |[ and reading until ], and are separated by spaces.","const minTimePerBackground = 1000 * 30","* * open | close -> starts a fold that is open | closed at start","* * left | center | right","if (cycle && Date.now() - backgroundStarted >= minTimePerBackground) {","to render a |[ you can put |[|, this will not read tags like normal.","let blurred = false","if (backgroundIndex == 0) mixPaths()","* * !-> toggles italics","you can put ] anywhere, and unless it is closing a tag area it will render.","backgroundIndex = (backgroundIndex + 1) % backgroundPaths.length","* * #[rrggbb]","* bold: -> sets whether text will be bold","* * #[rgba]","* space: -> adds [number] spaces using '&nbsp;' after","* * #[rrggbbaa]","* default: -> changes the default used for many tags, but does not change the default retrospectively","if (!loadedBackgrounds.includes(backgroundPaths[backgroundIndex])) await new Promise(r => {","* * !-> sets the default style to the current style","* fold: -> creates foldable content, with all content until the fold close being inside (fold triggers a break)","* * !-> just adds <br>","before |[color #0f0]green|[color] it was boring","* * xx-small | x-small | smaller | small | medium | large | larger | x-large | xx-large -> uses the default sizes","* * !-> closes a fold","* * global -> sets the global default, this is the default used to generate the local (the default always used) default, also sets the local default","const script = document.createElement('script')","script.type = 'module'","* * #[rgb] -> each range is in the value 0-f in base 16","* code: -> sets whether text will be code using <code></code>","* * rgba([r],[g],[b],[a])","let cycle = true","* size: -> sets the text size","script.onload = r","* * rgba([r],[g],[b])","* tabs: -> adds [number] spaces * tabSize (defaults to 3) after","* * !-> defaults to 1","document.head.appendChild(script)","script.src = backgroundPaths[backgroundIndex]","* * [number]","* showMarkup: -> sets whether the markup tags will be hidden (defaults to false)","* * rgb([r],[g],[b],[a])","* * rgb([r],[g],[b]) -> each value is in the range 0-255","* * !-> sets align to the default align","* * [number] -> creates a break and then inserts a blank line of [number] lines in height, then second break","* align: -> sets which direction text should align (changing align triggers a break)","* break: -> used to make new lines","* * !-> toggles code text","* * [path] [size] -> size is relative to the div, so a size of 1 would fill the space, or a size of .5 could fit two images side by side","* reset:","the first tag clump sets the color to green (#0f0), the second clump resets color to the default","* * [path] !-> defaults to 1","* COMMENT: -> \"comments\" out the line, must be alone in the tag bracket, and the first thing in the line: |[COMMENT]","* * !-> toggles","* video: -> embeds a video in the next line","* * [path] [size] -> size is relative to the div, so a size of 1 would fill the space, or a size of .5 could fit two videos side by side"],"orderedLines":{"blankPost.html":["<!DOCTYPE html>","<html lang=\"en\">","<title><!-- title name link --></title>","","<head>","    <meta charset=\"UTF-8\">","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">","    <link rel=\"stylesheet\" href=\"../../postStyles.css\">","    <script src=\"./backgroundManager.js\"></script>","","    <!-- Primary Meta Tags -->","    <meta name=\"title\" content=\"meta title link\" />","    <meta name=\"description\" content=\"meta description link\" />","","    <!-- Open Graph / Facebook -->","    <meta property=\"og:type\" content=\"website\" />","    <meta property=\"og:url\" content=\"meta url link\" />","    <meta property=\"og:title\" content=\"meta title link\" />","    <meta property=\"og:description\" content=\"meta description link\" />","    <meta property=\"og:image\" content=\"meta image link\" />","","    <!-- Twitter -->","    <meta property=\"twitter:card\" content=\"summary_large_image\" />","    <meta property=\"twitter:url\" content=\"meta url link\" />","    <meta property=\"twitter:title\" content=\"meta title link\" />","    <meta property=\"twitter:description\" content=\"meta description link\" />","    <meta property=\"twitter:image\" content=\"meta image link\" />","</head>","","<body>","    <canvas id=\"backgroundCanvas\"></canvas>","    <div id=\"overlay\">","        <div class=\"scrollOffset\"></div>","        <div id=\"content\">","            <div id=\"info\">","                <!-- title markup link -->","                <!-- will autofill on website load -->","                <script>","                    // stat update script link","                </script>","                <!-- </div> -->","                <div id=\"return_link\">","                    <a href=\"../../\">Home</a>","                </div>","            </div>","            <div id=\"post_background\">","                <div id=\"post\">","                    <!-- post link -->","                </div>","            </div>","            <div id=\"returnToTopButton\">","                <span onclick=\"window.scroll({top:0,left:0,behavior:'smooth'})\">Return to top</span>","            </div>","        </div>","        <div class=\"scrollOffset\"></div>","    </div>","</body>","","</html>"],"blankSite.html":["<!DOCTYPE html>","<html lang=\"en\">","<title>Jack's project hub</title>","","<head>","    <meta charset=\"UTF-8\">","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">","    <link rel=\"stylesheet\" href=\"./siteStyles.css\">","    <script src=\"./backgroundManager.js\"></script>","    <script src=\"./updateStats.js\"></script>","","    <!-- Primary Meta Tags -->","    <meta name=\"title\" content=\"Jack's project hub\" />","    <meta name=\"description\"","        content=\"THE place to read about all of my projects, with exclusive content not seen elsewhere!\" />","","    <!-- Open Graph / Facebook -->","    <meta property=\"og:type\" content=\"website\" />","    <meta property=\"og:url\" content=\"https://jacks-project-hub.vercel.app/\" />","    <meta property=\"og:title\" content=\"Jack's project hub\" />","    <meta property=\"og:description\"","        content=\"THE place to read about all of my projects, with exclusive content not seen elsewhere!\" />","    <meta property=\"og:image\" content=\"https://jacks-project-hub.vercel.app/preview.png\" />","","    <!-- Twitter -->","    <meta property=\"twitter:card\" content=\"summary_large_image\" />","    <meta property=\"twitter:url\" content=\"https://jacks-project-hub.vercel.app/\" />","    <meta property=\"twitter:title\" content=\"Jack's project hub\" />","    <meta property=\"twitter:description\"","        content=\"THE place to read about all of my projects, with exclusive content not seen elsewhere!\" />","    <meta property=\"twitter:image\" content=\"https://jacks-project-hub.vercel.app/preview.png\" />","</head>","","<body>","    <canvas id=\"backgroundCanvas\"></canvas>","    <div id=\"overlay\">","        <div class=\"scrollOffset\"></div>","        <div id=\"content\">","            <div id=\"info\">","                <div id=\"titleText\">","                    Jack's project hub","                </div>","                <!-- will autofill on website load -->","            </div>","            <div id=\"posts\">","                <!-- posts link -->","                <script> //Controls the grid for the posts","                    {","                        const wrapper = document.getElementById('posts')","                        const postPadding = 10","                        const borderSize = 25","                        const updateGrid = () => {","                            const posts = Array.from(document.getElementsByClassName('post'))","                            const maxWidth = wrapper.getBoundingClientRect().width - borderSize * 2","                            Array.from(document.getElementsByClassName('post_row')).forEach(row => row.classList.add('post_row_old'))","                            let lastRowElement = document.createElement('div')","                            lastRowElement.classList.add('post_row')","                            let lastRowWidth = 0","                            for (const post of posts) {","                                const width = post.getBoundingClientRect().width + postPadding * 2","                                if (lastRowWidth === 0 || lastRowWidth + width < maxWidth) {","                                    lastRowElement.appendChild(post)","                                    lastRowWidth += width","                                }","                                else {","                                    wrapper.appendChild(lastRowElement)","                                    lastRowElement = document.createElement('div')","                                    lastRowElement.classList.add('post_row')","                                    lastRowElement.appendChild(post)","                                    lastRowWidth = width","                                }","                            }","                            wrapper.appendChild(lastRowElement)","                            Array.from(document.getElementsByClassName('post_row_old')).forEach(row => row.remove())","                        }","                        document.addEventListener('DOMContentLoaded', updateGrid)","                        window.addEventListener('resize', updateGrid)","                    }","                </script>","            </div>","            <div id=\"returnToTopButton\">","                <span onclick=\"window.scroll({top:0,left:0,behavior:'smooth'})\">Return to top</span>","            </div>","        </div>","        <div class=\"scrollOffset\"></div>","    </div>","</body>","","</html>"],"commands.txt":["bun [--watch] livePreview.js [logSpawn] [watchAll] [background]"],"crash.js":["(new ((await import('ws')).WebSocket)('ws://localhost:8080')).on('error', (error)=>console.error(error))"],"deploy.js":["const fs = require('fs')","const path = require('path')","const { exec } = require('child_process')","const { spawn } = require('bun')","    ;","(async () => {","    function execAsync(command, options) {","        return new Promise((resolve, reject) => {","            exec(command, options, (error, stdout, stderr) => {","                if (error)","                    reject(error)","                else","                    resolve(stdout || stderr)","            })","        })","    }","","    process.chdir(__dirname)","","    console.log('Generating website.')","    await spawn({","        cmd: ['bun', 'generateWebsite.js']","    }).exited","    console.log('Website generated.')","","    let mem = JSON.parse(fs.readFileSync('./mem.json', 'utf8'))","","    const fileHashes = mem.fileHashes","    const lastFileHashes = mem.lastFileHashes ?? {}","","    let addedFiles = []","    let changedFiles = []","    let removedFiles = []","","    Object.keys(fileHashes).forEach(key => {","        if (lastFileHashes[key] == undefined)","            addedFiles.push(key)","        else if (lastFileHashes[key] != fileHashes[key])","            changedFiles.push(key)","    })","    Object.keys(lastFileHashes).forEach(key => {","        if (fileHashes[key] == undefined)","            removedFiles.push(key)","    })","","    const totalChanges = addedFiles.length + changedFiles.length + removedFiles.length","    if (totalChanges == 0) {","        console.log('No changes')","        return","    }","","    let changes = []","    if (addedFiles.length > 0) changes.push(`added ${addedFiles.length} file${addedFiles.length == 1 ? '' : 's'}: ${addedFiles.join(', ')}`)","    if (changedFiles.length > 0) changes.push(`changed ${changedFiles.length} file${changedFiles.length == 1 ? '' : 's'}: ${changedFiles.join(', ')}`)","    if (removedFiles.length > 0) changes.push(`removed ${removedFiles.length} file${removedFiles.length == 1 ? '' : 's'}: ${removedFiles.join(', ')}`)","","    let commitMessage","","    if (changes.length == 1) {","        commitMessage = changes[0]","        commitMessage = commitMessage.charAt(0).toUpperCase() + commitMessage.slice(1)","    } else commitMessage = `${totalChanges} changes: ${changes.join(', ')}`","","    process.chdir('.\\\\output')","","    try {","        // Check if .git directory exists, if not, initialize a new repository","        try {","            fs.accessSync(path.join('./', '.git'))","        } catch {","            await execAsync(`git init`, { cwd: './' })","            await execAsync(`git remote add origin https://github.com/Jacks-underscore-username/jacks_project_hub.git`, { cwd: './' })","        }","","        // Ensure the main branch exists","        try {","            await execAsync(`git checkout -b main`, { cwd: './' })","        } catch {","            await execAsync(`git checkout main`, { cwd: './' })","        }","","        // Add all changes to staging","        await execAsync(`git add .`, { cwd: './' })","","        // Commit the changes","        await execAsync(`git commit -m \"${commitMessage}\"`, { cwd: './' })","","        // Force push the changes to the remote repository","        await execAsync('git push -f origin main', { cwd: './' })","","        console.log(commitMessage)","","        mem.lastFileHashes = fileHashes","        fs.writeFileSync('../mem.json', JSON.stringify(mem), 'utf8')","    } catch (error) {","        console.error('Error pushing changes to GitHub:', error)","    }","})()"],"generateWebsite.js":["const startTime = Date.now()","","const logDelay = (...args) => {","    if (logDelay.logs === undefined) logDelay.logs = []","    if (logDelay.lastLog === undefined) logDelay.lastLog = logDelay.start","    logDelay.logs.push([Date.now() - logDelay.start, Date.now() - logDelay.lastLog, ...args])","    logDelay.lastLog = Date.now()","}","logDelay.log = () => {","    logDelay.logs.forEach(log => console.log(...log))","}","logDelay.start = Date.now()","","logDelay('Program start')","","const fs = require('fs')","const path = require('path')","const crypto = require('crypto')","const markup = require('./markup.js')","","logDelay('Imported modules')","","const livePreviewInjection = `","<script>","${fs.readFileSync('./livePreviewInjection.js', 'utf-8')}","</script>","`","","// function wrapFunction(func, prefunc) {","//     return (...args) => {","//         prefunc(...args)","//         func(...args)","//     }","// }","","// fs.writeFileSync = wrapFunction(fs.writeFileSync, (to) => console.log('write', to))","// fs.copyFileSync = wrapFunction(fs.copyFileSync, (...args) => console.log('copy', ...args))","","const ignoredPaths = (() => {","    let dontScan = []","    let dontCount = []","    let dontPath = []","    let paths = fs.readFileSync('./ignoredPaths.txt', 'utf8').split('\\r\\n')","    paths.forEach(path => {","        if (path.slice(0, 2) == '//') return","        const prefix = path.slice(0, 1)","        const line = path.slice(2)","        if (prefix == '0') {","            dontScan.push(line)","            dontCount.push(line)","            dontPath.push(line)","        } else if (prefix == '1') {","            dontCount.push(line)","        } else if (prefix == '2') {","            dontScan.push(line)","        } else if (prefix == '3') {","            dontScan.push(line)","            dontCount.push(line)","        }","    })","    return { scan: dontScan, count: dontCount, path: dontPath }","})()","","","function smartCopyFile(from, to) {","    const exists = fs.existsSync(to)","    if (!exists || fs.statSync(from).mtime.getTime() !== fs.statSync(to).mtime.getTime()) {","        if (!exists)","            fs.mkdirSync(path.dirname(to), { recursive: true, force: true })","        fs.copyFileSync(from, to)","    }","}","","function smartMakeDir(path) {","    if (!fs.existsSync(path))","        fs.mkdirSync(path)","}","","function smartCopyDir(from, to) {","    for (const file of fs.readdirSync(from))","        if (fs.statSync(`${from}/${file}`).isDirectory())","            smartCopyDir(`${from}/${file}`, `${to}/${file}`)","        else","            smartCopyFile(`${from}/${file}`, `${to}/${file}`)","}","","function smartRemoveExtra(path, allowed) {","    for (const file of fs.readdirSync(path))","        if (!allowed.includes(file)) {","            console.log(path, allowed, file, `${path}/${file}`)","            fs.rmSync(`${path}/${file}`, { recursive: true, force: true })","        }","}","","function setupFolder() {","    process.chdir(__dirname)","    if (!fs.existsSync('./output')) fs.mkdirSync('./output')","    smartRemoveExtra('./output', ['.git', 'backgrounds', 'posts', 'backgroundManager.js', 'firaCode.ttf', 'index.html', 'mem.json', 'postStyles.css', 'siteStyles.css', 'updateStats.js', 'preview.png'])","    smartCopyFile('./blankSite.html', './output/index.html')","    smartCopyFile('./siteStyles.css', './output/siteStyles.css')","    smartCopyFile('./postStyles.css', './output/postStyles.css')","    smartCopyFile('./updateHomeStats.js', './output/updateStats.js')","    smartCopyFile('./firaCode.ttf', './output/firaCode.ttf')","    smartMakeDir('./output/backgrounds')","    smartMakeDir('./output/posts')","    smartCopyFile('./README.md', './output/README.md')","}","","function findPostPaths() {","    const postPaths = []","    fs.readdirSync('../').forEach(projectDiv => {","        if (fs.lstatSync(`../${projectDiv}`).isDirectory())","            fs.readdirSync(`../${projectDiv}`).forEach(projectItem => {","                if (fs.lstatSync(`../${projectDiv}/${projectItem}`).isDirectory() && projectItem.split('blogPost_')[0] == '')","                    postPaths.push(`../${projectDiv}/${projectItem}`)","            })","    })","    return postPaths.sort((a, b) => getMem().postsCreated[b.split('blogPost_')[1]] - getMem().postsCreated[a.split('blogPost_')[1]])","}","","function cleanPostsFolder(postPaths) {","    postPaths = postPaths.map(post => post.split('blogPost_')[1])","    for (const file of fs.readdirSync('./output/posts'))","        if (!postPaths.includes(file))","            fs.rmSync(`./output/posts/${file}`, { recursive: true, force: true })","}","","function setupLiveBackgrounds(postPaths) {","    const backgroundPaths = []","","    postPaths.forEach(async postPath => {","        if (fs.existsSync(`${postPath}/background.js`)) {","            fs.readFileSync(`${postPath}/background.js`, 'utf8').split('\\r\\n').forEach(line => {","                if (line.slice(0, 26) == '//includeInHomeBackgrounds')","                    backgroundPaths.push(`./posts/${postPath.split('blogPost_')[1]}/background.js`)","            })","        }","    })","","    backgroundPaths.push(...fs.readdirSync('./mainPageBackgrounds').map(path => `./backgrounds/${path}`))","","    smartRemoveExtra('./output/backgrounds', backgroundPaths.map(path => path.slice(14)))","","    smartCopyDir('./mainPageBackgrounds', './output/backgrounds')","    fs.writeFileSync('./output/backgroundManager.js', `const backgroundPaths = ${JSON.stringify(backgroundPaths)};\\r\\n${fs.readFileSync('./siteBackgroundManager.js', 'utf8')}`, 'utf8')","}","","function hashFileContents(filePath) {","    const fileBuffer = fs.readFileSync(filePath)","    const hashSum = crypto.createHash('md5')","    hashSum.update(fileBuffer)","    return hashSum.digest('hex')","}","","function getFolderHash(startPath) {","    let combinedHash = crypto.createHash('md5')","","    function recurseDir(currentPath) {","        const items = fs.readdirSync(currentPath)","        items.forEach(item => {","            const fullPath = path.join(currentPath, item)","            const stat = fs.statSync(fullPath)","            if (stat.isDirectory() && !ignoredPaths.scan.includes(fullPath)) {","                recurseDir(fullPath)","            } else if (stat.isFile() && !ignoredPaths.scan.includes(fullPath) && item !== 'preview.png') {","                const fileHash = hashFileContents(fullPath)","                combinedHash.update(fileHash)","            }","        })","    }","","    recurseDir(startPath)","    return combinedHash.digest('hex')","}","","function countLinesOfCode(directory = './') {","    const files = fs.readdirSync(directory)","","    let total = 0","","    files.forEach(file => {","        const fullPath = path.join(directory, file)","        const stats = fs.statSync(fullPath)","","        if (stats.isDirectory() && !ignoredPaths.count.includes(fullPath)) {","            total += countLinesOfCode(fullPath)","        } else if (stats.isFile() && !ignoredPaths.count.includes(fullPath))","            total += fs.readFileSync(fullPath, 'utf8').split('\\r\\n').length","    })","    return total","}","","function getUniqueLinesOfCode() {","    let codeLines = []","","    function readFile(path) {","        let fileContent = fs.readFileSync(path, 'utf8').split('\\r\\n')","","        fileContent.forEach(item => {","            while (item.split('  ').length > 1)","                item = item.split('  ').join(' ')","            item = item.trim()","            if (!codeLines.includes(item))","                codeLines.push(item)","        })","    }","","    function scanDirectory(directory) {","        const files = fs.readdirSync(directory)","","        files.forEach(file => {","            const fullPath = path.join(directory, file)","            const stats = fs.statSync(fullPath)","","            if (stats.isDirectory() && !ignoredPaths.scan.includes(fullPath)) {","                scanDirectory(fullPath)","            } else if (stats.isFile() && !ignoredPaths.scan.includes(fullPath))","                readFile(fullPath)","        })","    }","","    scanDirectory('./')","","    codeLines = codeLines.sort(() => Math.random() * 2 - 1)","","    return codeLines","}","","function getOrderedLinesOfCode() {","    let codeLines = {}","","    function readFile(path) {","        let fileContent = fs.readFileSync(path, 'utf8').split('\\r\\n')","","        codeLines[path] = []","","        fileContent.forEach(item => {","            codeLines[path].push(item)","        })","    }","","    function scanDirectory(directory) {","        const files = fs.readdirSync(directory)","","        files.forEach(file => {","            const fullPath = path.join(directory, file)","            const stats = fs.statSync(fullPath)","","            if (stats.isDirectory() && !ignoredPaths.scan.includes(fullPath)) {","                scanDirectory(fullPath)","            } else if (stats.isFile() && !ignoredPaths.scan.includes(fullPath))","                readFile(fullPath)","        })","    }","","    scanDirectory('./')","","    return codeLines","}","","function getMem() {","    return JSON.parse(fs.readFileSync('./mem.json', 'utf8'))","}","","function saveMem(mem) {","    fs.writeFileSync('./mem.json', JSON.stringify(mem), 'utf8')","}","","function generatePost(postPath, injectLivePreview) {","    const name = postPath.split('blogPost_')[1]","","    smartMakeDir(`./output/posts/${name}`)","","    fs.readdirSync(postPath).forEach(file => {","        if (!['script.txt', 'title.txt', 'preview.txt'].includes(file)) {","            if (fs.statSync(`${postPath}/${file}`).isDirectory())","                smartCopyDir(`${postPath}/${file}`, `./output/posts/${name}/${file}`, { recursive: true })","            else","                smartCopyFile(`${postPath}/${file}`, `./output/posts/${name}/${file}`)","        }","    })","","    smartCopyFile('./postBackgroundManager.js', `./output/posts/${name}/backgroundManager.js`)","","    let html = fs.readFileSync('./blankPost.html', 'utf8')","","    html = html.split('meta title link').join(`${name} - Jack's project hub`)","    html = html.split('meta url link').join(`https://jacks-project-hub.vercel.app/posts/${name}/`)","    const text = markup.stripTags(fs.readFileSync(`${postPath}/preview.txt`, 'utf-8'))","    html = html.split('meta description link').join(text.length < 100 ? text : text.slice(0, 97) + '...')","    html = html.split('meta image link').join(`https://jacks-project-hub.vercel.app/posts/${name}/preview.png`)","    html = html.replace('<!-- title name link -->', name)","    if (process.argv.includes('hidePostContent')) {","        html = html.replace('<div id=\"overlay\">','<div id=\"overlay\" style=\"display:none\">')","    }","    else {","        let title = name","        if (fs.existsSync(`${postPath}/title.txt`)) title = markup.translate(fs.readFileSync(`${postPath}/title.txt`, 'utf8'))","            html = html.replace('<!-- title markup link -->', title)","        html = html.replace('// stat update script link', `const postName = '${name}'\\r\\n${fs.readFileSync('./updatePostStats.js', 'utf8')}`.split('\\r\\n').join('\\r\\n                    '))","        html = html.replace('<!-- post link -->', markup.translate(fs.readFileSync(`${postPath}/script.txt`, 'utf8')))","    }","","","    if (injectLivePreview) html += livePreviewInjection","","    fs.writeFileSync(`./output/posts/${name}/index.html`, html, 'utf8')","","    function scan(to, from) {","        for (const file of fs.readdirSync(to))","            if (!fs.existsSync(`${from}/${file}`) && !['backgroundManager.js', 'index.html', 'preview.png'].includes(file))","                fs.rmSync(`${to}/${file}`, { recursive: true, force: true })","            else if (fs.statSync(`${to}/${file}`).isDirectory())","                scan(`${to}/${file}`, `${from}/${file}`)","    }","    scan(`./output/posts/${name}`, postPath)","","    for (const file of ['script.txt', 'title.txt', 'preview.txt'])","        if (fs.existsSync(`./output/posts/${name}/${file}`))","            fs.rmSync(`./output/posts/${name}/${file}`, { recursive: true, force: true })","}","","function generatePostCard(postPath) {","    const name = postPath.split('blogPost_')[1]","    let title = name","    if (fs.existsSync(`${postPath}/title.txt`)) title = markup.translate(fs.readFileSync(`${postPath}/title.txt`, 'utf8'), 1 / 4)","    let html = `<div class=\"post\" onclick=\"window.location.href='./posts/${name}/'\">`","    html += `","    <div class=\"title\">","        ${title}","    </div>","    `","","    if (fs.existsSync(`${postPath}/preview.txt`)) html += markup.translate(fs.readFileSync(`${postPath}/preview.txt`, 'utf8'), 1, ['preview'])","","    html += '</div>'","","    return html","}","","const changedPosts = []","let outputHashChanged = false","function saveAndCopyStats(updateLines) {","    const newHash = getFolderHash('./output')","    const mem = getMem()","    if (mem.outputHash != newHash) {","        mem.lastUpdate = Date.now()","        updated = true","        outputHashChanged = true","    }","    mem.outputHash = newHash","    if (updateLines) {","        mem.numberOfLines = countLinesOfCode()","        mem.uniqueLines = getUniqueLinesOfCode()","        mem.orderedLines = getOrderedLinesOfCode()","    }","","    function getOutputPaths(currentPath = './output', out = []) {","        const items = fs.readdirSync(currentPath)","        items.forEach(item => {","            const fullPath = path.join(currentPath, item)","            const stat = fs.statSync(fullPath)","            if (stat.isDirectory() && !ignoredPaths.path.includes(fullPath)) {","                getOutputPaths(fullPath, out)","            } else if (stat.isFile() && !ignoredPaths.path.includes(fullPath))","                out.push(fullPath)","        })","        return out","    }","    mem.fileHashes = getOutputPaths().map(path => path).reduce((acc, path) => ({ ...acc, [path.replace('output', '.')]: hashFileContents(path) }), {})","    const postHashes = fs.readdirSync('./output/posts').reduce((acc, post) => ({ ...acc, [post]: getFolderHash(`./output/posts/${post}`) }), {})","    const oldPostHashes = mem.postHashes ?? {}","    const postsUpdated = mem.postsUpdated ?? {}","    fs.readdirSync('./output/posts').forEach(post => {","        if (postHashes[post] != oldPostHashes[post]) {","            postsUpdated[post] = Date.now()","            changedPosts.push(post)","        }","    })","    mem.postHashes = postHashes","    mem.postsUpdated = postsUpdated","    const postsCreated = mem.postsCreated ?? {}","    fs.readdirSync('./output/posts').forEach(post => {","        if (postsCreated[post] == undefined)","            postsCreated[post] = Date.now()","    })","    mem.postsCreated = postsCreated","    let siteMem = {}","    for (let key of ['lastScan', 'lastUpdate', 'outputHash', 'numberOfLines', 'uniqueLines', 'orderedLines', 'postsUpdated', 'postsCreated', 'postHashes']) siteMem[key] = mem[key]","    fs.writeFileSync('./output/mem.json', JSON.stringify(siteMem), 'utf8')","    saveMem(mem)","}","","function generateMainPage(postPaths, injectLivePreview) {","    let html = fs.readFileSync('./output/index.html', 'utf8')","","    html = html.replace('<!-- posts link -->', postPaths.map(postPath => generatePostCard(postPath)).join('\\n '))","","    if (injectLivePreview) html += livePreviewInjection","","    fs.writeFileSync('./output/index.html', html, 'utf8')","}","","async function generateLinkPreviews() {","    const postsMissingPreview = fs.readdirSync('./output/posts').filter(post => !fs.existsSync(`./output/posts/${post}/preview.png`))","    const missingMainPreview = !fs.existsSync('./output/preview.png')","    if (outputHashChanged || missingMainPreview || changedPosts.length || postsMissingPreview.length)","        return new Promise(async resolve => {","            const puppeteer = require('puppeteer')","            const http = require('http')","            const express = require('express')","","            console.log('Taking preview screenshots.')","            const app = express()","            app.use(express.static('./output'))","            const server = await new Promise((resolve, reject) => {","                const server = app.listen(8080, (error) => {","                    if (error) {","                        reject(error)","                        return","                    }","                    const interval = setInterval(() => {","                        http.get('http://localhost:8080', (res) => {","                            if (res.statusCode === 200) {","                                clearInterval(interval)","                                resolve(server)","                            }","                        }).on('error', () => { })","                    }, 100)","                })","                server.on('error', (err) => {","                    clearInterval(interval)","                    reject(err)","                })","            })","            const browser = await puppeteer.launch()","            const page = await browser.newPage()","            await page.setViewport(await page.evaluate(() => ({","                width: 2000,","                height: 1000","            })))","","            if (outputHashChanged || missingMainPreview) {","                console.log('Screenshotting main page.')","                await page.goto(`http://localhost:8080/index.html`);","                (await page.target().createCDPSession()).send('Network.clearBrowserCache')","                await page.reload({ waitUntil: ['networkidle0'], bypassCache: true })","                await page.waitForSelector('#backgroundCanvas')","                await page.evaluate(() => {","                    const canvas = document.getElementById('backgroundCanvas')","                    canvas.style.transition = 'all 0s'","                    canvas.style.filter = 'blur(0px)'","                })","                await page.screenshot({ path: './output/preview.png' })","            }","            for (const post of [...changedPosts, ...postsMissingPreview].sort().reduce((acc, item) => {","                if (acc[acc.length - 1] !== item) acc.push(item)","                return acc","            }, [])) {","                console.log(`Screenshotting post: ${post}`)","                await page.goto(`http://localhost:8080//posts/${post}/index.html`);","                (await page.target().createCDPSession()).send('Network.clearBrowserCache')","                await page.reload({ waitUntil: ['networkidle0'], bypassCache: true })","                await page.screenshot({ path: `./output/posts/${post}/preview.png` })","            }","","            await browser.close()","","            await new Promise(resolve => {","                server.on('close', resolve)","                server.close()","            })","","            console.log('Screenshots taken.')","            resolve()","        })","    else","        return Promise.resolve()","}","",";","(async () => {","    logDelay('Main start')","","    const previewMode = process.argv.includes('previewMode')","    if (previewMode)","        console.log('posts:', JSON.parse(process.argv[process.argv.indexOf('previewMode') + 1]))","","    console.log('Generating website')","","    setupFolder()","","    logDelay('Setup folder')","","    const postPaths = findPostPaths()","","    logDelay('Found post paths')","","    cleanPostsFolder(postPaths)","","    logDelay('Cleaned posts folder')","","    setupLiveBackgrounds(postPaths)","","    logDelay('Setup live backgrounds')","","    if (previewMode)","        JSON.parse(process.argv[process.argv.indexOf('previewMode') + 1]).forEach(postPath => generatePost(postPath, true))","    else","        postPaths.forEach(postPath => generatePost(postPath))","","    logDelay('Generated posts')","","    generateMainPage(postPaths, previewMode)","","    logDelay('Generated main page')","","    saveAndCopyStats(true || !previewMode)","","    logDelay('Saved stats')","","    if (!previewMode) {","        await generateLinkPreviews()","","        logDelay('Generated link previews')","    }","","    console.log('Website generated in', Date.now() - startTime, 'ms')","","    logDelay.log()","","    process.exit(0)","})()"],"livePreview.js":["const { spawn } = require('bun')","const chokidar = require('chokidar')","const { resolve, join, extname } = require('path')","const fs = require('fs')","import { serve, file as BunFile } from 'bun'","import { lookup as getMimeType } from 'mime-types'","import { WebSocketServer } from 'ws'","","process.chdir(__dirname)","","let permaLines = []","let spawnLogs = []","","const argv = process.argv","const showSpawnLogs = argv.includes('logSpawn')","","let generatingWebsite = false","let waitingToGenerateWebsite = false","async function generateWebsite(postsWaitingToGenerateString) {","    const process = spawn({","        cmd: ['bun', 'generateWebsite.js', 'previewMode', postsWaitingToGenerateString, ...(argv.includes('background') ? ['hidePostContent'] : [])],","        stdout: 'pipe',","        stderr: 'pipe'","    })","","    if (showSpawnLogs) {","        for await (const chunk of process.stdout)","            spawnLogs.push(...new TextDecoder().decode(chunk).split('\\n').filter(message => message !== '').map(message => ({ message, time: Date.now(), type: 'log' })))","","        for await (const chunk of process.stderr)","            spawnLogs.push(...new TextDecoder().decode(chunk).split('\\n').filter(message => message !== '').map(message => ({ message, time: Date.now(), type: 'error' })))","    }","","    await process.exited","}","","const colors = {","    reset: '\\x1b[0m',","    bright: '\\x1b[1m',","    dim: '\\x1b[2m',","    underscore: '\\x1b[4m',","    blink: '\\x1b[5m',","    reverse: '\\x1b[7m',","    hidden: '\\x1b[8m',","","    fg: {","        black: '\\x1b[30m',","        red: '\\x1b[31m',","        green: '\\x1b[32m',","        yellow: '\\x1b[33m',","        blue: '\\x1b[34m',","        magenta: '\\x1b[35m',","        cyan: '\\x1b[36m',","        white: '\\x1b[37m',","        crimson: '\\x1b[38m' // Scarlet","    },","    bg: {","        black: '\\x1b[40m',","        red: '\\x1b[41m',","        green: '\\x1b[42m',","        yellow: '\\x1b[43m',","        blue: '\\x1b[44m',","        magenta: '\\x1b[45m',","        cyan: '\\x1b[46m',","        white: '\\x1b[47m',","        crimson: '\\x1b[48m'","    }","}","","// WebSocket server setup","const wss = new WebSocketServer({ port: 3001 })","","wss.on('connection', (ws) => {","    ws.lastPong = 0","    ws.on('message', function (message) {","        if (message.toString() === 'pong')","            ws.lastPong = Date.now()","    })","})","","function getBlogPostDirs(dir) {","    let blogPostDirs = []","","    fs.readdirSync(dir, { withFileTypes: true }).forEach(dirent => {","        const fullPath = join(dir, dirent.name)","        if (dirent.isDirectory()) {","            if (dirent.name === 'node_modules')","                return","            if (dirent.name.startsWith('blogPost_'))","                blogPostDirs.push(fullPath)","            else","                blogPostDirs = blogPostDirs.concat(getBlogPostDirs(fullPath))","        }","    })","","    return blogPostDirs","}","","const blogPostDirs = getBlogPostDirs(resolve(__dirname, '..'))","","const postsWaitingToGenerate = []","permaLines.push(postsWaitingToGenerate)","function updateSite(post, fullRegen) {","    if (fullRegen)","        postsWaitingToGenerate.splice(0, postsWaitingToGenerate.length, ...blogPostDirs)","    if (post && !postsWaitingToGenerate.includes(post))","        postsWaitingToGenerate.push(post)","    if (!generatingWebsite) {","        generatingWebsite = true","        const postsWaitingToGenerateString = JSON.stringify(postsWaitingToGenerate)","        postsWaitingToGenerate.splice(0)","        generateWebsite(postsWaitingToGenerateString).then(() => {","            wss.clients.forEach(client => {","                if (client.readyState === 1)","                    client.send('reload')","            })","            generatingWebsite = false","            if (waitingToGenerateWebsite) {","                waitingToGenerateWebsite = false","                updateSite()","            }","        })","    } else","        waitingToGenerateWebsite = true","}","updateSite(undefined, true)","","let lastChangeTime = 0","chokidar.watch(blogPostDirs, {","    persistent: true,","    ignoreInitial: true","}).on('all', (event, path) => {","    if (event === 'change' || event === 'add' || event === 'unlink') {","        lastChangeTime = Date.now()","        updateSite(`${path.split('blogPost_')[0]}blogPost_${path.split('blogPost_')[1].split('\\\\')[0]}`)","    }","})","","const watchAll = argv.includes('watchAll')","if (watchAll)","    chokidar.watch(process.cwd(), {","        persistent: true,","        ignored: /node_modules|mem.json|output|\\.git/,","        ignoreInitial: true","    }).on('all', (event, path) => {","        if (event === 'change' || event === 'add' || event === 'unlink') {","            lastChangeTime = Date.now()","            updateSite(undefined, true)","        }","    })","","const baseDirectory = './output'","","const server = serve({","    async fetch(req) {","        const url = new URL(req.url)","        let path = decodeURIComponent(url.pathname)","","        // Normalize root path to serve index.html","        if (path === '/') {","            path = '/index.html'","        }","","        // Handle favicon requests without throwing an error","        if (path.startsWith('/favicon')) {","            return new Response(null, { status: 204 }); // No Content response","        }","","        // Full file path","        let filePath = join(baseDirectory, path)","","        // Check if the path has an extension to determine if it's a directory","        if (!extname(filePath)) {","            filePath = join(filePath, 'index.html')","        }","","        // Serve the file","        try {","            const file = BunFile(filePath)","            const mimeType = getMimeType(filePath) || 'application/octet-stream'","","            return new Response(file, {","                headers: { 'Content-Type': mimeType }","            })","        } catch (error) {","            console.error(`File not found: ${filePath}`, error)","            return new Response('File not found', { status: 404 })","        }","    }","})","","setInterval(() => {","    wss.clients.forEach(client => {","        if (client.readyState === 1) // 1 means open","            client.send('ping')","    })","}, 100)","","let lastKeyPressTime = 0","","let lastLines = []","let consoleUpdateIndex = 0","const consoleUpdateChars = '⸺⟋|⟍'","function updateConsole() {","    const lines = []","    lines.push(`${colors.bright}[${colors.fg.magenta}${consoleUpdateChars[consoleUpdateIndex]}${colors.fg.white}] LIVE PREVIEW [${colors.fg.magenta}${(consoleUpdateChars[(4 - consoleUpdateIndex) % 4])}${colors.fg.white}]${colors.reset}`)","    lines.push(`${colors.fg.cyan}Hosting site at ${colors.fg.yellow}${colors.underscore}${server.url}${colors.reset}`)","    const numberOfConnections = Array.from(wss.clients).filter(ws => Date.now() - ws.lastPong < 1000).length","    lines.push(`${numberOfConnections === 0 ? colors.fg.red : colors.fg.green}There ${numberOfConnections === 1 ? 'is' : 'are'} ${numberOfConnections} connected websocket${numberOfConnections === 1 ? '' : 's'} for live previewing${colors.reset}`)","    lines.push(`${colors.fg.cyan}Watching ${colors.fg.yellow}${blogPostDirs.length}${colors.fg.cyan} post${blogPostDirs.length === 1 ? '' : 's'}: ${blogPostDirs.map(path => `${colors.fg.yellow}${path.split('blogPost_')[1]}`).join(`${colors.fg.cyan}, `)}${colors.reset}`)","    if (watchAll) lines.push(`${colors.fg.cyan}Watching ${colors.fg.yellow}${process.cwd()}${colors.reset}`)","    if (Date.now() - lastChangeTime < 1000)","        lines.push(`${colors.fg.green}CHANGE DETECTED${colors.reset}`)","    if (generatingWebsite)","        lines.push(`${colors.fg.yellow}GENERATING FOLDER${colors.reset}`)","    if (waitingToGenerateWebsite)","        lines.push(`${colors.fg.red}WAITING TO REGENERATE FOLDER${colors.reset}`)","    if (Date.now() - lastKeyPressTime < 1000)","        lines.push(`${colors.bright}Press CTRL+c to exit${colors.reset}`)","","    lines.push(...permaLines)","        ;","    [...spawnLogs].forEach(log => {","        lines.push(`[SPAWN ${log.type.toUpperCase()}] ${log.message}`)","        if (Date.now() - log.time > 1000)","            spawnLogs.splice(spawnLogs.indexOf(log), 1)","    })","","    lastLines.forEach((line, index) => {","        if (lines.length <= index)","            process.stdout.write(`\\x1b[${index + 1};0H \\x1b[2K`)","    })","","    lines.forEach((line, index) => {","        if (line !== lastLines[index]) {","            process.stdout.write(`\\x1b[${index + 1};0H \\x1b[2K${line}`)","        }","    })","","    lastLines = lines","","    consoleUpdateIndex = (consoleUpdateIndex + 1) % 4","}","process.stdout.write('\\x1B[2J\\x1B[0f')","process.stdout.write('\\x1b[?25l')","setInterval(updateConsole, 100)","updateConsole()","","const readline = require('readline')","","readline.emitKeypressEvents(process.stdin)","","if (process.stdin.isTTY)","    process.stdin.setRawMode(true)","","process.stdin.on('keypress', (str, key) => {","    if (key.ctrl && key.name === 'c') {","        process.stdout.write('\\x1B[2J\\x1B[0f')","        process.stdout.write(`\\x1b[0;0H \\x1b[2K`)","        process.stdout.write('\\x1b[?25h')","        process.exit()","    }","    lastKeyPressTime = Date.now()","})"],"livePreviewInjection.js":["let ws","let lastPing = 0","function heartbeat() {","    if (Date.now() - lastPing >= 1000) {","        ws = new WebSocket('ws://localhost:3001')","        ws.onmessage = (event) => {","            if (event.data === 'reload') location.reload()","            else if (event.data === 'ping' && ws.readyState == 1) {","                lastPing = Date.now()","                ws.send('pong')","            }","        }","    }","","    //This line causes a crash with bun, but will make the websites auto reconnect when bun stops crashing.","    setTimeout(heartbeat, 100)","}","heartbeat()"],"markup.js":["function cssRuleFromStyles(defaultStyle, style, scale = 1) {","    let out = []","    Object.keys(style).forEach(key => {","        if (defaultStyle[key] != style[key]) {","            const value = style[key]","            if (key == 'color')","                out.push(`color:${value}`)","            else if (key == 'italic')","                out.push(`font-style:${value ? 'italic' : 'normal'}`)","            else if (key == 'bold')","                out.push(`font-weight:${value ? 'bold' : 'normal'}`)","            else if (key == 'size')","                if (scale == 1)","                    out.push(`font-size:${value}`)","                else","                    out.push(`font-size:calc(${value} * ${scale})`)","            else if (key == 'strike')","                out.push(`text-decoration: ${value ? 'line-through' : 'none'}`)","        }","    })","    return out.join('; ') + ';'","}","","function err(message) {","    throw new Error(`Error parsing markup: ${message}`)","}","","//some helper functions to make more readable code","","/**"," * charAt + toLowerCase"," */","const lca = (str, i) => str.charAt(i).toLowerCase()","","/**"," * slice + toLowerCase"," */","const ls = (str, start, stop) => str.slice(start, stop).toLowerCase()","","//used so I can check nextProp without it existing","const emptyString = new Array(2 ** 16).fill(' ').join('')","","//the script injected into the output html","function script() {","    (() => {","        const wrapper = document.currentScript.parentNode","        function setValue(key, value) {","            let saveData = sessionStorage.getItem('markup') != undefined ? JSON.parse(sessionStorage.getItem('markup')) : {}","            saveData[key] = value","            sessionStorage.setItem('markup', JSON.stringify(saveData))","        }","        function getValue(key) {","            return (sessionStorage.getItem('markup') != undefined ? JSON.parse(sessionStorage.getItem('markup')) : {})[key]","        }","        function removeKey(key) {","            let saveData = sessionStorage.getItem('markup') != undefined ? JSON.parse(sessionStorage.getItem('markup')) : {}","            delete saveData[key]","            sessionStorage.setItem('markup', JSON.stringify(saveData))","        }","        document.addEventListener('DOMContentLoaded', () => {","            [...wrapper.getElementsByClassName('folder')].forEach(folder => {","                if (getValue(`id_${folder.dataset.id}`) != undefined) {","                    const children = folder.children","                    const open = getValue(`id_${folder.dataset.id}`)","                    children[0].innerHTML = children[0].innerHTML.replace(open ? 'open' : 'close', open ? 'close' : 'open')","                    children[1].style.display = open ? '' : 'none'","                }","            })","        })","        if (window.markup == undefined) {","            window.markup = {","                folder(event) {","                    event.stopPropagation()","                    const folder = event.target.closest('.folder')","                    const children = folder.children","                    const open = children[1].style.display == 'none'","                    children[0].innerHTML = children[0].innerHTML.replace(open ? 'open' : 'close', open ? 'close' : 'open')","                    children[1].style.display = open ? '' : 'none'","                    setValue(`id_${folder.dataset.id}`, open)","                }","            }","        }","    })()","}","","function splitMarkup(rawMarkup) {","    return rawMarkup.split('<').join('&lt').split('\\r\\n').filter(line => line.slice(0, 10) != '|[COMMENT]').join('').split('|[').filter(part => part != '').map(part => {","        if (part.slice(0, 1) == '|') return '|[' + part.slice(1)","        if (part.includes(']')) return [[part.slice(0, part.indexOf(']'))], part.slice(part.indexOf(']') + 1)]","        return part","    }).flat(1).reduce((acc, part) => {","        if (typeof part == 'string')","            if (acc.length > 0 && typeof acc[acc.length - 1] == 'string') {","                acc[acc.length - 1] += part","                return acc","            }","            else","                return [...acc, part]","        while (part.some(part => part.includes(' ')))","            part = part.map(part => part.split(' ')).flat()","        let inPar = false","        part = part.reduce((acc, part) => {","            if (inPar)","                acc[acc.length - 1] += ' ' + part","            else acc = [...acc, part]","            if (part.indexOf('(') > -1)","                inPar = part.indexOf('(') > part.indexOf(')')","            else","                inPar = part.indexOf(')') == -1 && inPar","            return acc","        }, [])","        part = part.filter(item => item != '')","        if (part.length == 0)","            return acc","        else","            return [...acc, part]","    }, []).filter(part => part != '')","}","","let nextGlobalId = 0 //used for anything that needs a unique identifier","","module.exports = {","    defaultStyle: {","        color: '#0f0',","        italic: false,","        bold: false,","        size: 'medium',","        code: false,","        align: 'left',","        showMarkup: false,","        strike: false","    },","    tabSize: 3,","    stripTags(rawMarkup) {","        return splitMarkup(rawMarkup).map(item => typeof item === 'string' ? item : item.filter(subItem => subItem === 'break').map(() => '<br>').join('')).join('')","    },","    /**","     * Translates markup into html.","     * @param {String} rawMarkup ","     * @param {Number} scale ","     * @param {String[]} classes any classes to add to the wrapper","     * @returns HTML","     */","    translate(rawMarkup, scale = 1, classes = []) {","        const markup = splitMarkup(rawMarkup)","","        let defaultStyle = { ...this.defaultStyle }","","        let style = { ...defaultStyle }","","        let lastAlign","","        let folds = []","","        let needScript = false","","        let html = ''","","        let nextLine = ''","","        markup.forEach(props => {","            if (typeof props == 'string') {","                if (style.align != lastAlign) {","                    if (lastAlign != undefined)","                        html += '</div>'","                    html += `<div style=\"text-align:${style.align};\">`","                    lastAlign = style.align","                }","                const cssRules = cssRuleFromStyles(defaultStyle, style, scale)","                let text = nextLine + props","                if (style.code) text = `<code>${text}</code>`","                if (cssRules.length == 1) //take the ; into account","                    html += text","                else","                    html += `<span style=\"${cssRules}\">${text}</span>`","                nextLine = ''","            } else {","                if (style.showMarkup)","                    nextLine += `|[${props.join(' ')}]`","                for (let index = 0; index < props.length; index++) {","                    const prop = props[index]","                    const nextProp = props[index + 1] ?? emptyString","                    const lowerProp = prop.toLowerCase()","","                    if (lowerProp == 'color') {","                        if (ls(nextProp, 0, 1) == '#') { //must be hex","                            if (nextProp.length == 4) //is in format #rgb","                                style.color = nextProp.toLowerCase()","                            else if (nextProp.length == 5) //is in format #rgba","                                if (ls(nextProp, 4, 5) == 'f') //check if alpha is needed","                                    style.color = ls(str, 0, 4)","                                else","                                    style.color = nextProp.toLowerCase()","                            else if (nextProp.length == 7) //is in format #rrggbb","                                if (lca(nextProp, 1) == lca(nextProp, 2) && lca(nextProp, 3) == lca(nextProp, 4) && lca(nextProp, 5) == lca(nextProp, 6)) //check if the color can be shortened","                                    style.color = ('#' + lca(nextProp, 1) + lca(nextProp, 3) + lca(nextProp, 5)).toLowerCase()","                                else","                                    style.color = nextProp.toLowerCase()","                            else if (nextProp.length == 9) //is in format #rrggbbaa","                                if (nextProp.slice(7, 9).toLowerCase() == 'ff') //check if alpha is needed","                                    if (lca(nextProp, 1) == lca(nextProp, 2) && lca(nextProp, 3) == lca(nextProp, 4) && lca(nextProp, 5) == lca(nextProp, 6)) //check if the color can be shortened","                                        style.color = ('#' + lca(nextProp, 1) + lca(nextProp, 3) + lca(nextProp, 5)).toLowerCase()","                                    else","                                        style.color = nextProp.slice(0, 7).toLowerCase()","                                else","                                    if (lca(nextProp, 1) == lca(nextProp, 2) && lca(nextProp, 3) == lca(nextProp, 4) && lca(nextProp, 5) == lca(nextProp, 6) && lca(nextProp, 7) == lca(nextProp, 8)) //check if the color can be shortened","                                        style.color = ('#' + lca(nextProp, 1) + lca(nextProp, 3) + lca(nextProp, 5) + lca(nextProp, 7)).toLowerCase()","                                    else","                                        style.color = nextProp.toLowerCase()","                            else err(`invalid hex code`)","                        } else if (ls(nextProp, 0, 3) == 'rgb') {","                            try {","                                const digits = nextProp.toLowerCase().slice(lca(nextProp, 3) == 'a' ? 5 : 4).split(')')[0].split(',').map(digit => Math.max(0, Math.min(255, Math.round(Number(digit.trim())))).toString(16).padStart(2, '0')).filter((digit, index) => digit != 'ff' || index != 3)","                                if (digits.every(digit => digit.charAt(0) == digit.charAt(1)))","                                    style.color = '#' + digits.reduce((acc, digit) => acc + digit.charAt(0), '')","                                else","                                    style.color = '#' + digits.reduce((acc, digit) => acc + digit, '')","                            } catch {","                                err('invalid rgb')","                            }","                        } else","                            style.color = defaultStyle.color","                    }","","                    else if (lowerProp == 'italic') {","                        if (['on', 'true'].includes(nextProp.toLowerCase()))","                            style.italic = true","                        else if (['off', 'false'].includes(nextProp.toLowerCase()))","                            style.italic = false","                        else","                            style.italic = !style.italic","                    }","","                    else if (lowerProp == 'bold') {","                        if (['on', 'true'].includes(nextProp.toLowerCase()))","                            style.bold = true","                        else if (['off', 'false'].includes(nextProp.toLowerCase()))","                            style.bold = false","                        else","                            style.bold = !style.bold","                    }","","                    else if (lowerProp == 'space') {","                        try {","                            const count = Math.round(Number(nextProp))","                            if (count > 0 && !isNaN(count))","                                nextLine += new Array(count).fill('&nbsp;').join('')","                            else","                                nextLine += '&nbsp;'","                        } catch {","                            nextLine += '&nbsp;'","                        }","                    }","","                    else if (lowerProp == 'tab') {","                        try {","                            const count = Math.round(Number(nextProp) * this.tabSize)","                            if (count > 0 && !isNaN(count))","                                nextLine += new Array(count).fill('&nbsp;').join('')","                            else","                                nextLine += new Array(this.tabSize).fill('&nbsp;').join('')","                        } catch {","                            nextLine += new Array(this.tabSize).fill('&nbsp;').join('')","                        }","                    }","","                    else if (lowerProp == 'break') {","                        if (Number(nextProp) > 0)","                            nextLine += `<div style=\"display:block; height:${Number(nextProp)}em; line-height:${Number(nextProp)}em;\"></div>`","                        else","                            nextLine += '<br>'","                    }","","                    else if (lowerProp == 'size') {","                        if (['xx-small', 'x-small', 'smaller', 'small', 'medium', 'large', 'larger', 'x-large', 'xx-large'].includes(nextProp.toLowerCase()))","                            style.size = nextProp.toLowerCase()","                        else if (Number(nextProp) > 0)","                            style.size = `${Number(nextProp)}px`","                        else","                            style.size = defaultStyle.size","                    }","","                    else if (lowerProp == 'code') {","                        if (['on', 'true'].includes(nextProp.toLowerCase()))","                            style.code = true","                        else if (['off', 'false'].includes(nextProp.toLowerCase()))","                            style.code = false","                        else","                            style.code = !style.code","                    }","","                    else if (lowerProp == 'align') {","                        if (['left', 'center', 'right'].includes(nextProp.toLowerCase()))","                            style.align = nextProp.toLowerCase()","                        else","                            style.align = defaultStyle.align","                    }","","                    else if (lowerProp == 'reset') {","                        if (Object.keys(defaultStyle).includes(nextProp.toLowerCase()))","                            style[nextProp.toLowerCase()] = defaultStyle[nextProp.toLowerCase()]","                        else","                            Object.keys(defaultStyle).forEach(key => style[key] = defaultStyle[key])","","                    }","","                    else if (lowerProp == 'default') {","                        if (nextProp.toLowerCase() == 'global')","                            Object.keys(style).forEach(key => this.defaultStyle[key] = style[key])","                        Object.keys(style).forEach(key => defaultStyle[key] = style[key])","                    }","","                    else if (lowerProp == 'fold') {","                        needScript = true","                        if (['open', 'close'].includes(nextProp.toLowerCase())) {","                            let foldId = folds.length + 1","                            while (rawMarkup.includes(`fold_${foldId}`))","                                foldId++","                            folds.push({","                                id: foldId,","                                style: { ...style },","                                open: nextProp.toLowerCase() == 'open'","                            })","                            if (lastAlign != undefined)","                                html += '</div>'","                            html += `fold_${foldId}`","                            html += `<div style=\"text-align:${style.align};\">`","                        } else {","                            if (lastAlign != undefined)","                                html += '</div>'","                            lastAlign = undefined //to make the next line trigger a new block","                            const fold = folds.pop()","                            const content = html.split(`fold_${fold.id}`)[1]","                            html = html.slice(0, html.indexOf(`fold_${fold.id}`))","                            const cssRules = cssRuleFromStyles(defaultStyle, fold.style, scale)","                            let text = `|[click to ${fold.open ? 'close' : 'open'}]`","                            if (style.code) text = `<code>${text}</code>`","                            if (cssRules.length != 1)","                                text = `<span style=\"${cssRules}\">${text}</span>`","","                            html += `","                            <div class=\"folder\" data-id=${nextGlobalId++}>","                                <div style=\"cursor: pointer; text-align:${fold.style.align};\" onclick=\"window.markup.folder(event)\">","                                    ${text}","                                </div>","                                <div ${fold.open ? '' : 'style=\"display:none;\"'}>","                                    ${content}","                                </div>","                            </div>","                            `","                        }","                    }","","                    else if (lowerProp == 'image') {","                        if (style.align != lastAlign) {","                            if (lastAlign != undefined)","                                html += '</div>'","                            html += `<div style=\"text-align:${style.align};\">`","                            lastAlign = style.align","                        }","                        if (props.length > index + 1 && Number(props[index + 2]) > 0 && Number(props[index + 2] != 1))","                            html += `<br><img src=\"./${nextProp}\" alt=\"${nextProp}\" style=\"width:${Number(props[index + 2] * 100)}%\">`","                        else","                            html += `<br><img src=\"./${nextProp}\" alt=\"${nextProp}\">`","                    }","","                    else if (lowerProp == 'showmarkup') {","                        if (['on', 'true'].includes(nextProp.toLowerCase()))","                            style.showMarkup = true","                        else if (['off', 'false'].includes(nextProp.toLowerCase()))","                            style.showMarkup = false","                        else","                            style.showMarkup = !style.showMarkup","                    }","","                    else if (lowerProp == 'video') {","                        if (style.align != lastAlign) {","                            if (lastAlign != undefined)","                                html += '</div>'","                            html += `<div style=\"text-align:${style.align};\">`","                            lastAlign = style.align","                        }","                        if (props.length > index + 1 && Number(props[index + 2]) > 0 && Number(props[index + 2] != 1))","                            html += `<br><video src=\"./${nextProp}\" controls alt=\"${nextProp}\" style=\"width:${Number(props[index + 2] * 100)}%\"></video>`","                        else","                            html += `<br><video src=\"./${nextProp}\" controls alt=\"${nextProp}\"></video>`","                    }","","                    else if (lowerProp == 'strike') {","                        if (['on', 'true'].includes(nextProp.toLowerCase()))","                            style.strike = true","                        else if (['off', 'false'].includes(nextProp.toLowerCase()))","                            style.strike = false","                        else","                            style.strike = !style.strike","                    }","","                    else if (lowerProp == 'script' && nextProp != undefined) {","                        nextLine += `<script src=\"${nextProp}\"></script>`","                    }","                }","            }","        })","","        if (nextLine != '') {","            if (style.align != lastAlign) {","                if (lastAlign != undefined)","                    html += '</div>'","                html += `<div style=\"text-align:${style.align};\">`","                lastAlign = style.align","            }","            const cssRules = cssRuleFromStyles(defaultStyle, style, scale)","            if (style.code) nextLine = `<code>${nextLine}</code>`","            if (cssRules.length == 1) //take the ; into account","                html += nextLine","            else","                html += `<span style=\"${cssRules}\">${nextLine}</span>`","        }","","        if (lastAlign != undefined)","            html += '</div>'","","        let wrapperStyle = cssRuleFromStyles({}, defaultStyle, scale)","        wrapperStyle += [","            'margin:0',","            'padding:0',","            'word-wrap:break-word',","            'width:100%',","            'height:100%'","        ].join('; ') + ';'","","        const scriptString = script.toString().slice(12).split('\\r\\n').reduce((acc, part) => acc + '; ' + part.split('//')[0], '').split('').reduce((acc, part, index, arr) => {","            if (index >= arr.length - 3) return acc","            if (part == ' ' && acc.charAt(acc.length - 1) == ' ')","                return acc","            return acc + part","        }, '').split('{; ').join('{').split('; }').join('}').split('; ').reduce((acc, part) => {","            if (acc.slice(acc.length - 2) == '; ' && part == '') return acc","            return acc + part + '; '","        }, '')","","        return `","        <div class=\"${['markup', ...classes].join(' ')}\" style=\"${wrapperStyle}\">${needScript ? `\\r\\n<script>${scriptString}</script>` : ''}","            ${html}","        </div>","        `","    }","}","","/**","This markup uses tags in |[] clumps mixed with text to style. ","the text is evaluated from beginning to end, any text being rendered using the current style.","to change the style, add |[] with tags and values inside, this sets the style for everything after, until changes.","tags are evaluated by order they appear, in a |[].","tags are found by scanning for |[ and reading until ], and are separated by spaces.","to render a |[ you can put |[|, this will not read tags like normal.","you can put ] anywhere, and unless it is closing a tag area it will render.","the tags are below, items in the first column are the keywords, items in the second column are values to be used.","a !-> in the second column indicates the action that happens if non of the other options are there","values in the second column with a [] signify that you put a value there (but don't include the [])","values in the second column with a ?[] signify that the value is optional",""," * color: -> sets the text color to the most efficient hex value that represents prop 1"," * * #[rgb] -> each range is in the value 0-f in base 16"," * * #[rgba]"," * * #[rrggbb]"," * * #[rrggbbaa]"," * * rgb([r],[g],[b]) -> each value is in the range 0-255"," * * rgb([r],[g],[b],[a])"," * * rgba([r],[g],[b])"," * * rgba([r],[g],[b],[a])"," * * !-> sets color to the default color"," * italic: -> sets whether text will be italic"," * * on | true"," * * off | false"," * * !-> toggles italics"," * bold: -> sets whether text will be bold"," * * on | true"," * * off | false"," * * !-> toggles bold text"," * space: -> adds [number] spaces using '&nbsp;' after"," * * [number]"," * * !-> defaults to 1"," * tabs: -> adds [number] spaces * tabSize (defaults to 3) after"," * * [number]"," * * !-> defaults to 1"," * break: -> used to make new lines"," * * [number] -> creates a break and then inserts a blank line of [number] lines in height, then second break"," * * !-> just adds <br>"," * size: -> sets the text size"," * * xx-small | x-small | smaller | small | medium | large | larger | x-large | xx-large -> uses the default sizes"," * * [number] -> (viewport width + viewport height) / 2 * [number], [number] is in the range [number] >= 0.02"," * * !-> sets size to the default size"," * code: -> sets whether text will be code using <code></code>"," * * on | true"," * * off | false"," * * !-> toggles code text"," * align: -> sets which direction text should align (changing align triggers a break)"," * * left | center | right"," * * !-> sets align to the default align"," * reset: "," * * [property] -> sets [property] to the default [property]"," * * !-> resets the full style to the default style"," * default: -> changes the default used for many tags, but does not change the default retrospectively"," * * global -> sets the global default, this is the default used to generate the local (the default always used) default, also sets the local default "," * * !-> sets the default style to the current style"," * fold: -> creates foldable content, with all content until the fold close being inside (fold triggers a break)"," * * open | close -> starts a fold that is open | closed at start"," * * !-> closes a fold"," * image: -> embeds an image in the next line"," * * [path] [size] -> size is relative to the div, so a size of 1 would fill the space, or a size of .5 could fit two images side by side"," * * [path] !-> defaults to 1"," * showMarkup: -> sets whether the markup tags will be hidden (defaults to false)"," * * on | true"," * * off | false"," * * !-> toggles"," * COMMENT: -> \"comments\" out the line, must be alone in the tag bracket, and the first thing in the line: |[COMMENT]"," * video: -> embeds a video in the next line"," * * [path] [size] -> size is relative to the div, so a size of 1 would fill the space, or a size of .5 could fit two videos side by side"," * * [path] !-> defaults to 1"," * strike: -> sets whether text will have strikethrough"," * * on | true"," * * off | false"," * * !-> toggles strikethrough"," * script: -> embeds a piece of live code"," * * [path] -> where to find the script","","","for example: to create 'before green it was boring' with 'green' being green you could use the following markup:","before |[color #0f0]green|[color] it was boring","the first tag clump sets the color to green (#0f0), the second clump resets color to the default"," */"],"output\\backgroundManager.js":["const backgroundPaths = [\"./posts/Making a custom blog/background.js\",\"./backgrounds/fireworks.js\",\"./backgrounds/hiddenSnakes.js\",\"./backgrounds/pong.js\",\"./backgrounds/rain.js\",\"./backgrounds/randomSymbols.js\",\"./backgrounds/uniqueCode.js\"];","document.addEventListener('DOMContentLoaded', async () => {","    function mixPaths() {","        const lastPath = backgroundPaths[backgroundPaths.length - 1]","        do backgroundPaths.sort(() => Math.random() * 2 - 1)","        while (backgroundPaths.length > 1 && backgroundPaths[0] == lastPath)","    }","    mixPaths()","","    let backgroundIndex = -1","","    const minTimePerBackground = 1000 * 30","    const blurTime = 1000 * 1","    let backgroundStarted = 0","","    let blurred = false","","    let cycle = true","","    let currentBackground = {}","","    let loadedBackgrounds = []","","    const maxUps = 60","    let lastUpdate = 0","","    async function update() {","        lastUpdate = Date.now()","","        const canvas = document.getElementById('backgroundCanvas')","        const ctx = canvas.getContext('2d')","","        if (cycle && minTimePerBackground - (Date.now() - backgroundStarted) <= blurTime && !blurred) {","            canvas.classList.add('blur')","            blurred = true","        }","","        if (cycle && Date.now() - backgroundStarted >= minTimePerBackground) {","            if (currentBackground.stop != undefined) await currentBackground.stop(canvas, ctx)","            backgroundIndex = (backgroundIndex + 1) % backgroundPaths.length","            if (backgroundIndex == 0) mixPaths()","            if (!loadedBackgrounds.includes(backgroundPaths[backgroundIndex])) await new Promise(r => {","                const script = document.createElement('script')","                script.type = 'module'","                script.src = backgroundPaths[backgroundIndex]","                script.onload = r","                document.head.appendChild(script)","                loadedBackgrounds.push(backgroundPaths[backgroundIndex])","            })","            currentBackground = await import(backgroundPaths[backgroundIndex])","            if (currentBackground.start != undefined) await currentBackground.start(canvas, ctx)","            canvas.classList.remove('blur')","            blurred = false","            backgroundStarted = Date.now()","        }","        if (currentBackground.update != undefined) await currentBackground.update(canvas, ctx)","","        //has to be set after the first update so the first background will always get loaded","        cycle = (backgroundPaths.length > 1)","","        requestAnimationFrame(() => setTimeout(update, 1000 / maxUps - (Date.now() - lastUpdate)))","    }","    update()","})"],"output\\backgrounds\\fireworks.js":["const fontSize = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i).test(navigator.userAgent || navigator.vendor || window.opera) ? 50 : 25","","let [width, height] = [0, 0]","","let [lastWidth, lastHeight] = [0, 0]","","let grid = [[]]","","function fillGrid(canvas, ctx) {","    width = canvas.width = window.innerWidth","    height = canvas.height = window.innerHeight","","    grid = [...grid, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize) + 1).map(colum => [...colum, ...new Array(Math.ceil(height / fontSize)).fill(0)].splice(0, Math.ceil(height / fontSize) + 1))","","    ctx.fillStyle = '#000'","    ctx.fillRect(0, 0, width, height)","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    for (let x = 0; x < width / fontSize; x++)","        for (let y = 0; y < height / fontSize; y++) {","            ctx.fillStyle = 'rgb(0,50,0)'","            ctx.fillText('0', x * fontSize, y * fontSize)","        }","}","","let fireworks = []","let lastFirework = 0","","export function update(canvas, ctx) {","    if (lastWidth != window.innerWidth || lastHeight != innerHeight)","        fillGrid(canvas, ctx)","    lastWidth = window.innerWidth","    lastHeight = window.innerHeight","","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    if (Date.now() - lastFirework >= 1000) {","        lastFirework = Date.now()","        fireworks.push({","            x: Math.floor(Math.random() * grid.length),","            y: Math.floor(Math.random() * grid[0].length),","            counter: 0,","            radius: 1,","            maxRadius: Math.ceil(Math.random() * 15 + 10),","            speed: Math.ceil(Math.random() * 10)","        })","    }","","    fireworks.forEach((firework, index) => {","        for (let x = Math.max(firework.x - firework.radius, 0); x < Math.min(firework.x + firework.radius, grid.length); x++)","            for (let y = Math.max(firework.y - firework.radius, 0); y < Math.min(firework.y + firework.radius, grid[0].length); y++) {","                const distance = Math.abs(x - firework.x) + Math.abs(y - firework.y) + 1","                if (distance <= firework.radius) {","                    ctx.fillStyle = '#000'","                    ctx.fillRect(x * fontSize, y * fontSize, fontSize, fontSize)","                    ctx.fillStyle = `rgb(0,${255 - firework.radius * (205 / firework.maxRadius)},0)`","                    ctx.fillText(distance < firework.radius ? '0' : '1', x * fontSize, y * fontSize)","                }","            }","        if (firework.radius == firework.maxRadius) {","            for (let x = Math.max(firework.x - firework.radius, 0); x < Math.min(firework.x + firework.radius, grid.length); x++)","                for (let y = Math.max(firework.y - firework.radius, 0); y < Math.min(firework.y + firework.radius, grid[0].length); y++)","                    if (Math.abs(x - firework.x) + Math.abs(y - firework.y) <= firework.radius) {","                        ctx.fillStyle = '#000'","                        ctx.fillRect(x * fontSize, y * fontSize, fontSize, fontSize)","                        ctx.fillStyle = 'rgb(0,50,0)'","                        ctx.fillText('0', x * fontSize, y * fontSize)","                    }","            fireworks.splice(index, 1)","        } else if ((firework.counter = (firework.counter + 1) % firework.speed) == 0) firework.radius++","    })","","}","export function start(canvas, ctx) {","    grid = [[]]","    fillGrid(canvas, ctx)","}"],"output\\backgrounds\\hiddenSnakes.js":["const fontSize = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i).test(navigator.userAgent || navigator.vendor || window.opera) ? 50 : 25","","let [width, height] = [0, 0]","","let [lastWidth, lastHeight] = [0, 0]","","let grid = [[]]","","let snakes = []","","function fillGrid(canvas, ctx) {","    width = canvas.width = window.innerWidth","    height = canvas.height = window.innerHeight","","    grid = [...grid, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize) + 1).map(colum => [...colum, ...new Array(Math.ceil(height / fontSize)).fill(50)].splice(0, Math.ceil(height / fontSize) + 1))","","    ctx.fillStyle = '#000'","    ctx.fillRect(0, 0, width, height)","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    for (let x = 0; x < width / fontSize; x++)","        for (let y = 0; y < height / fontSize; y++) {","            ctx.fillStyle = `rgb(0,${grid[x][y]},0)`","            ctx.fillText('0', x * fontSize, y * fontSize)","        }","}","","export function update(canvas, ctx) {","    if (lastWidth != window.innerWidth || lastHeight != innerHeight)","        fillGrid(canvas, ctx)","    lastWidth = window.innerWidth","    lastHeight = window.innerHeight","","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    let snake = snakes[Math.floor(Math.random() * snakes.length)]","    let tailX = snake[snake.length - 1].x","    let tailY = snake[snake.length - 1].y","    grid[tailX][tailY] -= 25","    ctx.fillStyle = '#000'","    ctx.fillRect(tailX * fontSize, tailY * fontSize, fontSize, fontSize)","    ctx.fillStyle = `rgb(0,${grid[tailX][tailY]},0)`","    ctx.fillText('0', tailX * fontSize, tailY * fontSize)","    for (let index = snake.length - 1; index > 0; index--) {","        snake[index] = { ...snake[index - 1] }","    }","    let headX = snake[0].x","    let headY = snake[0].y","    let hasMoved = false","    let trys = 0","    while (!hasMoved) {","        trys++","        switch (Math.floor(Math.random() * 4)) {","            case 0:","                if (headX > 0 && (snake[2].x != headX - 1 || trys > 50)) {","                    snake[0].x--","                    hasMoved = true","                }","                break","            case 1:","                if (headY > 0 && (snake[2].y != headY - 1 || trys > 50)) {","                    snake[0].y--","                    hasMoved = true","                }","                break","            case 2:","                if (headX + 1 < grid.length && (snake[2].x != headX + 1 || trys > 50)) {","                    snake[0].x++","                    hasMoved = true","                }","                break","            case 3:","                if (headY + 1 < grid[0].length && (snake[2].y != headY + 1 || trys > 50)) {","                    snake[0].y++","                    hasMoved = true","                }","                break","        }","    }","    grid[snake[0].x][snake[0].y] += 50","    ctx.fillStyle = '#000'","    ctx.fillRect(headX * fontSize, headY * fontSize, fontSize, fontSize)","    ctx.fillStyle = `rgb(0,${grid[headX][headY]},0)`","    ctx.fillText('1', headX * fontSize, headY * fontSize)","}","","export function start(canvas, ctx) {","    grid = [[]]","    fillGrid(canvas, ctx)","","    snakes = new Array(3).fill(0).map(() => new Array(25).fill(0).map(() => ({ x: Math.floor(Math.random() * grid.length), y: Math.floor(Math.random() * grid[0].length) })))","}"],"output\\backgrounds\\pong.js":["const fontSize = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i).test(navigator.userAgent || navigator.vendor || window.opera) ? 50 : 25","","let [width, height] = [0, 0]","","let [lastWidth, lastHeight] = [0, 0]","","let balls = new Array(fontSize == 50 ? 2 : 5).fill(0)","let paddles = [0, 0]","","let paddleSize","","function resetCanvas(canvas, ctx) {","    width = canvas.width = window.innerWidth","    height = canvas.height = window.innerHeight","","    ctx.fillStyle = '#000'","    ctx.fillRect(0, 0, width, height)","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    ctx.fillStyle = 'rgb(0,50,0)'","    for (let x = 0; x < width / fontSize; x++)","        for (let y = 0; y < height / fontSize; y++)","            ctx.fillText('0', x * fontSize, y * fontSize)","}","","const dirs = [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: -1, y: 0 }, { x: 0, y: 1 }, { x: 0, y: -1 }]","","export function update(canvas, ctx) {","    if (lastWidth != window.innerWidth || lastHeight != innerHeight)","        resetCanvas(canvas, ctx)","    lastWidth = window.innerWidth","    lastHeight = window.innerHeight","","    for (let x of [0, Math.floor(width / fontSize - 1)]) {","        ctx.fillStyle = '#000'","        ctx.fillRect(x * fontSize, 0, fontSize, height)","        ctx.fillStyle = 'rgb(0,50,0)'","        for (let y = 0; y < height / fontSize; y++)","            ctx.fillText('0', x * fontSize, y * fontSize)","    }","    balls.forEach(ball =>","        dirs.forEach(dir => {","            ctx.fillStyle = '#000'","            ctx.fillRect((ball.lx + dir.x) * fontSize, (ball.ly + dir.y) * fontSize, fontSize, fontSize)","","            ctx.fillStyle = 'rgb(0,50,0)'","            ctx.fillText('0', (ball.lx + dir.x) * fontSize, (ball.ly + dir.y) * fontSize)","        })","    )","    ctx.fillStyle = 'rgb(0,255,0)'","    balls.forEach(ball =>","        dirs.forEach(dir => {","            ctx.fillStyle = '#000'","            ctx.fillRect((ball.x + dir.x) * fontSize, (ball.y + dir.y) * fontSize, fontSize, fontSize)","","            ctx.fillStyle = 'rgb(0,255,0)'","            ctx.fillText('1', (ball.x + dir.x) * fontSize, (ball.y + dir.y) * fontSize)","        })","    )","","    ctx.fillStyle = 'rgb(0,255,0)'","    paddles.forEach((paddle, index) => {","        ctx.fillStyle = '#000'","        ctx.fillRect(index * Math.floor(width / fontSize - 1) * fontSize, paddle * fontSize, fontSize, paddleSize * fontSize)","","        ctx.fillStyle = '#0f0'","        for (let i = 0; i < paddleSize; i++) {","            ctx.fillText('1', index * Math.floor(width / fontSize - 1) * fontSize, (paddle + i) * fontSize)","        }","    })","    balls.forEach(ball => {","        ball.lx = ball.x","        ball.ly = ball.y","","        ball.x += ball.sx","        ball.y += ball.sy","","        if (ball.x == 0) ball.sx = 1","        if (ball.y == 0) ball.sy = 1","        if (ball.x == Math.floor(width / fontSize) - 2) ball.sx = -1","        if (ball.y == Math.floor(height / fontSize) - 2) ball.sy = -1","    })","","    balls.sort((a, b) => (a.sx * width + a.x) - (b.sx * width + b.x))","    paddles[0] -= Math.max(-3, Math.min(3, paddles[0] - (balls[0].y - (paddleSize - 1) / 2)))","","    balls.unshift(balls.pop())","    paddles[1] -= Math.max(-3, Math.min(3, paddles[1] - (balls[0].y - (paddleSize - 1) / 2)))","}","","export function start(canvas, ctx) {","    resetCanvas(canvas, ctx)","    for (let i = 0; i < balls.length; i++) {","        balls[i] = {}","        balls[i].sx = Math.floor(Math.random() * 2) * 2 - 1","        balls[i].sy = Math.floor(Math.random() * 2) * 2 - 1","        balls[i].x = Math.round(width / fontSize / 2) + Math.round((i - balls.length / 2 + .5) * width / fontSize / balls.length / 2)","        balls[i].y = Math.round(height / fontSize / 2) + Math.round((Math.random() * 2 - 1) * (height / fontSize / 3))","        balls[i].lx = balls[i].x","        balls[i].ly = balls[i].y","    }","    paddles.map(() => Math.round(height / fontSize / 2))","    paddleSize = Math.round(height / fontSize / 3 / 2) * 2 + 1","}"],"output\\backgrounds\\rain.js":["const fontSize = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i).test(navigator.userAgent || navigator.vendor || window.opera) ? 50 : 25","","let [width, height] = [0, 0]","","let [lastWidth, lastHeight] = [0, 0]","","let columns = []","let offsets = []","","let words","","let needWords = false","","fetch('./mem.json')","    .then(response => response.json())","    .then(data => {","        const specialChars = '`~!@#$%^&*()_-+={[}]|\\\\:;\"\\'<,>.?/1234567890'.split('')","        words = data.uniqueLines.join(' ')","        while (specialChars.some(char => words.includes(char)))","            specialChars.forEach(char =>","                words = words.split(char).join(' ')","            )","        words = words.split(' ').filter(word => word != '')","","        if (needWords) {","            for (let i = 0; i < height * 2; i += fontSize)","                columns.forEach((colum, index) => drip(colum, index))","            needWords = false","        }","    })","    .catch(error => {","        console.error('Error fetching mem for stats:', error)","    })","","","function fillColumns() {","    columns = [...columns, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize))","    offsets = [...offsets, ...new Array(Math.ceil(width / fontSize)).fill(0)].splice(0, Math.ceil(width / fontSize))","}","","function drip(colum, index) {","    if (Math.random() < .1) {","        if (offsets[index] == 0) {","            const word = (words[Math.floor(Math.random() * words.length)] + '   ').split('')","            offsets[index] = word.length","            const color = `rgb(0,${Math.round(Math.random() * 205) + 50},0)`","            word.forEach((char, index) => colum.unshift([word[word.length - index - 1], color]))","        } else","            offsets[index]--","    } else if (offsets[index] > 0) offsets[index]--","    else colum.unshift([''])","    colum = colum.splice(Math.ceil(height / fontSize) + offsets[index])","}","","export function update(canvas, ctx) {","    if (words == undefined) return","","    if (lastWidth != window.innerWidth || lastHeight != innerHeight) {","        width = canvas.width = window.innerWidth","        height = canvas.height = window.innerHeight","        fillColumns()","    }","    lastWidth = window.innerWidth","    lastHeight = window.innerHeight","","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    ctx.fillStyle = '#000'","    ctx.fillRect(0, 0, width, height)","","    columns.forEach((colum, x) => {","        colum.forEach((item, y) => {","            ctx.fillStyle = item[1]","            ctx.fillText(item[0], x * fontSize, (y - offsets[x]) * fontSize)","        })","    })","","    columns.forEach((colum, index) => {","        if (Math.random() < .1) drip(colum, index)","    })","}","","export function start(canvas) {","    width = canvas.width = window.innerWidth","    height = canvas.height = window.innerHeight","    columns = []","    offsets = []","    fillColumns()","    if (words == undefined)","        needWords = true","    else","        for (let i = 0; i < height * 2; i += fontSize)","            columns.forEach((colum, index) => drip(colum, index))","}"],"output\\backgrounds\\randomSymbols.js":["const fontSize = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i).test(navigator.userAgent || navigator.vendor || window.opera) ? 50 : 25","","const chars = '`~!@#$%^&*()_-+={[}]|\\\\:;\"\\'<,>.?/'.split('')","","let [width, height] = [0, 0]","","let [lastWidth, lastHeight] = [0, 0]","","let grid = [[]]","","function fillGrid(canvas,ctx) {","    width = canvas.width = window.innerWidth","    height = canvas.height = window.innerHeight","","    grid = [...grid, ...new Array(Math.ceil(width / fontSize)).fill(0).map(() => [])].splice(0, Math.ceil(width / fontSize) + 1).map(colum => [...colum, ...new Array(Math.ceil(height / fontSize)).fill(0).map(() => Math.floor(Math.random() * 255))].splice(0, Math.ceil(height / fontSize) + 1))","","    ctx.fillStyle = '#000'","    ctx.fillRect(0, 0, width, height)","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    for (let x = 0; x < width / fontSize; x++)","        for (let y = 0; y < height / fontSize; y++) {","            ctx.fillStyle = `rgb(0,${grid[x][y]},0)`","            ctx.fillText(chars[grid[x][y] % chars.length], x * fontSize, y * fontSize)","        }","}","","export function update(canvas,ctx) {","    if (lastWidth != window.innerWidth || lastHeight != innerHeight)","        fillGrid(canvas,ctx)","    lastWidth = window.innerWidth","    lastHeight = window.innerHeight","","    ctx.font = `${fontSize}px 'Fira Code'`","    ctx.textBaseline = 'top'","","    for (let i = 0; i < Math.random() * 25; i++) {","        const x = Math.floor(Math.random() * grid.length)","        const y = Math.floor(Math.random() * grid[0].length)","        grid[x][y] = Math.floor(Math.random() * 255)","        ctx.fillStyle = '#000'","        ctx.fillRect(x * fontSize, y * fontSize, fontSize, fontSize)","        ctx.fillStyle = `rgb(0,${grid[x][y]},0)`","        ctx.fillText(chars[grid[x][y] % chars.length], x * fontSize, y * fontSize)","    }","}","","export function start(canvas,ctx) {","    fillGrid(canvas,ctx)","}","","export function stop() {","    grid = [[]]","}"],"output\\backgrounds\\uniqueCode.js":["const fontSize = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i).test(navigator.userAgent || navigator.vendor || window.opera) ? 50 : 25","","let [width, height] = [0, 0]","","let [lastWidth, lastHeight] = [0, 0]","","let uniqueLines, lineColors, fontWidth, numberOfUniqueLines","","function stringToNumberHash(str) {","    let hash = 0","    for (let i = 0; i < str.length; i++) {","        hash = str.charCodeAt(i) + ((hash << 5) - hash)","    }","    const maxInt32 = Math.pow(2, 31) - 1","    return (hash & maxInt32) / maxInt32","}","","","fetch('./mem.json')","    .then(response => response.json())","    .then(data => {","        uniqueLines = data.uniqueLines","        lineColors = data.uniqueLines.reduce((acc, line) => ({ ...acc, [line]: stringToNumberHash(line) * 205 + 50 }), {})","        numberOfUniqueLines = data.uniqueLines.length","    })","    .catch(error => {","        console.error('Error fetching mem for stats:', error)","    })","","const linesPerSec = fontSize == 50 ? 5 : 10","","export function update(canvas, ctx) {","    if (uniqueLines != undefined) {","        if (lastWidth != window.innerWidth || lastHeight != innerHeight) {","            width = canvas.width = window.innerWidth","            height = canvas.height = window.innerHeight","        }","        lastWidth = window.innerWidth","        lastHeight = window.innerHeight","","        ctx.font = `${fontSize}px 'Fira Code'`","        ctx.textBaseline = 'top'","","        ctx.fillStyle = '#000'","        ctx.fillRect(0, 0, canvas.width, canvas.height)","","        const lineOffset = String(numberOfUniqueLines).length * fontWidth","        const offset = Date.now() / (1000 / linesPerSec)","        const lineLength = Math.ceil((width - lineOffset) / fontWidth)","        for (let y = -1; y < height / fontSize + 1; y++) {","            const lineNumber = numberOfUniqueLines - (Math.floor(offset) - y + numberOfUniqueLines) % numberOfUniqueLines","            const line = uniqueLines[lineNumber - 1]","            const textY = (y + offset % 1) * fontSize","            ctx.fillStyle = `rgb(0,${lineColors[line]},0)`","            ctx.fillText(lineNumber, (lineOffset - String(lineNumber).length * fontWidth) / 2, textY)","            ctx.fillText(('|' + line).slice(0, lineLength), lineOffset, textY)","        }","    }","}","","export function start(canvas, ctx) {","    ctx.font = `${fontSize}px 'Fira Code'`","    fontWidth = ctx.measureText('0').width","}"],"output\\index.html":["<!DOCTYPE html>","<html lang=\"en\">","<title>Jack's project hub</title>","","<head>","    <meta charset=\"UTF-8\">","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">","    <link rel=\"stylesheet\" href=\"./siteStyles.css\">","    <script src=\"./backgroundManager.js\"></script>","    <script src=\"./updateStats.js\"></script>","","    <!-- Primary Meta Tags -->","    <meta name=\"title\" content=\"Jack's project hub\" />","    <meta name=\"description\"","        content=\"THE place to read about all of my projects, with exclusive content not seen elsewhere!\" />","","    <!-- Open Graph / Facebook -->","    <meta property=\"og:type\" content=\"website\" />","    <meta property=\"og:url\" content=\"https://jacks-project-hub.vercel.app/\" />","    <meta property=\"og:title\" content=\"Jack's project hub\" />","    <meta property=\"og:description\"","        content=\"THE place to read about all of my projects, with exclusive content not seen elsewhere!\" />","    <meta property=\"og:image\" content=\"https://jacks-project-hub.vercel.app/preview.png\" />","","    <!-- Twitter -->","    <meta property=\"twitter:card\" content=\"summary_large_image\" />","    <meta property=\"twitter:url\" content=\"https://jacks-project-hub.vercel.app/\" />","    <meta property=\"twitter:title\" content=\"Jack's project hub\" />","    <meta property=\"twitter:description\"","        content=\"THE place to read about all of my projects, with exclusive content not seen elsewhere!\" />","    <meta property=\"twitter:image\" content=\"https://jacks-project-hub.vercel.app/preview.png\" />","</head>","","<body>","    <canvas id=\"backgroundCanvas\"></canvas>","    <div id=\"overlay\">","        <div class=\"scrollOffset\"></div>","        <div id=\"content\">","            <div id=\"info\">","                <div id=\"titleText\">","                    Jack's project hub","                </div>","                <!-- will autofill on website load -->","            </div>","            <div id=\"posts\">","                <div class=\"post\" onclick=\"window.location.href='./posts/Making a custom blog/'\">\n    <div class=\"title\">\n        \n        <div class=\"markup\" style=\"color:#fff; font-style:normal; font-weight:normal; font-size:calc(xx-large * 0.25); text-decoration: none;margin:0; padding:0; word-wrap:break-word; width:100%; height:100%;\">\n            <div style=\"text-align:center;\">Making a <span style=\"color:#0f0; font-weight:bold;\"><code>|[custom]</code></span> blog</div>\n        </div>\n        \n    </div>\n    \n        <div class=\"markup preview\" style=\"color:#0f0; font-style:normal; font-weight:normal; font-size:small; text-decoration: none;margin:0; padding:0; word-wrap:break-word; width:100%; height:100%;\">\n            <div style=\"text-align:center;\">I like to create posts, but have never found a good platform to do so.<br>Follow along as I create my own blog site, complete with custom markup, live backgrounds, and more!</div>\n        </div>\n        </div>","                <script> //Controls the grid for the posts","                    {","                        const wrapper = document.getElementById('posts')","                        const postPadding = 10","                        const borderSize = 25","                        const updateGrid = () => {","                            const posts = Array.from(document.getElementsByClassName('post'))","                            const maxWidth = wrapper.getBoundingClientRect().width - borderSize * 2","                            Array.from(document.getElementsByClassName('post_row')).forEach(row => row.classList.add('post_row_old'))","                            let lastRowElement = document.createElement('div')","                            lastRowElement.classList.add('post_row')","                            let lastRowWidth = 0","                            for (const post of posts) {","                                const width = post.getBoundingClientRect().width + postPadding * 2","                                if (lastRowWidth === 0 || lastRowWidth + width < maxWidth) {","                                    lastRowElement.appendChild(post)","                                    lastRowWidth += width","                                }","                                else {","                                    wrapper.appendChild(lastRowElement)","                                    lastRowElement = document.createElement('div')","                                    lastRowElement.classList.add('post_row')","                                    lastRowElement.appendChild(post)","                                    lastRowWidth = width","                                }","                            }","                            wrapper.appendChild(lastRowElement)","                            Array.from(document.getElementsByClassName('post_row_old')).forEach(row => row.remove())","                        }","                        document.addEventListener('DOMContentLoaded', updateGrid)","                        window.addEventListener('resize', updateGrid)","                    }","                </script>","            </div>","            <div id=\"returnToTopButton\">","                <span onclick=\"window.scroll({top:0,left:0,behavior:'smooth'})\">Return to top</span>","            </div>","        </div>","        <div class=\"scrollOffset\"></div>","    </div>","</body>","","</html>"],"output\\postStyles.css":[":root {","    --transparentOpacity: 50%;","    --black-solid: rgb(from #000 r g b / var(--transparentOpacity));","    --black: rgb(from #0006 r g b / var(--transparentOpacity));","    --white: rgb(from #fff r g b / var(--transparentOpacity));","    --border: rgb(from #9996 r g b / var(--transparentOpacity));","    --highlight: #0f0f;","    --highlight-dark: #0f06;","    --background: rgb(from #45454582 r g b / var(--transparentOpacity));","    --background-dark: rgb(from #3336 r g b / var(--transparentOpacity));","}","","@font-face {","    font-family: 'Fira Code';","    src: url('../../firaCode.ttf') format('truetype');","    font-weight: normal;","    font-style: normal;","}","","* {","    box-sizing: border-box;","}","","html,","body {","    margin: 0;","    padding: 0;","    overflow: hidden auto;","    background-color: var(--black-solid);","    font-family: 'Fira Code';","}","","#overlay {","    position: absolute;","    top: 0;","    left: 0;","    width: 100%;","    height: calc(100vh - 5px);","    z-index: 1;","    padding: 1px;","    display: grid;","    justify-content: center;","    align-items: center;","    justify-items: center;","}","","#content {","    width: 80vw;","    background-color: var(--background-dark);","    border: 5px solid var(--highlight-dark);","    border-radius: 15px;","    padding: 10px;","    margin: 25px;","}","",".scrollOffset {","    height: 25px;","    width: 1px;","}","","@media (max-aspect-ratio: 1/1) {","    #content {","        width: 100vw;","        margin: 0;","        border-radius: 0;","    }","","    .scrollOffset {","        height: 0;","    }","}","","code {","    font-family: 'Fira Code', monospace;","    border: 2px solid var(--background-dark);","}","","#info {","    background-color: var(--background-dark);","    border: 5px solid var(--background-dark);","    border-radius: 15px 15px 0 0;","    padding: 5px;","    margin-bottom: 15px;","    text-align: center;","    color: var(--highlight);","}","","#info div {","    margin: 2.5px;","}","","","#info #return_link a {","    color: var(--highlight)","}","","#post_background {","    background-color: var(--background);","}","","#post {","    padding: 25px;","    border: 5px solid var(--background-dark);","    border-bottom: none;","    background-color: var(--black);","}","","#backgroundCanvas {","    position: fixed;","    display: block;","}","","img,","video {","    width: 100%;","    object-fit: fill;","    border: 5px solid var(--background-dark);","}","",".video_wrapper {","    filter: blur(5px) saturate(.5);","    color: transparent;","    transition: all .25s ease-in-out","}","",".video_wrapper:hover {","    filter: blur(0) saturate(1);","    color: var(--white);","}","",".video_wrapper span {","    position: absolute;","    top: 50%;","    left: 50%;","    transform: translate(-50%, -50%);","    font-size: 2em;","    text-align: center;","    width: 100%;","    height: 100%;","    display: flex;","    justify-content: center;","    align-items: center;","}","","#returnToTopButton {","    background-color: var(--background);","    border: 5px solid var(--background-dark);","    border-top: none;","    padding: 5px;","    text-align: center;","    color: var(--highlight);","    text-decoration: underline;","    border-radius: 0 0 15px 15px;","}","","#returnToTopButton span {","    cursor: pointer;","}"],"output\\README.md":["# Jack's Project Hub","## A platform for publishing work on my various projects","This repo is auto-generated from post folders, read https://jacks-project-hub.vercel.app/posts/Making%20a%20custom%20blog/ for more info."],"output\\siteStyles.css":[":root {","    --transparentOpacity: 50%;","    --black-solid: rgb(from #000 r g b / var(--transparentOpacity));","    --black: rgb(from #0006 r g b / var(--transparentOpacity));","    --white: rgb(from #fff r g b / var(--transparentOpacity));","    --border: rgb(from #9996 r g b / var(--transparentOpacity));","    --highlight: #0f0f;","    --highlight-dark: #0f06;","    --background: rgb(from #45454582 r g b / var(--transparentOpacity));","    --background-dark: rgb(from #3336 r g b / var(--transparentOpacity));","}","","","@font-face {","    font-family: 'Fira Code';","    src: url('./firaCode.ttf') format('truetype');","    font-weight: normal;","    font-style: normal;","}","","* {","    box-sizing: border-box;","}","","html,","body {","    margin: 0;","    padding: 0;","    overflow: hidden auto;","    background-color: var(--black-solid);","    font-family: 'Fira Code';","}","","#backgroundCanvas {","    position: fixed;","    display: block;","    transition: filter 1s ease-in-out;","}","","#backgroundCanvas.blur {","    filter: blur(25px) brightness(0);","}","","#overlay {","    position: absolute;","    top: 0;","    left: 0;","    width: 100%;","    height: calc(100vh - 5px);","    z-index: 1;","    padding: 1px;","    display: grid;","    justify-content: center;","    align-items: center;","    justify-items: center;","}","","#content {","    width: 80vw;","    background-color: var(--background-dark);","    border: 5px solid var(--highlight-dark);","    border-radius: 15px;","    padding: 10px;","    margin: 25px;","}","",".scrollOffset {","    height: 25px;","    width: 1px;","}","","@media (max-aspect-ratio: 1/1) {","    #content {","        width: 100vw;","        margin: 0;","        border-radius: 0;","    }","","    .scrollOffset {","        height: 0;","    }","}","","code {","    font-family: 'Fira Code', monospace;","    border: 2px solid var(--background-dark);","}","","#titleText {","    font-size: xx-large","}","","#info {","    background-color: var(--background-dark);","    border: 5px solid var(--background-dark);","    border-radius: 15px 15px 0 0;","    padding: 5px;","    margin-bottom: 15px;","    text-align: center;","    color: var(--highlight);","}","","#info div {","    margin: 2.5px;","}","","#posts {","    display: block;","    background-color: var(--background);","    border: 5px solid var(--background-dark);","    /* border-radius: 0 0 15px 15px; */","}","",".post_row {","    display: grid;","    grid-auto-flow: column;","    justify-content: center;","    align-items: center;","}","",".post {","    width: min-content;","    margin: 10px;","    padding: 10px;","    background-color: var(--black);","    border: 5px solid var(--border);","    color: var(--highlight);","    cursor: pointer;","    border-radius: 5px;","}","",".post .title {","    background-color: var(--black);","    padding: 5px;","    text-align: center;","    border: 2px solid var(--highlight-dark);","    margin-bottom: 10px;","    white-space: nowrap;","}","","#returnToTopButton {","    background-color: var(--background);","    border: 5px solid var(--background-dark);","    border-top: none;","    padding: 5px;","    text-align: center;","    color: var(--highlight);","    text-decoration: underline;","    border-radius: 0 0 15px 15px;","}","","#returnToTopButton span {","    cursor: pointer;","}"],"output\\updateStats.js":["function addStat(parent, text) {","    let div = document.createElement('div')","    div.innerHTML = text","    parent.appendChild(div)","}","document.addEventListener('DOMContentLoaded', () => {","    fetch('./mem.json')","        .then(response => response.json())","        .then(mem => {","            const div = document.getElementById('info')","            addStat(div, `Last updated: <code>${Math.floor((Date.now() - mem.lastUpdate) / 86400000)}</code> days ago`)","            addStat(div, `Created out of only <code>${mem.numberOfLines}</code> lines of code`)","            addStat(div, `Current hash: <code>${mem.outputHash}</code>`)","        })","        .catch(error => {","            console.error('Error fetching mem for stats:', error)","        })","})"],"package-lock.json":["{\n  \"name\": \"blog\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"blog\",\n      \"version\": \"1.0.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"chokidar\": \"^3.6.0\",\n        \"express\": \"^4.19.2\",\n        \"mime-types\": \"^2.1.35\",\n        \"puppeteer\": \"^22.12.0\",\n        \"ws\": \"^8.17.1\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.24.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.24.7.tgz\",\n      \"integrity\": \"sha512-BcYH1CVJBO9tvyIZ2jVeXgSIMvGZ2FDRvDdOIVQyuklNKSsx+eppDEBq/g47Ayw+RqNFE+URvOShmf+f/qwAlA==\",\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.24.7\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.24.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.24.7.tgz\",\n      \"integrity\": \"sha512-rR+PBcQ1SMQDDyF6X0wxtG8QyLCgUB0eRAGguqRLfkCA87l7yAP7ehq8SNj96OOGTO8OBV70KhuFYcIkHXOg0w==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.24.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.7.tgz\",\n      \"integrity\": \"sha512-EStJpq4OuY8xYfhGVXngigBJRWxftKX9ksiGDnmlY3o7B/V7KIAc9X4oiK87uPJSc/vs5L869bem5fhZa8caZw==\",\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.24.7\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@puppeteer/browsers/-/browsers-2.3.0.tgz\",\n      \"integrity\": \"sha512-ioXoq9gPxkss4MYhD+SFaU9p1IHFUX0ILAWFPyjGaBdjLsYAlZw6j1iLA0N/m12uVHLFDfSYNF7EQccjinIMDA==\",\n      \"dependencies\": {\n        \"debug\": \"^4.3.5\",\n        \"extract-zip\": \"^2.0.1\",\n        \"progress\": \"^2.0.3\",\n        \"proxy-agent\": \"^6.4.0\",\n        \"semver\": \"^7.6.3\",\n        \"tar-fs\": \"^3.0.6\",\n        \"unbzip2-stream\": \"^1.4.3\",\n        \"yargs\": \"^17.7.2\"\n      },\n      \"bin\": {\n        \"browsers\": \"lib/cjs/main-cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@puppeteer/browsers/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/@tootallnate/quickjs-emscripten\": {\n      \"version\": \"0.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@tootallnate/quickjs-emscripten/-/quickjs-emscripten-0.23.0.tgz\",\n      \"integrity\": \"sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==\"\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"22.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.1.0.tgz\",\n      \"integrity\": \"sha512-AOmuRF0R2/5j1knA3c6G3HOk523Ga+l+ZXltX8SF1+5oqcXijjfTd8fY3XRZqSihEu9XhtQnKYLmkFaoxgsJHw==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~6.13.0\"\n      }\n    },\n    \"node_modules/@types/yauzl\": {\n      \"version\": \"2.10.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.3.tgz\",\n      \"integrity\": \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/agent-base\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-7.1.1.tgz\",\n      \"integrity\": \"sha512-H0TSyFNDMomMNJQBn8wFV5YC/2eJ+VXECwOadZJT554xP6cODZHPX3H9QMQECxvrgiSOP1pHjy1sMWQVYJOUOA==\",\n      \"dependencies\": {\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/agent-base/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/agent-base/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"\n    },\n    \"node_modules/array-flatten\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\"\n    },\n    \"node_modules/ast-types\": {\n      \"version\": \"0.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/ast-types/-/ast-types-0.13.4.tgz\",\n      \"integrity\": \"sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==\",\n      \"dependencies\": {\n        \"tslib\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/b4a\": {\n      \"version\": \"1.6.6\",\n      \"resolved\": \"https://registry.npmjs.org/b4a/-/b4a-1.6.6.tgz\",\n      \"integrity\": \"sha512-5Tk1HLk6b6ctmjIkAcU/Ujv/1WqiDl0F0JdRCR80VsOcUlHcu7pWeWRlOqQLHfDEsVx9YH/aif5AG4ehoCtTmg==\"\n    },\n    \"node_modules/bare-events\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/bare-events/-/bare-events-2.4.2.tgz\",\n      \"integrity\": \"sha512-qMKFd2qG/36aA4GwvKq8MxnPgCQAmBWmSyLWsJcbn8v03wvIPQ/hG1Ms8bPzndZxMDoHpxez5VOS+gC9Yi24/Q==\",\n      \"optional\": true\n    },\n    \"node_modules/bare-fs\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/bare-fs/-/bare-fs-2.3.1.tgz\",\n      \"integrity\": \"sha512-W/Hfxc/6VehXlsgFtbB5B4xFcsCl+pAh30cYhoFyXErf6oGrwjh8SwiPAdHgpmWonKuYpZgGywN0SXt7dgsADA==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"bare-events\": \"^2.0.0\",\n        \"bare-path\": \"^2.0.0\",\n        \"bare-stream\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/bare-os\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/bare-os/-/bare-os-2.4.0.tgz\",\n      \"integrity\": \"sha512-v8DTT08AS/G0F9xrhyLtepoo9EJBJ85FRSMbu1pQUlAf6A8T0tEEQGMVObWeqpjhSPXsE0VGlluFBJu2fdoTNg==\",\n      \"optional\": true\n    },\n    \"node_modules/bare-path\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/bare-path/-/bare-path-2.1.3.tgz\",\n      \"integrity\": \"sha512-lh/eITfU8hrj9Ru5quUp0Io1kJWIk1bTjzo7JH1P5dWmQ2EL4hFUlfI8FonAhSlgIfhn63p84CDY/x+PisgcXA==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"bare-os\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/bare-stream\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/bare-stream/-/bare-stream-2.1.3.tgz\",\n      \"integrity\": \"sha512-tiDAH9H/kP+tvNO5sczyn9ZAA7utrSMobyDchsnyyXBuUe2FSQWbxhtuHB8jwpHYYevVo2UJpcmvvjrbHboUUQ==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"streamx\": \"^2.18.0\"\n      }\n    },\n    \"node_modules/base64-js\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/basic-ftp\": {\n      \"version\": \"5.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/basic-ftp/-/basic-ftp-5.0.5.tgz\",\n      \"integrity\": \"sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==\",\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/body-parser\": {\n      \"version\": \"1.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.2.tgz\",\n      \"integrity\": \"sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"content-type\": \"~1.0.5\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"2.4.1\",\n        \"qs\": \"6.11.0\",\n        \"raw-body\": \"2.5.2\",\n        \"type-is\": \"~1.6.18\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/buffer\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\",\n      \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.1.13\"\n      }\n    },\n    \"node_modules/buffer-crc32\": {\n      \"version\": \"0.2.13\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\",\n      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chromium-bidi\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/chromium-bidi/-/chromium-bidi-0.6.3.tgz\",\n      \"integrity\": \"sha512-qXlsCmpCZJAnoTYI83Iu6EdYQpMYdVkCfq08KDh2pmlVqK5t5IA9mGs4/LwCwp4fqisSOMXZxP3HIh8w8aRn0A==\",\n      \"dependencies\": {\n        \"mitt\": \"3.0.1\",\n        \"urlpattern-polyfill\": \"10.0.0\",\n        \"zod\": \"3.23.8\"\n      },\n      \"peerDependencies\": {\n        \"devtools-protocol\": \"*\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\"\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n      \"dependencies\": {\n        \"safe-buffer\": \"5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/content-type\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz\",\n      \"integrity\": \"sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie-signature\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\"\n    },\n    \"node_modules/cosmiconfig\": {\n      \"version\": \"9.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-9.0.0.tgz\",\n      \"integrity\": \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\",\n      \"dependencies\": {\n        \"env-paths\": \"^2.2.1\",\n        \"import-fresh\": \"^3.3.0\",\n        \"js-yaml\": \"^4.1.0\",\n        \"parse-json\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/d-fischer\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \">=4.9.5\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/data-uri-to-buffer\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-6.0.2.tgz\",\n      \"integrity\": \"sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==\",\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/degenerator\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/degenerator/-/degenerator-5.0.1.tgz\",\n      \"integrity\": \"sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==\",\n      \"dependencies\": {\n        \"ast-types\": \"^0.13.4\",\n        \"escodegen\": \"^2.1.0\",\n        \"esprima\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/destroy\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/devtools-protocol\": {\n      \"version\": \"0.0.1312386\",\n      \"resolved\": \"https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1312386.tgz\",\n      \"integrity\": \"sha512-DPnhUXvmvKT2dFA/j7B+riVLUt9Q6RKJlcppojL5CoRywJJKLDYnRlw0gTFKfgDPHP5E04UoB71SxoJlVZy8FA==\"\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/end-of-stream\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n      \"dependencies\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"node_modules/env-paths\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz\",\n      \"integrity\": \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.2.tgz\",\n      \"integrity\": \"sha512-ErCHMCae19vR8vQGe50xIsVomy19rg6gFu3+r3jkEO46suLMWBksvVyoGgQV+jOfl84ZSOSlmv6Gxa89PmTGmA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/escodegen\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-2.1.0.tgz\",\n      \"integrity\": \"sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==\",\n      \"dependencies\": {\n        \"esprima\": \"^4.0.1\",\n        \"estraverse\": \"^5.2.0\",\n        \"esutils\": \"^2.0.2\"\n      },\n      \"bin\": {\n        \"escodegen\": \"bin/escodegen.js\",\n        \"esgenerate\": \"bin/esgenerate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"optionalDependencies\": {\n        \"source-map\": \"~0.6.1\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/etag\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/express\": {\n      \"version\": \"4.19.2\",\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.19.2.tgz\",\n      \"integrity\": \"sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==\",\n      \"dependencies\": {\n        \"accepts\": \"~1.3.8\",\n        \"array-flatten\": \"1.1.1\",\n        \"body-parser\": \"1.20.2\",\n        \"content-disposition\": \"0.5.4\",\n        \"content-type\": \"~1.0.4\",\n        \"cookie\": \"0.6.0\",\n        \"cookie-signature\": \"1.0.6\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"finalhandler\": \"1.2.0\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"merge-descriptors\": \"1.0.1\",\n        \"methods\": \"~1.1.2\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"path-to-regexp\": \"0.1.7\",\n        \"proxy-addr\": \"~2.0.7\",\n        \"qs\": \"6.11.0\",\n        \"range-parser\": \"~1.2.1\",\n        \"safe-buffer\": \"5.2.1\",\n        \"send\": \"0.18.0\",\n        \"serve-static\": \"1.15.0\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"type-is\": \"~1.6.18\",\n        \"utils-merge\": \"1.0.1\",\n        \"vary\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      }\n    },\n    \"node_modules/extract-zip\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\",\n      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"get-stream\": \"^5.1.0\",\n        \"yauzl\": \"^2.10.0\"\n      },\n      \"bin\": {\n        \"extract-zip\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.17.0\"\n      },\n      \"optionalDependencies\": {\n        \"@types/yauzl\": \"^2.9.1\"\n      }\n    },\n    \"node_modules/extract-zip/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/extract-zip/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/fast-fifo\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-fifo/-/fast-fifo-1.3.2.tgz\",\n      \"integrity\": \"sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==\"\n    },\n    \"node_modules/fd-slicer\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n      \"dependencies\": {\n        \"pend\": \"~1.2.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz\",\n      \"integrity\": \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"2.0.1\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/forwarded\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fresh\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fs-extra\": {\n      \"version\": \"11.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-11.2.0.tgz\",\n      \"integrity\": \"sha512-PmDi3uwK5nFuXh7XDTlVnS17xJS7vW36is2+w3xcv8SVxiB4NyATf4ctkVY5bkSjX0Y4nbvZCq1/EjtEyr9ktw==\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.14\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-uri\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/get-uri/-/get-uri-6.0.3.tgz\",\n      \"integrity\": \"sha512-BzUrJBS9EcUb4cFol8r4W3v1cPsSyajLSthNkz5BxbpDcHN5tIrM10E2eNvfnvBn3DaT3DUgx0OpsBKkaOpanw==\",\n      \"dependencies\": {\n        \"basic-ftp\": \"^5.0.2\",\n        \"data-uri-to-buffer\": \"^6.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"fs-extra\": \"^11.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/get-uri/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/get-uri/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\"\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n      \"dependencies\": {\n        \"depd\": \"2.0.0\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/http-proxy-agent\": {\n      \"version\": \"7.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz\",\n      \"integrity\": \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\",\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/http-proxy-agent/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/http-proxy-agent/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/https-proxy-agent\": {\n      \"version\": \"7.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.5.tgz\",\n      \"integrity\": \"sha512-1e4Wqeblerz+tMKPIq2EMGiiWW1dIjZOksyHWSUm1rmuvw/how9hBHZ38lAGj5ID4Ik6EdkOw7NmWPy6LAwalw==\",\n      \"dependencies\": {\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/https-proxy-agent/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/https-proxy-agent/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ieee754\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n      \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n    },\n    \"node_modules/ip-address\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz\",\n      \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n      \"dependencies\": {\n        \"jsbn\": \"1.1.0\",\n        \"sprintf-js\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/ipaddr.js\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\"\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsbn\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz\",\n      \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\"\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\"\n    },\n    \"node_modules/jsonfile\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\",\n      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n      \"dependencies\": {\n        \"universalify\": \"^2.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"7.18.3\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-7.18.3.tgz\",\n      \"integrity\": \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/media-typer\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/merge-descriptors\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\n      \"integrity\": \"sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w==\"\n    },\n    \"node_modules/methods\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mitt\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz\",\n      \"integrity\": \"sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==\"\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/netmask\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/netmask/-/netmask-2.0.2.tgz\",\n      \"integrity\": \"sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.2.tgz\",\n      \"integrity\": \"sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/pac-proxy-agent\": {\n      \"version\": \"7.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/pac-proxy-agent/-/pac-proxy-agent-7.0.2.tgz\",\n      \"integrity\": \"sha512-BFi3vZnO9X5Qt6NRz7ZOaPja3ic0PhlsmCRYLOpN11+mWBCR6XJDqW5RF3j8jm4WGGQZtBA+bTfxYzeKW73eHg==\",\n      \"dependencies\": {\n        \"@tootallnate/quickjs-emscripten\": \"^0.23.0\",\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"get-uri\": \"^6.0.1\",\n        \"http-proxy-agent\": \"^7.0.0\",\n        \"https-proxy-agent\": \"^7.0.5\",\n        \"pac-resolver\": \"^7.0.1\",\n        \"socks-proxy-agent\": \"^8.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/pac-proxy-agent/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/pac-proxy-agent/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/pac-resolver\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pac-resolver/-/pac-resolver-7.0.1.tgz\",\n      \"integrity\": \"sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==\",\n      \"dependencies\": {\n        \"degenerator\": \"^5.0.0\",\n        \"netmask\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parse-json\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n      \"integrity\": \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"error-ex\": \"^1.3.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"lines-and-columns\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"0.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\n      \"integrity\": \"sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==\"\n    },\n    \"node_modules/pend\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",\n      \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\"\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.1.tgz\",\n      \"integrity\": \"sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/progress\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-2.0.3.tgz\",\n      \"integrity\": \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\",\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/proxy-addr\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n      \"dependencies\": {\n        \"forwarded\": \"0.2.0\",\n        \"ipaddr.js\": \"1.9.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/proxy-agent\": {\n      \"version\": \"6.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-agent/-/proxy-agent-6.4.0.tgz\",\n      \"integrity\": \"sha512-u0piLU+nCOHMgGjRbimiXmA9kM/L9EHh3zL81xCdp7m+Y2pHIsnmbdDoEDoAz5geaonNR6q6+yOPQs6n4T6sBQ==\",\n      \"dependencies\": {\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"http-proxy-agent\": \"^7.0.1\",\n        \"https-proxy-agent\": \"^7.0.3\",\n        \"lru-cache\": \"^7.14.1\",\n        \"pac-proxy-agent\": \"^7.0.1\",\n        \"proxy-from-env\": \"^1.1.0\",\n        \"socks-proxy-agent\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/proxy-agent/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/proxy-agent/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/proxy-from-env\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n      \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"\n    },\n    \"node_modules/pump\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n      \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.1\"\n      }\n    },\n    \"node_modules/puppeteer\": {\n      \"version\": \"22.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/puppeteer/-/puppeteer-22.15.0.tgz\",\n      \"integrity\": \"sha512-XjCY1SiSEi1T7iSYuxS82ft85kwDJUS7wj1Z0eGVXKdtr5g4xnVcbjwxhq5xBnpK/E7x1VZZoJDxpjAOasHT4Q==\",\n      \"hasInstallScript\": true,\n      \"dependencies\": {\n        \"@puppeteer/browsers\": \"2.3.0\",\n        \"cosmiconfig\": \"^9.0.0\",\n        \"devtools-protocol\": \"0.0.1312386\",\n        \"puppeteer-core\": \"22.15.0\"\n      },\n      \"bin\": {\n        \"puppeteer\": \"lib/esm/puppeteer/node/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/puppeteer-core\": {\n      \"version\": \"22.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-22.15.0.tgz\",\n      \"integrity\": \"sha512-cHArnywCiAAVXa3t4GGL2vttNxh7GqXtIYGym99egkNJ3oG//wL9LkvO4WE8W1TJe95t1F1ocu9X4xWaGsOKOA==\",\n      \"dependencies\": {\n        \"@puppeteer/browsers\": \"2.3.0\",\n        \"chromium-bidi\": \"0.6.3\",\n        \"debug\": \"^4.3.6\",\n        \"devtools-protocol\": \"0.0.1312386\",\n        \"ws\": \"^8.18.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/puppeteer-core/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/puppeteer-core/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.0.tgz\",\n      \"integrity\": \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/queue-tick\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/queue-tick/-/queue-tick-1.0.1.tgz\",\n      \"integrity\": \"sha512-kJt5qhMxoszgU/62PLP1CJytzd2NKetjSRnyuj31fDd3Rlcz3fzlFdFLD1SItunPwyqEOkca6GbV612BWfaBag==\"\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n      \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/send\": {\n      \"version\": \"0.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.18.0.tgz\",\n      \"integrity\": \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"mime\": \"1.6.0\",\n        \"ms\": \"2.1.3\",\n        \"on-finished\": \"2.4.1\",\n        \"range-parser\": \"~1.2.1\",\n        \"statuses\": \"2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/send/node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n    },\n    \"node_modules/serve-static\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz\",\n      \"integrity\": \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\",\n      \"dependencies\": {\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"parseurl\": \"~1.3.3\",\n        \"send\": \"0.18.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/smart-buffer\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n      \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n      \"engines\": {\n        \"node\": \">= 6.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/socks\": {\n      \"version\": \"2.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.8.3.tgz\",\n      \"integrity\": \"sha512-l5x7VUUWbjVFbafGLxPWkYsHIhEvmF85tbIeFZWc8ZPtoMyybuEhL7Jye/ooC4/d48FgOjSJXgsF/AJPYCW8Zw==\",\n      \"dependencies\": {\n        \"ip-address\": \"^9.0.5\",\n        \"smart-buffer\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/socks-proxy-agent\": {\n      \"version\": \"8.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-8.0.4.tgz\",\n      \"integrity\": \"sha512-GNAq/eg8Udq2x0eNiFkr9gRg5bA7PXEWagQdeRX4cPSG+X/8V38v637gim9bjFptMk1QWsCTr0ttrJEiXbNnRw==\",\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.1\",\n        \"debug\": \"^4.3.4\",\n        \"socks\": \"^2.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/socks-proxy-agent/node_modules/debug\": {\n      \"version\": \"4.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n      \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/socks-proxy-agent/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\"\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/streamx\": {\n      \"version\": \"2.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/streamx/-/streamx-2.18.0.tgz\",\n      \"integrity\": \"sha512-LLUC1TWdjVdn1weXGcSxyTR3T4+acB6tVGXT95y0nGbca4t4o/ng1wKAGTljm9VicuCVLvRlqFYXYy5GwgM7sQ==\",\n      \"dependencies\": {\n        \"fast-fifo\": \"^1.3.2\",\n        \"queue-tick\": \"^1.0.1\",\n        \"text-decoder\": \"^1.1.0\"\n      },\n      \"optionalDependencies\": {\n        \"bare-events\": \"^2.2.0\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/tar-fs\": {\n      \"version\": \"3.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/tar-fs/-/tar-fs-3.0.6.tgz\",\n      \"integrity\": \"sha512-iokBDQQkUyeXhgPYaZxmczGPhnhXZ0CmrqI+MOb/WFGS9DW5wnfrLgtjUJBvz50vQ3qfRwJ62QVoCFu8mPVu5w==\",\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\",\n        \"tar-stream\": \"^3.1.5\"\n      },\n      \"optionalDependencies\": {\n        \"bare-fs\": \"^2.1.1\",\n        \"bare-path\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/tar-stream\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-3.1.7.tgz\",\n      \"integrity\": \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\",\n      \"dependencies\": {\n        \"b4a\": \"^1.6.4\",\n        \"fast-fifo\": \"^1.2.0\",\n        \"streamx\": \"^2.15.0\"\n      }\n    },\n    \"node_modules/text-decoder\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/text-decoder/-/text-decoder-1.1.1.tgz\",\n      \"integrity\": \"sha512-8zll7REEv4GDD3x4/0pW+ppIxSNs7H1J10IKFZsuOMscumCdM2a+toDGLPA3T+1+fLBql4zbt5z83GEQGGV5VA==\",\n      \"dependencies\": {\n        \"b4a\": \"^1.6.4\"\n      }\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\"\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"2.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.6.3.tgz\",\n      \"integrity\": \"sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==\"\n    },\n    \"node_modules/type-is\": {\n      \"version\": \"1.6.18\",\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"dependencies\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/unbzip2-stream\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz\",\n      \"integrity\": \"sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==\",\n      \"dependencies\": {\n        \"buffer\": \"^5.2.1\",\n        \"through\": \"^2.3.8\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"6.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-6.13.0.tgz\",\n      \"integrity\": \"sha512-xtFJHudx8S2DSoujjMd1WeWvn7KKWFRESZTMeL1RptAYERu29D6jphMjjY+vn96jvN3kVPDNxU/E13VTaXj6jg==\",\n      \"optional\": true\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz\",\n      \"integrity\": \"sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==\",\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      }\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/urlpattern-polyfill\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/urlpattern-polyfill/-/urlpattern-polyfill-10.0.0.tgz\",\n      \"integrity\": \"sha512-H/A06tKD7sS1O1X2SshBVeA5FLycRpjqiBeqGKmBwBDBy28EnRjORxTNe269KSSr5un5qyWi1iL61wLxpd+ZOg==\"\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\"\n    },\n    \"node_modules/ws\": {\n      \"version\": \"8.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.18.0.tgz\",\n      \"integrity\": \"sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==\",\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"bufferutil\": \"^4.0.1\",\n        \"utf-8-validate\": \">=5.0.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"bufferutil\": {\n          \"optional\": true\n        },\n        \"utf-8-validate\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz\",\n      \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\",\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\",\n        \"fd-slicer\": \"~1.1.0\"\n      }\n    },\n    \"node_modules/zod\": {\n      \"version\": \"3.23.8\",\n      \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.23.8.tgz\",\n      \"integrity\": \"sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/colinhacks\"\n      }\n    }\n  }\n}\n"],"postBackgroundManager.js":["document.addEventListener('DOMContentLoaded', async () => {","    const background = await import('./background.js')","    const canvas = document.getElementById('backgroundCanvas')","    const ctx = canvas.getContext('2d')","    if (background.start != undefined) await background.start(canvas, ctx)","","    const maxUps = 60","    let lastUpdate = 0","","    async function update() {","        lastUpdate = Date.now()","        const canvas = document.getElementById('backgroundCanvas')","        if (background.update != undefined) {","            await background.update(canvas, ctx)","            requestAnimationFrame(() => setTimeout(update, 1000 / maxUps - (Date.now() - lastUpdate)))","        }","    }","    update()","})"],"postStyles.css":[":root {","    --transparentOpacity: 50%;","    --black-solid: rgb(from #000 r g b / var(--transparentOpacity));","    --black: rgb(from #0006 r g b / var(--transparentOpacity));","    --white: rgb(from #fff r g b / var(--transparentOpacity));","    --border: rgb(from #9996 r g b / var(--transparentOpacity));","    --highlight: #0f0f;","    --highlight-dark: #0f06;","    --background: rgb(from #45454582 r g b / var(--transparentOpacity));","    --background-dark: rgb(from #3336 r g b / var(--transparentOpacity));","}","","@font-face {","    font-family: 'Fira Code';","    src: url('../../firaCode.ttf') format('truetype');","    font-weight: normal;","    font-style: normal;","}","","* {","    box-sizing: border-box;","}","","html,","body {","    margin: 0;","    padding: 0;","    overflow: hidden auto;","    background-color: var(--black-solid);","    font-family: 'Fira Code';","}","","#overlay {","    position: absolute;","    top: 0;","    left: 0;","    width: 100%;","    height: calc(100vh - 5px);","    z-index: 1;","    padding: 1px;","    display: grid;","    justify-content: center;","    align-items: center;","    justify-items: center;","}","","#content {","    width: 80vw;","    background-color: var(--background-dark);","    border: 5px solid var(--highlight-dark);","    border-radius: 15px;","    padding: 10px;","    margin: 25px;","}","",".scrollOffset {","    height: 25px;","    width: 1px;","}","","@media (max-aspect-ratio: 1/1) {","    #content {","        width: 100vw;","        margin: 0;","        border-radius: 0;","    }","","    .scrollOffset {","        height: 0;","    }","}","","code {","    font-family: 'Fira Code', monospace;","    border: 2px solid var(--background-dark);","}","","#info {","    background-color: var(--background-dark);","    border: 5px solid var(--background-dark);","    border-radius: 15px 15px 0 0;","    padding: 5px;","    margin-bottom: 15px;","    text-align: center;","    color: var(--highlight);","}","","#info div {","    margin: 2.5px;","}","","","#info #return_link a {","    color: var(--highlight)","}","","#post_background {","    background-color: var(--background);","}","","#post {","    padding: 25px;","    border: 5px solid var(--background-dark);","    border-bottom: none;","    background-color: var(--black);","}","","#backgroundCanvas {","    position: fixed;","    display: block;","}","","img,","video {","    width: 100%;","    object-fit: fill;","    border: 5px solid var(--background-dark);","}","",".video_wrapper {","    filter: blur(5px) saturate(.5);","    color: transparent;","    transition: all .25s ease-in-out","}","",".video_wrapper:hover {","    filter: blur(0) saturate(1);","    color: var(--white);","}","",".video_wrapper span {","    position: absolute;","    top: 50%;","    left: 50%;","    transform: translate(-50%, -50%);","    font-size: 2em;","    text-align: center;","    width: 100%;","    height: 100%;","    display: flex;","    justify-content: center;","    align-items: center;","}","","#returnToTopButton {","    background-color: var(--background);","    border: 5px solid var(--background-dark);","    border-top: none;","    padding: 5px;","    text-align: center;","    color: var(--highlight);","    text-decoration: underline;","    border-radius: 0 0 15px 15px;","}","","#returnToTopButton span {","    cursor: pointer;","}"],"README.md":["# Jack's Project Hub","## A platform for publishing work on my various projects","This repo is auto-generated from post folders, read https://jacks-project-hub.vercel.app/posts/Making%20a%20custom%20blog/ for more info."],"siteBackgroundManager.js":["document.addEventListener('DOMContentLoaded', async () => {","    function mixPaths() {","        const lastPath = backgroundPaths[backgroundPaths.length - 1]","        do backgroundPaths.sort(() => Math.random() * 2 - 1)","        while (backgroundPaths.length > 1 && backgroundPaths[0] == lastPath)","    }","    mixPaths()","","    let backgroundIndex = -1","","    const minTimePerBackground = 1000 * 30","    const blurTime = 1000 * 1","    let backgroundStarted = 0","","    let blurred = false","","    let cycle = true","","    let currentBackground = {}","","    let loadedBackgrounds = []","","    const maxUps = 60","    let lastUpdate = 0","","    async function update() {","        lastUpdate = Date.now()","","        const canvas = document.getElementById('backgroundCanvas')","        const ctx = canvas.getContext('2d')","","        if (cycle && minTimePerBackground - (Date.now() - backgroundStarted) <= blurTime && !blurred) {","            canvas.classList.add('blur')","            blurred = true","        }","","        if (cycle && Date.now() - backgroundStarted >= minTimePerBackground) {","            if (currentBackground.stop != undefined) await currentBackground.stop(canvas, ctx)","            backgroundIndex = (backgroundIndex + 1) % backgroundPaths.length","            if (backgroundIndex == 0) mixPaths()","            if (!loadedBackgrounds.includes(backgroundPaths[backgroundIndex])) await new Promise(r => {","                const script = document.createElement('script')","                script.type = 'module'","                script.src = backgroundPaths[backgroundIndex]","                script.onload = r","                document.head.appendChild(script)","                loadedBackgrounds.push(backgroundPaths[backgroundIndex])","            })","            currentBackground = await import(backgroundPaths[backgroundIndex])","            if (currentBackground.start != undefined) await currentBackground.start(canvas, ctx)","            canvas.classList.remove('blur')","            blurred = false","            backgroundStarted = Date.now()","        }","        if (currentBackground.update != undefined) await currentBackground.update(canvas, ctx)","","        //has to be set after the first update so the first background will always get loaded","        cycle = (backgroundPaths.length > 1)","","        requestAnimationFrame(() => setTimeout(update, 1000 / maxUps - (Date.now() - lastUpdate)))","    }","    update()","})"],"siteStyles.css":[":root {","    --transparentOpacity: 50%;","    --black-solid: rgb(from #000 r g b / var(--transparentOpacity));","    --black: rgb(from #0006 r g b / var(--transparentOpacity));","    --white: rgb(from #fff r g b / var(--transparentOpacity));","    --border: rgb(from #9996 r g b / var(--transparentOpacity));","    --highlight: #0f0f;","    --highlight-dark: #0f06;","    --background: rgb(from #45454582 r g b / var(--transparentOpacity));","    --background-dark: rgb(from #3336 r g b / var(--transparentOpacity));","}","","","@font-face {","    font-family: 'Fira Code';","    src: url('./firaCode.ttf') format('truetype');","    font-weight: normal;","    font-style: normal;","}","","* {","    box-sizing: border-box;","}","","html,","body {","    margin: 0;","    padding: 0;","    overflow: hidden auto;","    background-color: var(--black-solid);","    font-family: 'Fira Code';","}","","#backgroundCanvas {","    position: fixed;","    display: block;","    transition: filter 1s ease-in-out;","}","","#backgroundCanvas.blur {","    filter: blur(25px) brightness(0);","}","","#overlay {","    position: absolute;","    top: 0;","    left: 0;","    width: 100%;","    height: calc(100vh - 5px);","    z-index: 1;","    padding: 1px;","    display: grid;","    justify-content: center;","    align-items: center;","    justify-items: center;","}","","#content {","    width: 80vw;","    background-color: var(--background-dark);","    border: 5px solid var(--highlight-dark);","    border-radius: 15px;","    padding: 10px;","    margin: 25px;","}","",".scrollOffset {","    height: 25px;","    width: 1px;","}","","@media (max-aspect-ratio: 1/1) {","    #content {","        width: 100vw;","        margin: 0;","        border-radius: 0;","    }","","    .scrollOffset {","        height: 0;","    }","}","","code {","    font-family: 'Fira Code', monospace;","    border: 2px solid var(--background-dark);","}","","#titleText {","    font-size: xx-large","}","","#info {","    background-color: var(--background-dark);","    border: 5px solid var(--background-dark);","    border-radius: 15px 15px 0 0;","    padding: 5px;","    margin-bottom: 15px;","    text-align: center;","    color: var(--highlight);","}","","#info div {","    margin: 2.5px;","}","","#posts {","    display: block;","    background-color: var(--background);","    border: 5px solid var(--background-dark);","    /* border-radius: 0 0 15px 15px; */","}","",".post_row {","    display: grid;","    grid-auto-flow: column;","    justify-content: center;","    align-items: center;","}","",".post {","    width: min-content;","    margin: 10px;","    padding: 10px;","    background-color: var(--black);","    border: 5px solid var(--border);","    color: var(--highlight);","    cursor: pointer;","    border-radius: 5px;","}","",".post .title {","    background-color: var(--black);","    padding: 5px;","    text-align: center;","    border: 2px solid var(--highlight-dark);","    margin-bottom: 10px;","    white-space: nowrap;","}","","#returnToTopButton {","    background-color: var(--background);","    border: 5px solid var(--background-dark);","    border-top: none;","    padding: 5px;","    text-align: center;","    color: var(--highlight);","    text-decoration: underline;","    border-radius: 0 0 15px 15px;","}","","#returnToTopButton span {","    cursor: pointer;","}"],"updateHomeStats.js":["function addStat(parent, text) {","    let div = document.createElement('div')","    div.innerHTML = text","    parent.appendChild(div)","}","document.addEventListener('DOMContentLoaded', () => {","    fetch('./mem.json')","        .then(response => response.json())","        .then(mem => {","            const div = document.getElementById('info')","            addStat(div, `Last updated: <code>${Math.floor((Date.now() - mem.lastUpdate) / 86400000)}</code> days ago`)","            addStat(div, `Created out of only <code>${mem.numberOfLines}</code> lines of code`)","            addStat(div, `Current hash: <code>${mem.outputHash}</code>`)","        })","        .catch(error => {","            console.error('Error fetching mem for stats:', error)","        })","})"],"updatePostStats.js":["const script = document.currentScript","const addStat = text => {","    const div = document.createElement('div')","    div.innerHTML = text","    script.insertAdjacentElement('afterend', div)","}","document.addEventListener('DOMContentLoaded', () => {","    fetch('../../mem.json')","        .then(response => response.json())","        .then(mem => {","            addStat(`First published: <code>${Math.floor((Date.now() - mem.postsCreated[postName]) / 86400000)}</code> days ago`)","            addStat(`Last updated: <code>${Math.floor((Date.now() - mem.postsUpdated[postName]) / 86400000)}</code> days ago`)","            addStat(`Current hash: <code>${mem.postHashes[postName]}</code>`)","        })","        .catch(error => {","            console.error('Error fetching mem for stats:', error)","        })","})"]},"postsUpdated":{"Making a custom blog":1723000743593,"Github backup":1723000637498},"postsCreated":{"Making a custom blog":1717538615782,"Github backup":1722363364916},"postHashes":{"Making a custom blog":"f129792675938928305d2d75ae5a75c8"}}